From 8cf1fa77f901cad3cacd35e0ff7838d3185090ee Mon Sep 17 00:00:00 2001
From: josue <josue@DESKTOP-S1O2C0E>
Date: 30 oct. 2023 12:33:26

New Versión

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..549e00a
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,33 @@
+HELP.md
+target/
+!.mvn/wrapper/maven-wrapper.jar
+!**/src/main/**/target/
+!**/src/test/**/target/
+
+### STS ###
+.apt_generated
+.classpath
+.factorypath
+.project
+.settings
+.springBeans
+.sts4-cache
+
+### IntelliJ IDEA ###
+.idea
+*.iws
+*.iml
+*.ipr
+
+### NetBeans ###
+/nbproject/private/
+/nbbuild/
+/dist/
+/nbdist/
+/.nb-gradle/
+build/
+!**/src/main/**/build/
+!**/src/test/**/build/
+
+### VS Code ###
+.vscode/
diff --git a/pom.xml b/pom.xml
new file mode 100644
index 0000000..b8784b9
--- /dev/null
+++ b/pom.xml
@@ -0,0 +1,73 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+    <parent>
+        <groupId>org.springframework.boot</groupId>
+        <artifactId>spring-boot-starter-parent</artifactId>
+        <version>2.7.4</version>
+        <relativePath/> <!-- lookup parent from repository -->
+    </parent>
+    <groupId>com.example</groupId>
+    <artifactId>proyectocalid</artifactId>
+    <version>0.0.1-SNAPSHOT</version>
+    <name>proyectocalid</name>
+    <description>Demo project for Spring Boot</description>
+    <properties>
+        <java.version>8</java.version>
+    </properties>
+    <dependencies>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-data-jpa</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-thymeleaf</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-devtools</artifactId>
+            <scope>runtime</scope>
+            <optional>true</optional>
+        </dependency>
+        <dependency>
+            <groupId>mysql</groupId>
+            <artifactId>mysql-connector-java</artifactId>
+            <scope>runtime</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.projectlombok</groupId>
+            <artifactId>lombok</artifactId>
+            <optional>true</optional>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-test</artifactId>
+            <scope>test</scope>
+        </dependency>
+    </dependencies>
+
+    <build>
+        <plugins>
+            <plugin>
+                <groupId>org.springframework.boot</groupId>
+                <artifactId>spring-boot-maven-plugin</artifactId>
+                <configuration>
+                    <excludes>
+                        <exclude>
+                            <groupId>org.projectlombok</groupId>
+                            <artifactId>lombok</artifactId>
+                        </exclude>
+                    </excludes>
+                </configuration>
+            </plugin>
+        </plugins>
+    </build>
+
+</project>
diff --git a/src/main/java/com/example/proyectocalid/AreaTrabajoController.java b/src/main/java/com/example/proyectocalid/AreaTrabajoController.java
new file mode 100644
index 0000000..5cf5508
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/AreaTrabajoController.java
@@ -0,0 +1,89 @@
+package com.example.proyectocalid;
+
+import com.example.proyectocalid.modelo.AreaTrabajo;
+import com.example.proyectocalid.modelo.Colaborador;
+import com.example.proyectocalid.modelo.Persona;
+import com.example.proyectocalid.service.IAreaTrabajoService;
+import java.util.ArrayList;
+import java.util.Optional;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestMethod;
+import org.springframework.web.bind.annotation.RequestParam;
+
+@Controller
+public class AreaTrabajoController {
+
+    
+    @Autowired
+    private IAreaTrabajoService dataAreaTrabajo;
+
+    //LISTADO
+    @GetMapping("/listadoAreaTrabajo")
+    public String listarAreaTrabajo(Model model) {
+        ArrayList<AreaTrabajo> areas = (ArrayList<AreaTrabajo>) dataAreaTrabajo.Listar();
+        model.addAttribute("areas", areas);
+        return "AreaTrabajo/listadoAreaTrabajo";
+    }
+
+    //MOSTRAR REGISTRO
+    @GetMapping("/nuevoAreaTrabajo")
+    public String mostrarAreaTrabajo(Model model) {
+        model.addAttribute("opcionEditar", 0);
+        return "AreaTrabajo/areaTrabajoFormulario";
+    }
+
+    //REGISTRO
+    @RequestMapping(value = "/registrarAreaTrabajo", method = RequestMethod.POST)
+    public String registroAreaTrabajo(@RequestParam("nombre") String nombre,
+            @RequestParam("descripcion") String descripcion,
+            Model model) {
+
+        // Crear Area de Trabajo
+        AreaTrabajo a = new AreaTrabajo();
+        a.setNombre(nombre);
+        a.setDescripcion(descripcion);
+        a.setEstado(1);
+        dataAreaTrabajo.Guardar(a);
+
+        ArrayList<AreaTrabajo> areas = (ArrayList<AreaTrabajo>) dataAreaTrabajo.Listar();
+        model.addAttribute("areas", areas);
+        return "AreaTrabajo/listadoAreaTrabajo";
+    }
+
+    // BUSCAR ÁREA DE TRABAJO
+    @GetMapping("/buscarAreaTrabajo")
+    public String buscarAreaTrabajo(@RequestParam(value = "idAreaTrabajo") int idAreaTrabajo, Model model) {
+        Optional<AreaTrabajo> area = dataAreaTrabajo.ListarId(idAreaTrabajo);
+
+        model.addAttribute("area", area.get());
+        model.addAttribute("opcionEditar", 1);
+        return "AreaTrabajo/areaTrabajoFormulario";
+    }
+
+    // ACTUALIZAR
+    @RequestMapping(value = "/actualizarAreaTrabajo", method = RequestMethod.POST)
+    public String actualizarAreaTrabajo(@RequestParam("idAreaTrabajo") int idAreaTrabajo,
+            @RequestParam("nombre") String nombre,
+            @RequestParam("descripcion") String descripcion,
+            @RequestParam("estado") int estado,
+            Model model) {
+
+        //Crear Area de trabajo
+        AreaTrabajo a = new AreaTrabajo();
+        a.setIdAreaTrabajo(idAreaTrabajo);
+        a.setNombre(nombre);
+        a.setDescripcion(descripcion);
+        a.setEstado(estado);
+        dataAreaTrabajo.Guardar(a);
+
+        //Listar
+        ArrayList<AreaTrabajo> areas = (ArrayList<AreaTrabajo>) dataAreaTrabajo.Listar();
+        model.addAttribute("areas", areas);
+        return "AreaTrabajo/listadoAreaTrabajo";
+    }
+
+}
diff --git a/src/main/java/com/example/proyectocalid/CarritoController.java b/src/main/java/com/example/proyectocalid/CarritoController.java
new file mode 100644
index 0000000..ade8278
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/CarritoController.java
@@ -0,0 +1,7 @@
+
+package com.example.proyectocalid;
+
+public class CarritoController {
+    
+    
+}
diff --git a/src/main/java/com/example/proyectocalid/ClienteController.java b/src/main/java/com/example/proyectocalid/ClienteController.java
new file mode 100644
index 0000000..cacee5e
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/ClienteController.java
@@ -0,0 +1,125 @@
+package com.example.proyectocalid;
+
+import com.example.proyectocalid.modelo.Cliente;
+import com.example.proyectocalid.modelo.Persona;
+import com.example.proyectocalid.service.IClienteService;
+import com.example.proyectocalid.service.IPersonaService;
+import java.util.ArrayList;
+import java.util.Optional;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestMethod;
+import org.springframework.web.bind.annotation.RequestParam;
+
+@Controller
+public class ClienteController {
+
+    
+    @Autowired
+    private IPersonaService dataPersona;
+
+    @Autowired
+    private IClienteService dataCliente;
+
+    //LISTADO
+    @GetMapping("/listadoCliente")
+    public String listarClientes(Model model) {
+        ArrayList<Cliente> clientes = (ArrayList<Cliente>) dataCliente.Listar();
+        model.addAttribute("clientes", clientes);
+        return "Cliente/gestionCliente";
+    }
+
+    //MOSTRAR REGISTRO
+    @GetMapping("/nuevoCliente")
+    public String mostrarCliente(Model model) {
+        model.addAttribute("opcionEditar", 0);
+        return "Cliente/clienteFormulario";
+    }
+
+    //REGISTRAR
+    @RequestMapping(value = "/registrarCliente", method = RequestMethod.POST)
+    public String registrarCliente(@RequestParam("nombre") String nombre,
+            @RequestParam("apellido") String apellido,
+            @RequestParam("email") String email,
+            @RequestParam("telefono") String telefono,
+            @RequestParam("nombreUsuario") String nombreUsuario,
+            @RequestParam("clave") String clave,
+            Model model) {
+
+        // Crear Persona
+        Persona p = new Persona();
+        p.setNombre(nombre);
+        p.setApellido(apellido);
+        p.setEmail(email);
+        p.setTelefono(telefono);
+        // Registrar Persona y recuperarlo
+        Persona persona = dataPersona.Registrar(p);
+
+        // Crear Cliente
+        Cliente c = new Cliente();
+        c.setIdPersona(persona);
+        c.setNombreUsuario(nombreUsuario);
+        c.setClave(clave);
+        c.setEstado(1);
+
+        // Registrar Cliente
+        dataCliente.Guardar(c);
+
+        // Listar Clientes        
+        ArrayList<Cliente> clientes = (ArrayList<Cliente>) dataCliente.Listar();
+        model.addAttribute("clientes", clientes);
+        return "Cliente/gestionCliente";
+    }
+
+    // BUSCAR CLIENTE
+    @GetMapping("/buscarCliente")
+    public String buscarCliente(@RequestParam(value = "idCliente") int idCliente, Model model) {
+        Optional<Cliente> cliente = dataCliente.ListarId(idCliente);
+
+        model.addAttribute("cliente", cliente.get());
+        model.addAttribute("opcionEditar", 1);
+        return "Cliente/clienteFormulario";
+    }
+
+    // ACTUALIZAR
+    @RequestMapping(value = "/actualizarCliente", method = RequestMethod.POST)
+    public String actualizarCliente(@RequestParam("idCliente") int idCliente,
+            @RequestParam("idPersona") int idPersona,
+            @RequestParam("nombre") String nombre,
+            @RequestParam("apellido") String apellido,
+            @RequestParam("email") String email,
+            @RequestParam("telefono") String telefono,
+            @RequestParam("nombreUsuario") String nombreUsuario,
+            @RequestParam("clave") String clave,
+            @RequestParam("estado") int estado,
+            Model model) {
+
+        // Crear Persona
+        Persona p = new Persona();
+        p.setIdPersona(idPersona);
+        p.setApellido(apellido);
+        p.setEmail(email);
+        p.setNombre(nombre);
+        p.setTelefono(telefono);
+        dataPersona.Guardar(p);
+
+        //Crear Cliente
+        Cliente c = new Cliente();
+        c.setIdCliente(idCliente);
+        c.setNombreUsuario(nombreUsuario);
+        c.setClave(clave);
+        c.setEstado(estado);
+        c.setIdPersona(dataPersona.ListarId(idPersona).get());
+
+        //Guardar
+        dataCliente.Guardar(c);
+
+        //Listar
+        ArrayList<Cliente> clientes = (ArrayList<Cliente>) dataCliente.Listar();
+        model.addAttribute("clientes", clientes);
+        return "Cliente/gestionCliente";
+    }
+}
diff --git a/src/main/java/com/example/proyectocalid/ColaboradorController.java b/src/main/java/com/example/proyectocalid/ColaboradorController.java
new file mode 100644
index 0000000..4e00f18
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/ColaboradorController.java
@@ -0,0 +1,134 @@
+package com.example.proyectocalid;
+
+import com.example.proyectocalid.modelo.AreaTrabajo;
+import com.example.proyectocalid.modelo.Colaborador;
+import com.example.proyectocalid.modelo.Persona;
+import com.example.proyectocalid.service.IAreaTrabajoService;
+import com.example.proyectocalid.service.IColaboradorService;
+import com.example.proyectocalid.service.IPersonaService;
+import java.util.ArrayList;
+import java.util.Optional;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestMethod;
+import org.springframework.web.bind.annotation.RequestParam;
+
+@Controller
+public class ColaboradorController {
+
+    
+    @Autowired
+    private IPersonaService dataPersona;
+
+    @Autowired
+    private IColaboradorService dataColaborador;
+
+    @Autowired
+    private IAreaTrabajoService dataAreaTrabajo;
+
+    //LISTADO
+    @GetMapping("/listadoColaborador")
+    public String listarColaboradores(Model model) {
+        ArrayList<Colaborador> colaboradores = (ArrayList<Colaborador>) dataColaborador.Listar();
+        ArrayList<AreaTrabajo> areas = (ArrayList<AreaTrabajo>) dataAreaTrabajo.Listar();
+        model.addAttribute("colaboradores", colaboradores);
+        model.addAttribute("areas", areas);
+        return "Colaborador/gestionColaborador";
+    }
+
+    //MOSTRAR REGISTRO
+    @GetMapping("/nuevoColaborador")
+    public String mostrarColaborador(Model model) {
+        ArrayList<AreaTrabajo> areas = dataAreaTrabajo.areasTrabajoActivos();
+        model.addAttribute("areas", areas);
+        model.addAttribute("opcionEditar", 0);
+        return "Colaborador/colaboradorFormulario";
+    }
+
+    //REGISTRO
+    @RequestMapping(value = "/registrarColaborador", method = RequestMethod.POST)
+    public String registroColaborador(@RequestParam("nombre") String nombre,
+            @RequestParam("apellido") String apellido,
+            @RequestParam("areaTrabajo") AreaTrabajo area,
+            @RequestParam("email") String email,
+            @RequestParam("telefono") String telefono,
+            Model model) {
+
+        // Crear Persona
+        Persona p = new Persona();
+        p.setNombre(nombre);
+        p.setApellido(apellido);
+        p.setEmail(email);
+        p.setTelefono(telefono);
+        // Registrar Persona y recuperarlo
+        Persona persona = dataPersona.Registrar(p);
+
+        // Crear Colaborador
+        Colaborador c = new Colaborador();
+        c.setIdPersona(persona);
+        c.setIdAreaTrabajo(area);
+        c.setEstado(1);
+        //Registrar
+        dataColaborador.Guardar(c);
+
+        // Listar Usuarios        
+        ArrayList<Colaborador> colaboradores = (ArrayList<Colaborador>) dataColaborador.Listar();
+        ArrayList<AreaTrabajo> areas = (ArrayList<AreaTrabajo>) dataAreaTrabajo.Listar();
+        model.addAttribute("colaboradores", colaboradores);
+        model.addAttribute("areas", areas);
+        return "Colaborador/gestionColaborador";
+    }
+
+    // BUSCAR COLABORADOR
+    @GetMapping("/buscarColaborador")
+    public String buscarColaborador(@RequestParam(value = "idColaborador") int idColaborador, Model model) {
+        Optional<Colaborador> colaborador = dataColaborador.ListarId(idColaborador);
+        ArrayList<AreaTrabajo> areas = dataAreaTrabajo.areasTrabajoActivos();
+
+        model.addAttribute("areas", areas);
+        model.addAttribute("colaborador", colaborador.get());
+        model.addAttribute("opcionEditar", 1);
+        //model.addAttribute("opcion", "actualizarUsuario");
+        return "Colaborador/colaboradorFormulario";
+    }
+
+    // ACTUALIZAR
+    @RequestMapping(value = "/actualizarColaborador", method = RequestMethod.POST)
+    public String actualizarColaborador(@RequestParam("idColaborador") int idColaborador,
+            @RequestParam("idPersona") int idPersona,
+            @RequestParam("nombre") String nombre,
+            @RequestParam("apellido") String apellido,
+            @RequestParam("email") String email,
+            @RequestParam("telefono") String telefono,
+            @RequestParam("areaTrabajo") AreaTrabajo area,
+            @RequestParam("estado") int estado,
+            Model model) {
+
+        // Crear Persona
+        Persona p = new Persona();
+        p.setIdPersona(idPersona);
+        p.setApellido(apellido);
+        p.setEmail(email);
+        p.setNombre(nombre);
+        p.setTelefono(telefono);
+        dataPersona.Guardar(p);
+
+        //Crear Colaborador
+        Colaborador c = new Colaborador();
+        c.setIdColaborador(idColaborador);
+        c.setEstado(estado);
+        c.setIdAreaTrabajo(area);
+        c.setIdPersona(dataPersona.ListarId(idPersona).get());
+        dataColaborador.Guardar(c);
+
+        //Listar
+        ArrayList<Colaborador> colaboradores = (ArrayList<Colaborador>) dataColaborador.Listar();
+        ArrayList<AreaTrabajo> areas = (ArrayList<AreaTrabajo>) dataAreaTrabajo.Listar();
+        model.addAttribute("colaboradores", colaboradores);
+        model.addAttribute("areas", areas);
+        return "Colaborador/gestionColaborador";
+    }
+}
diff --git a/src/main/java/com/example/proyectocalid/Controlador.java b/src/main/java/com/example/proyectocalid/Controlador.java
new file mode 100644
index 0000000..ea4c9b0
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/Controlador.java
@@ -0,0 +1,330 @@
+package com.example.proyectocalid;
+
+import com.example.proyectocalid.modelo.*;
+import com.example.proyectocalid.service.IPersonaService;
+import com.example.proyectocalid.service.IProductoService;
+import com.example.proyectocalid.service.IUsuarioService;
+import java.io.IOException;
+import java.nio.file.Files;
+import java.nio.file.Path;
+import java.nio.file.Paths;
+import java.util.ArrayList;
+import java.util.Optional;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestMethod;
+import org.springframework.web.bind.annotation.RequestParam;
+import org.springframework.web.multipart.MultipartFile;
+
+@Controller
+public class Controlador {
+
+    private ArrayList<Usuario> users;
+    private ArrayList<Producto> product;
+    private Usuario log;
+
+    
+    @Autowired
+    private IPersonaService dataPersona;
+    @Autowired
+    private IUsuarioService dataUsuario;
+    @Autowired
+    private IProductoService dataProducto;
+
+    @GetMapping("/")
+    public String inicio(Model model) {
+        model.addAttribute("aux", 0);
+        return "login";
+    }
+
+    Usuario userLog = new Usuario();
+
+    private void leerUsuarios() {
+
+        Usuario user1 = new Usuario();
+        user1.setNombreUsuario("admin");
+        user1.setClave("123");
+        this.userLog = user1;
+        
+        
+        Usuario user2 = new Usuario();
+        user2.setNombreUsuario("jhos");
+        user2.setClave("123");
+        this.userLog = user2;
+    }
+
+    @RequestMapping(value = "/Ingresar", method = RequestMethod.POST)
+    public String loguearse(@RequestParam("user") String usr, @RequestParam("pass") String pss, Model model) {
+        ArrayList<Usuario> usuarios = (ArrayList<Usuario>) dataUsuario.usuariosActivos();
+        /*for (Usuario user : usuarios) {
+            if (user.getNombreUsuario().equals(usr) && user.getClave().equals(pss)) {
+                return "index";
+            }
+        }*/
+        if (usr.equals("admin") && pss.equals("123")) {
+            log = userLog;
+            return "index";
+        }
+        if (usr.equals("jhos") && pss.equals("123")) {
+            log = userLog;
+            return "index";
+        }
+        return "login";
+    }
+
+    @GetMapping("/Ingresar")
+    public String ingresarPermiso(Model model) {
+        if (log != null) {
+            model.addAttribute("usuario", log);
+            return "index";
+        } else {
+            return "login";
+        }
+    }
+
+    @GetMapping("/Logout")
+    public String salir() {
+        log = null;
+        return "login";
+    }
+
+    @GetMapping("/Gestionar-Productos")
+    public String gestionProductos(Model model) {
+        if (log != null) {
+            model.addAttribute("productos", product);
+            return "index";
+        } else {
+            return "login";
+        }
+    }
+
+    ///MODULO DE USUARIOS    
+    @GetMapping("/listadoUsuario")
+    public String listarServicios(Model model) {
+        ArrayList<Usuario> usuarios = (ArrayList<Usuario>) dataUsuario.Listar();
+        //ArrayList<TipoUsuario> tipoUsuarios = (ArrayList<TipoUsuario>) dataTipoUsuario.Listar();
+        model.addAttribute("usuarios", usuarios);
+        //model.addAttribute("tipoUsuarios", tipoUsuarios);
+        return "listadoUsuario";
+    }
+
+    @GetMapping("/nuevoUsuario")
+    public String nuevoUsuario(Model model) {
+        model.addAttribute("opcionEditar", 0);
+        return "usuarioFormular";
+    }
+
+    @RequestMapping(value = "/registrarUsuario", method = RequestMethod.POST)
+    public String registroUsuario(@RequestParam("nombre") String nombre,
+            @RequestParam("apellido") String apellido,
+            @RequestParam("email") String email,
+            @RequestParam("telefono") String telefono,
+            @RequestParam("nombreUsuario") String nombreUsuario,
+            @RequestParam("clave") String clave,
+            //@RequestParam("tipoUsuario") TipoUsuario tipoUsuario,
+            Model model) {
+
+        // Crear Persona
+        Persona p = new Persona();
+        p.setNombre(nombre);
+        p.setApellido(apellido);
+        p.setEmail(email);
+        p.setTelefono(telefono);
+        // Registrar Persona y recuperarlo
+        Persona persona = dataPersona.Registrar(p);
+
+        // Crear Usuario
+        Usuario usuario = new Usuario();
+        usuario.setNombreUsuario(nombreUsuario);
+        usuario.setClave(clave);
+        usuario.setIdPersona(persona);
+        usuario.setEstado(1);
+        //usuario.setIdTipoUsuario(tipoUsuario);
+
+        // Registrar Usuario
+        dataUsuario.Guardar(usuario);
+
+        // Listar Usuarios        
+        ArrayList<Usuario> usuarios = (ArrayList<Usuario>) dataUsuario.Listar();
+        //ArrayList<TipoUsuario> tipoUsuarios = (ArrayList<TipoUsuario>) dataTipoUsuario.Listar();
+        model.addAttribute("usuarios", usuarios);
+        //model.addAttribute("tipoUsuarios", tipoUsuarios);
+        return "listadoUsuario";
+    }
+
+    @GetMapping("/eliminarUsuario")
+    public String eliminarUsuario(int idUsuario, Model model) {
+        // Eliminar
+        dataUsuario.Eliminar(idUsuario);
+
+        ArrayList<Usuario> usuarios = (ArrayList<Usuario>) dataUsuario.Listar();
+        //ArrayList<TipoUsuario> tipoUsuarios = (ArrayList<TipoUsuario>) dataTipoUsuario.Listar();
+
+        model.addAttribute("usuarios", usuarios);
+        //model.addAttribute("tipoUsuarios", tipoUsuarios);
+        return "listadoUsuario";
+    }
+
+    // Buscar Usuario - Editar
+    @GetMapping("/buscarUsuario")
+    public String buscarUsuario(@RequestParam(value = "idUsuario") int idUsuario, Model model) {
+        Optional<Usuario> usuario = dataUsuario.ListarId(idUsuario);
+        //ArrayList<TipoUsuario> tipoUsuarios = (ArrayList<TipoUsuario>) dataTipoUsuario.Listar();
+
+        //model.addAttribute("tipoUsuarios", tipoUsuarios);
+        model.addAttribute("usuario", usuario.get());
+        model.addAttribute("opcionEditar", 1);
+        model.addAttribute("opcion", "actualizarUsuario");
+        return "usuarioFormular";
+    }
+
+    // Actualizar Usuario
+    @RequestMapping(value = "/actualizarUsuario", method = RequestMethod.POST)
+    public String actualizarUsuario(@RequestParam("idUsuario") String idUsuario,
+            @RequestParam("idPersona") String idPersona,
+            @RequestParam("nombre") String nombre,
+            @RequestParam("apellido") String apellido,
+            @RequestParam("email") String email,
+            @RequestParam("telefono") String telefono,
+            @RequestParam("estado") int estado,
+            @RequestParam("nombreUsuario") String nombreUsuario,
+            @RequestParam("clave") String clave,
+            //@RequestParam("tipoUsuario") TipoUsuario tipoUsuario,
+            Model model) {
+
+        int idU = Integer.valueOf(idUsuario);
+        int idP = Integer.valueOf(idPersona);
+
+        // Crear Persona
+        Persona p = new Persona();
+        p.setIdPersona(idP);
+        p.setApellido(apellido);
+        p.setEmail(email);
+        p.setNombre(nombre);
+        p.setTelefono(telefono);
+        dataPersona.Guardar(p);
+
+        // Crear Usuario
+        Usuario u = new Usuario();
+        u.setIdUsuario(idU);
+        u.setEstado(estado);
+        u.setClave(clave);
+        u.setNombreUsuario(nombreUsuario);
+        u.setIdPersona(dataPersona.ListarId(idP).get());
+        //u.setIdTipoUsuario(tipoUsuario);
+        dataUsuario.Guardar(u);
+
+        // Listar
+        ArrayList<Usuario> usuarios = (ArrayList<Usuario>) dataUsuario.Listar();
+        //ArrayList<TipoUsuario> tipoUsuarios = (ArrayList<TipoUsuario>) dataTipoUsuario.Listar();
+
+        model.addAttribute("usuarios", usuarios);
+        //model.addAttribute("tipoUsuarios", tipoUsuarios);
+        return "listadoUsuario";
+    }
+
+    /**
+     * *****Carrito de compras*****
+     */
+    @GetMapping("/carritoCompras")
+    public String carroCompas(Model model) {
+        return "CarritoV";
+    }
+
+    ///MODULO DE PRODUCTOS    
+    @GetMapping("/gestionProductos")
+    public String listarProductos(Model model) {
+        ArrayList<Producto> productos = (ArrayList<Producto>) dataProducto.Listar();
+
+        //ArrayList<TipoUsuario> tipoUsuarios = (ArrayList<TipoUsuario>) dataTipoUsuario.Listar();
+        model.addAttribute("productos", productos);
+        return "gestionProducto";
+    }
+
+    @GetMapping("/nuevoProducto")
+    public String nuevoProducto(Model model) {
+        model.addAttribute("opcionEditar", 0);
+        return "gestionProductoFormulario";
+    }
+
+    @RequestMapping(value = "/registrarProducto", method = RequestMethod.POST)
+    public String registroProducto(@RequestParam("nombre") String nombre,
+            @RequestParam("descripcion") String descripcion,
+            @RequestParam("precio") Double precio,
+            //@RequestParam("imagen") MultipartFile imagen,
+            Model model) {
+
+        // Crear Producto
+        Producto p = new Producto();
+        p.setNombre(nombre);
+        p.setDescripcion(descripcion);
+        p.setEstado(1);
+        p.setPrecio(precio);
+
+        /*if (!imagen.isEmpty()) {
+            Path directorioImagen = Paths.get("src//main//resources//static/images");
+            String rutaAbsoluta = directorioImagen.toFile().getAbsolutePath();
+            //String rutaAbsoluta = "C://Producto//recursos";
+
+            try {
+                byte[] bytesImg = imagen.getBytes();
+                Path rutaCompleta = Paths.get(rutaAbsoluta + "//" + imagen.getOriginalFilename());
+                Files.write(rutaCompleta, bytesImg);
+                //Setear imagen
+                p.setImagen(imagen.getOriginalFilename());
+            } catch (IOException ex) {
+                ex.printStackTrace();
+            }
+        }*/
+        // Registrar Producto
+        dataProducto.Guardar(p);
+        // Recuperar listado
+        ArrayList<Producto> productos = (ArrayList<Producto>) dataProducto.Listar();
+        model.addAttribute("productos", productos);
+
+        return "gestionProducto";
+    }
+
+    // Buscar Producto - Editar
+    @GetMapping("/buscarProducto")
+    public String buscarProducto(@RequestParam(value = "idProducto") int idProducto, Model model) {
+        Optional<Producto> producto = dataProducto.ListarId(idProducto);
+
+        //model.addAttribute("tipoUsuarios", tipoUsuarios);
+        model.addAttribute("producto", producto.get());
+        model.addAttribute("opcionEditar", 1);
+        model.addAttribute("opcion", "actualizarProducto");
+        //model.addAttribute("opcion", "actualizarUsuario");
+        return "gestionProductoFormulario";
+    }
+
+    // Actualizar Producto
+    @RequestMapping(value = "/actualizarProducto", method = RequestMethod.POST)
+    public String actualizarProducto(@RequestParam("idProducto") int idProducto,
+            @RequestParam("nombre") String nombre,
+            @RequestParam("descripcion") String descripcion,
+            @RequestParam("precio") Double precio,
+            @RequestParam("estado") int estado,
+            //@RequestParam("imagen") MultipartFile imagen,
+            Model model) {
+
+        // Crear Producto
+        Producto p = new Producto();
+        p.setIdProducto(idProducto);
+        p.setNombre(nombre);
+        p.setDescripcion(descripcion);
+        p.setPrecio(precio);
+        p.setEstado(estado);
+        //p.setImagen(imagen);
+        dataProducto.Guardar(p);
+
+        // Listar
+        ArrayList<Producto> productos = (ArrayList<Producto>) dataProducto.Listar();
+
+        model.addAttribute("productos", productos);
+        return "gestionProducto";
+    }    
+}
diff --git a/src/main/java/com/example/proyectocalid/DeliveryController.java b/src/main/java/com/example/proyectocalid/DeliveryController.java
new file mode 100644
index 0000000..8ddcb6d
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/DeliveryController.java
@@ -0,0 +1,51 @@
+package com.example.proyectocalid;
+
+import com.example.proyectocalid.modelo.Cliente;
+import com.example.proyectocalid.modelo.Delivery;
+import com.example.proyectocalid.service.IDeliveryService;
+import java.util.ArrayList;
+import java.util.Optional;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestMethod;
+import org.springframework.web.bind.annotation.RequestParam;
+
+@Controller
+public class DeliveryController {
+
+    @Autowired
+    private IDeliveryService dataDelivery;
+
+    // LISTADO DE DELIVERY
+    @GetMapping("/listadoDeliverys")
+    public String listadoDeliverys(Model model) {
+        ArrayList<Delivery> deliverys = (ArrayList<Delivery>) dataDelivery.Listar();
+        model.addAttribute("deliverys", deliverys);
+        return "Delivery/listadoDelivery";
+    }
+
+    // BUSCAR DELIVERY
+    @GetMapping("/buscarDelivery")
+    public String buscarDelivery(@RequestParam(value = "idDelivery") int idDelivery, Model model) {
+        Optional<Delivery> delivery = dataDelivery.ListarId(idDelivery);
+
+        model.addAttribute("delivery", delivery.get());
+        return "Delivery/editarDelivery";
+    }
+
+    // ACTUALIZAR
+    @RequestMapping(value = "/actualizarDelivery", method = RequestMethod.POST)
+    public String actualizarDelivery(@RequestParam("idDelivery") int idDelivery,
+            @RequestParam("estado") String estado,
+            Model model) {
+        
+        Optional<Delivery> delivery = dataDelivery.ListarId(idDelivery);
+        delivery.get().setEstado(estado);
+        //Guardar
+        dataDelivery.Guardar(delivery.get());
+        return listadoDeliverys(model);
+    }
+}
diff --git a/src/main/java/com/example/proyectocalid/ModuloClienteController.java b/src/main/java/com/example/proyectocalid/ModuloClienteController.java
new file mode 100644
index 0000000..600d831
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/ModuloClienteController.java
@@ -0,0 +1,264 @@
+package com.example.proyectocalid;
+
+import com.example.proyectocalid.modelo.Carrito;
+import com.example.proyectocalid.modelo.Cliente;
+import com.example.proyectocalid.modelo.Delivery;
+import com.example.proyectocalid.modelo.Pago;
+import com.example.proyectocalid.modelo.Producto;
+import com.example.proyectocalid.modelo.Tarjeta;
+import com.example.proyectocalid.modelo.Venta;
+import com.example.proyectocalid.modelo.VentaDetalle;
+import com.example.proyectocalid.service.ICarritoService;
+import com.example.proyectocalid.service.IClienteService;
+import com.example.proyectocalid.service.IDeliveryService;
+import com.example.proyectocalid.service.IPagoService;
+import com.example.proyectocalid.service.IProductoService;
+import com.example.proyectocalid.service.ITarjetaService;
+import com.example.proyectocalid.service.IVentaDetalleService;
+import com.example.proyectocalid.service.IVentaService;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Calendar;
+import java.util.Optional;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestMethod;
+import org.springframework.web.bind.annotation.RequestParam;
+
+@Controller
+public class ModuloClienteController {
+
+    
+    @Autowired
+    private IClienteService dataCliente;
+    @Autowired
+    private IVentaService dataVenta;
+    @Autowired
+    private IPagoService dataPago;
+    @Autowired
+    private ITarjetaService dataTarjeta;
+    @Autowired
+    private IVentaDetalleService dataVentaDetalle;
+    @Autowired
+    private IProductoService dataProducto;
+    @Autowired
+    private ICarritoService dataCarrito;
+    @Autowired
+    private IDeliveryService dataDelivery;
+
+    //CLIENTE LOGUEADO
+    private Cliente log;
+
+    //MODULO CLIENTE CLIENTE
+    @GetMapping("/elDorado")
+    public String inicio(Model model) {
+        model.addAttribute("aux", 0);
+        return "ModuloCliente/loginCliente";
+    }
+
+    //LOGIN CLIENTE
+    @RequestMapping(value = "/IngresarCliente", method = RequestMethod.POST)
+    public String loguearse(@RequestParam("user") String usr, @RequestParam("pass") String pss, Model model) {
+        ArrayList<Cliente> clientes = (ArrayList<Cliente>) dataCliente.clientesActivos();
+
+        for (Cliente user : clientes) {
+            if (user.getNombreUsuario().equals(usr) && user.getClave().equals(pss)) {
+                this.log = user;
+                return mostrarMenuCliente(model);
+            }
+        }
+        return inicio(model);
+    }
+
+    //MENU CLIENTE
+    @GetMapping("/MenuCliente")
+    public String mostrarMenuCliente(Model model) {
+        /*if (log != null) {
+            model.addAttribute("usuario", log);
+            return "index";
+        } else {
+            return "login";
+        }*/
+        return "ModuloCliente/indexCliente";
+    }
+
+    //LISTAR PRODUCTOS
+    @GetMapping("/listadoProductos")
+    public String listarProductos(Model model) {
+        ArrayList<Producto> productos = (ArrayList<Producto>) dataProducto.productosActivos();
+        model.addAttribute("productos", productos);
+        return "ModuloCliente/listadoProductos";
+    }
+
+    // AGREGAR A CARRITO
+    @GetMapping("/agregarCarrito")
+    public String agregarCarrito(@RequestParam(value = "idProducto") int idProducto, Model model) {
+        String fecha = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss").format(Calendar.getInstance().getTime());
+
+        //Recuperar datos
+        Optional<Producto> producto = dataProducto.ListarId(idProducto);
+        Carrito carrito = dataCarrito.buscarCarritoDeCliente(this.log.getIdCliente());
+        System.out.println("Prueba de cliente" + log.getIdCliente());
+        System.out.println("Prueba de carrito" + carrito);
+        if (carrito == null) { //CUANDO NO TIENE DATA EN CARRITO
+            //Crear Venta
+            Venta venta = new Venta();
+            venta.setCancelado(0);
+            venta.setFecha(fecha);
+            venta.setIdCliente(this.log);
+            //Registrar Venta y recuperar
+            Venta v = dataVenta.Registrar(venta);
+
+            //Crear Detalle de Venta
+            VentaDetalle ventaDetalle = new VentaDetalle();
+            ventaDetalle.setIdVenta(v);
+            ventaDetalle.setIdProducto(producto.get());
+            ventaDetalle.setCantidad(1);
+            ventaDetalle.setPrecio(producto.get().getPrecio());
+            ventaDetalle.setTotal(producto.get().getPrecio());
+            //Registrar
+            dataVentaDetalle.Guardar(ventaDetalle);
+
+            //Crear Carrito
+            Carrito car = new Carrito();
+            car.setCancelado(0);
+            car.setIdCliente(this.log);
+            car.setIdVenta(v);
+            //Registrar
+            dataCarrito.Guardar(car);
+        } else { //CUANDO TIENE DATA EN CARRITO
+            //Recuperar Venta
+            Optional<Venta> venta = dataVenta.ListarId(carrito.getIdVenta().getIdVenta());
+
+            //Agregar Detalle de Venta
+            VentaDetalle ventaDetalle = new VentaDetalle();
+            ventaDetalle.setIdVenta(venta.get());
+            ventaDetalle.setIdProducto(producto.get());
+            ventaDetalle.setCantidad(1);
+            ventaDetalle.setPrecio(producto.get().getPrecio());
+            ventaDetalle.setTotal(producto.get().getPrecio());
+            //Registrar
+            dataVentaDetalle.Guardar(ventaDetalle);
+        }
+        return listarProductos(model);
+    }
+
+    // DETALLE DE CARRITO
+    @GetMapping("/detalleCarrito")
+    public String detalleCarrito(Model model) {
+        Carrito carrito = dataCarrito.buscarCarritoDeCliente(this.log.getIdCliente());
+        if (carrito == null) {
+            model.addAttribute("filtroVentas", null);
+            model.addAttribute("montoTotal", 0.0);
+        } else {
+            // Recuperar 
+            ArrayList<VentaDetalle> filtroVentas = dataVentaDetalle.buscarPoridVenta(carrito.getIdVenta().getIdVenta());
+            // Datos a compartir a Carrito
+            model.addAttribute("filtroVentas", filtroVentas);
+            model.addAttribute("montoTotal", dataVentaDetalle.obtenerMontoTotalVenta(carrito.getIdVenta().getIdVenta()));
+        }
+        return "ModuloCliente/carritoCompras";
+    }
+
+    // BUSCAR DETALLE DE UN PRODUCTO
+    @GetMapping("/buscarVentaDetalle")
+    public String irEditarVentaDetalle(@RequestParam(value = "idVentaDetalle") int idVentaDetalle,
+            Model model) {
+        Optional<VentaDetalle> ventaDetalle = dataVentaDetalle.ListarId(idVentaDetalle);
+        model.addAttribute("ventaDetalle", ventaDetalle.get());
+        return "ModuloCliente/ventaDetalleEditar";
+    }
+
+    // ACTUALIZAR DETALLE DE PRODUCTO
+    @RequestMapping(value = "/actualizarVentaDetalle", method = RequestMethod.POST)
+    public String actualizarVentaDetalle(@RequestParam(value = "idVentaDetalle") int idVentaDetalle,
+            @RequestParam("cantidad") int cantidad,
+            Model model) {
+        Optional<VentaDetalle> ventaDetalle = dataVentaDetalle.ListarId(idVentaDetalle);
+        ventaDetalle.get().setCantidad(cantidad);
+        //Nuevo precio
+        Double total = ventaDetalle.get().getPrecio() * cantidad;
+        ventaDetalle.get().setTotal(total);
+        dataVentaDetalle.Guardar(ventaDetalle.get());
+        return detalleCarrito(model);
+    }
+
+    // ELIMINAR PRODUCTO DE VENTA DETALLE
+    @GetMapping("/eliminarVentaDetalle")
+    public String eliminarVentaDetalle(int idVentaDetalle, Model model) {
+        //Eliminar
+        dataVentaDetalle.Eliminar(idVentaDetalle);
+        return detalleCarrito(model);
+    }
+
+    //LISTAR PRODUCTOS
+    @GetMapping("/resumenPago")
+    public String resumenPago(Model model) {
+        return "ModuloCliente/realizarPago";
+    }
+
+    //REGISTRO DE COMPRA
+    @RequestMapping(value = "/confirmarPago", method = RequestMethod.POST)
+    public String confirmarPago(@RequestParam(value = "direccion") String direccion,
+            @RequestParam(value = "numeroCelular") String numeroCelular,
+            @RequestParam(value = "nombre") String nombre,
+            @RequestParam(value = "cvv") String cvv,
+            @RequestParam(value = "numero") String numero,
+            @RequestParam(value = "fecha") String fecha,
+            Model model) {
+        String fechaActual = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss").format(Calendar.getInstance().getTime());
+        
+        Carrito carrito = dataCarrito.buscarCarritoDeCliente(this.log.getIdCliente());
+        // Recuperar 
+        ArrayList<VentaDetalle> filtroVentas = dataVentaDetalle.buscarPoridVenta(carrito.getIdVenta().getIdVenta());
+
+        //Actualizar Venta
+        Optional<Venta> venta = dataVenta.ListarId(carrito.getIdVenta().getIdVenta());
+        venta.get().setCancelado(1);
+        venta.get().setPagoTotal(dataVentaDetalle.obtenerMontoTotalVenta(carrito.getIdVenta().getIdVenta()));
+        //Registrar
+        dataVenta.Guardar(venta.get());
+
+        //Actualizar Carrito
+        carrito.setCancelado(1);
+        //Registrar
+        dataCarrito.Guardar(carrito);
+
+        // Registrar tarjeta
+        Tarjeta t = new Tarjeta();
+        t.setNombre(nombre);
+        t.setCvv(cvv);
+        t.setNumeroTarjeta(numero);
+        t.setFechaVencimiento(fecha);
+        // Guardar y recuperar
+        Tarjeta tarjeta = dataTarjeta.Registrar(t);
+
+        // Registrar Pago
+        Pago pago = new Pago();
+        pago.setFecha(fechaActual);
+        pago.setIdVenta(venta.get());
+        pago.setIdTarjeta(tarjeta);
+        dataPago.Guardar(pago);
+
+        //Registrar Delivery
+        Delivery delivery = new Delivery();
+        delivery.setDireccion(direccion);
+        delivery.setNumeroCelular(numeroCelular);
+        delivery.setIdVenta(venta.get());
+        delivery.setEstado("En proceso");
+        //Guardar
+        dataDelivery.Guardar(delivery);
+        return listadoPedidos(model);
+    }
+
+    // LISTADO DE PEDIDOS
+    @GetMapping("/listadoPedidos")
+    public String listadoPedidos(Model model) {
+        ArrayList<Delivery> deliverys = dataDelivery.buscarDeliveriesDeCliente(this.log.getIdCliente());
+        model.addAttribute("deliverys", deliverys);
+        return "ModuloCliente/listadoPedidos";
+    }
+}
diff --git a/src/main/java/com/example/proyectocalid/PagosController.java b/src/main/java/com/example/proyectocalid/PagosController.java
new file mode 100644
index 0000000..567deba
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/PagosController.java
@@ -0,0 +1,47 @@
+package com.example.proyectocalid;
+
+import com.example.proyectocalid.modelo.Pago;
+import com.example.proyectocalid.service.IPagoService;
+import java.text.DecimalFormat;
+import java.text.ParseException;
+import java.util.ArrayList;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestMethod;
+import org.springframework.web.bind.annotation.RequestParam;
+
+@Controller
+public class PagosController {
+
+    @Autowired
+    private IPagoService dataPago;
+
+    
+    //LISTADO DE PAGOS
+    @GetMapping("/listadoPagos")
+    public String listadoPagos(Model model) {
+        ArrayList<Pago> pagos = (ArrayList<Pago>) dataPago.Listar();
+        Double montoTotal = dataPago.obtenerMontoTotal(pagos);
+        //DecimalFormat formato = new DecimalFormat("#.00");
+        model.addAttribute("pagos", pagos);
+        //model.addAttribute("montoTotal", formato.format(montoTotal));
+        model.addAttribute("montoTotal", montoTotal);
+        return "Venta/listadoPagos";
+    }
+
+    //FILTRAR PAGOS POR FECHA
+    @RequestMapping(value = "/filtrarPagoFecha", method = RequestMethod.POST)
+    public String filtrarPagoFecha(@RequestParam("fecha1") String fecha1,
+            @RequestParam("fecha2") String fecha2,
+            Model model) throws ParseException {
+        ArrayList<Pago> pagos = dataPago.buscarPorFechas(fecha1.replace("-", "/"), fecha2.replace("-", "/"));
+        Double montoTotal = dataPago.obtenerMontoTotal(pagos);
+        DecimalFormat formato = new DecimalFormat("#.00");
+        model.addAttribute("pagos", pagos);
+        model.addAttribute("montoTotal", montoTotal);
+        return "Venta/listadoPagos";
+    }
+}
diff --git a/src/main/java/com/example/proyectocalid/ProyectocalidApplication.java b/src/main/java/com/example/proyectocalid/ProyectocalidApplication.java
new file mode 100644
index 0000000..a95490f
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/ProyectocalidApplication.java
@@ -0,0 +1,14 @@
+package com.example.proyectocalid;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+
+@SpringBootApplication
+public class ProyectocalidApplication {
+
+    
+	public static void main(String[] args) {
+		SpringApplication.run(ProyectocalidApplication.class, args);
+	}
+
+}
diff --git a/src/main/java/com/example/proyectocalid/VentasController.java b/src/main/java/com/example/proyectocalid/VentasController.java
new file mode 100644
index 0000000..dbc0ccc
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/VentasController.java
@@ -0,0 +1,60 @@
+
+package com.example.proyectocalid;
+
+import com.example.proyectocalid.modelo.Venta;
+import com.example.proyectocalid.modelo.VentaDetalle;
+import com.example.proyectocalid.service.IVentaDetalleService;
+import com.example.proyectocalid.service.IVentaService;
+import java.text.ParseException;
+import java.util.ArrayList;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestMethod;
+import org.springframework.web.bind.annotation.RequestParam;
+
+@Controller
+public class VentasController {
+    
+    @Autowired
+    private IVentaService dataVenta;
+
+    @Autowired
+    private IVentaDetalleService dataVentaDetalle;
+    
+    
+    //LISTADO DE VENTAS
+    //LISTADO
+    @GetMapping("/listadoVentas")
+    public String listarColaboradores(Model model) {
+        ArrayList<Venta> ventas = (ArrayList<Venta>) dataVenta.ventasCanceladas();
+        model.addAttribute("ventas", ventas);
+        return "Venta/listadoVentas";
+    }
+    
+    //FILTRAR VENTA POR FECHA
+    @RequestMapping(value = "/filtrarVentaFecha", method = RequestMethod.POST)
+    public String filtrarVentaFecha(@RequestParam("fecha1") String fecha1,
+            @RequestParam("fecha2") String fecha2,
+            Model model) throws ParseException {
+        ArrayList<Venta> ventas = dataVenta.buscarPorFechas(fecha1.replace("-", "/"), fecha2.replace("-", "/"));
+        //ArrayList<Venta> ventas = dataVenta.buscarPorFechas("2022/06/20", "2022/06/27");
+        model.addAttribute("ventas", ventas);
+        return "Venta/listadoVentas";
+    }
+    
+    //DETALLE DE VENTAS
+    @GetMapping("/buscarDetalleVenta")
+    public String buscarDetalleVenta(@RequestParam(value = "idVenta") int idVenta,
+            @RequestParam(value = "inicio") int inicio,
+            Model model) {
+        
+        ArrayList<VentaDetalle> filtroVentas = dataVentaDetalle.buscarListadoDetalleVenta(idVenta);
+        model.addAttribute("filtroVentas", filtroVentas);
+        model.addAttribute("montoTotal", dataVentaDetalle.obtenerMontoTotalVenta(idVenta));
+        model.addAttribute("botonVenta", inicio);
+        return "Venta/detalleVenta";
+    }
+}
diff --git a/src/main/java/com/example/proyectocalid/dao/AreaTrabajoDao.java b/src/main/java/com/example/proyectocalid/dao/AreaTrabajoDao.java
new file mode 100644
index 0000000..4f67ac7
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/dao/AreaTrabajoDao.java
@@ -0,0 +1,13 @@
+package com.example.proyectocalid.dao;
+
+import com.example.proyectocalid.modelo.AreaTrabajo;
+import java.util.ArrayList;
+import org.springframework.data.jpa.repository.Query;
+import org.springframework.data.repository.CrudRepository;
+
+public interface AreaTrabajoDao extends CrudRepository<AreaTrabajo, Integer> {
+
+    
+    @Query(value = "SELECT * FROM area_trabajo WHERE estado = 1;", nativeQuery = true)
+    ArrayList<AreaTrabajo> areasTrabajoActivos();
+}
diff --git a/src/main/java/com/example/proyectocalid/dao/CarritoDao.java b/src/main/java/com/example/proyectocalid/dao/CarritoDao.java
new file mode 100644
index 0000000..9bf56f6
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/dao/CarritoDao.java
@@ -0,0 +1,13 @@
+package com.example.proyectocalid.dao;
+
+import com.example.proyectocalid.modelo.Carrito;
+import java.util.ArrayList;
+import org.springframework.data.jpa.repository.Query;
+import org.springframework.data.repository.CrudRepository;
+
+public interface CarritoDao extends CrudRepository<Carrito, Integer> {
+
+    
+    @Query(value = "SELECT * FROM `carrito` WHERE carrito.cancelado LIKE '0' AND carrito.id_cliente LIKE ?1", nativeQuery = true)
+    Carrito buscarCarritoDeCliente(int idCliente);
+}
diff --git a/src/main/java/com/example/proyectocalid/dao/ClienteDao.java b/src/main/java/com/example/proyectocalid/dao/ClienteDao.java
new file mode 100644
index 0000000..274580a
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/dao/ClienteDao.java
@@ -0,0 +1,13 @@
+package com.example.proyectocalid.dao;
+
+import com.example.proyectocalid.modelo.Cliente;
+import java.util.ArrayList;
+import org.springframework.data.jpa.repository.Query;
+import org.springframework.data.repository.CrudRepository;
+
+public interface ClienteDao extends CrudRepository<Cliente, Integer> {
+
+    
+    @Query(value = "SELECT * FROM cliente WHERE estado = 1", nativeQuery = true)
+    ArrayList<Cliente> clientesActivos();
+}
diff --git a/src/main/java/com/example/proyectocalid/dao/ColaboradorDao.java b/src/main/java/com/example/proyectocalid/dao/ColaboradorDao.java
new file mode 100644
index 0000000..c06c869
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/dao/ColaboradorDao.java
@@ -0,0 +1,13 @@
+package com.example.proyectocalid.dao;
+
+import com.example.proyectocalid.modelo.Colaborador;
+import java.util.ArrayList;
+import org.springframework.data.jpa.repository.Query;
+import org.springframework.data.repository.CrudRepository;
+
+public interface ColaboradorDao extends CrudRepository<Colaborador, Integer> {
+
+    
+    @Query(value = "SELECT * FROM colaborador WHERE estado = 1", nativeQuery = true)
+    ArrayList<Colaborador> colaboradoresActivos();
+}
diff --git a/src/main/java/com/example/proyectocalid/dao/DeliveryDao.java b/src/main/java/com/example/proyectocalid/dao/DeliveryDao.java
new file mode 100644
index 0000000..8688d99
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/dao/DeliveryDao.java
@@ -0,0 +1,13 @@
+package com.example.proyectocalid.dao;
+
+import com.example.proyectocalid.modelo.Delivery;
+import java.util.ArrayList;
+import org.springframework.data.jpa.repository.Query;
+import org.springframework.data.repository.CrudRepository;
+
+public interface DeliveryDao extends CrudRepository<Delivery, Integer> {
+
+    
+    @Query(value = "SELECT delivery.id_delivery, delivery.direccion, delivery.numero_celular, delivery.id_venta, delivery.estado FROM delivery INNER JOIN venta on delivery.id_venta = venta.id_venta WHERE venta.id_cliente LIKE ?1", nativeQuery = true)
+    ArrayList<Delivery> buscarDeliveriesDeCliente(int idCliente);
+}
diff --git a/src/main/java/com/example/proyectocalid/dao/PagoDao.java b/src/main/java/com/example/proyectocalid/dao/PagoDao.java
new file mode 100644
index 0000000..2f113f1
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/dao/PagoDao.java
@@ -0,0 +1,13 @@
+package com.example.proyectocalid.dao;
+
+import com.example.proyectocalid.modelo.Pago;
+import java.util.ArrayList;
+import org.springframework.data.jpa.repository.Query;
+import org.springframework.data.repository.CrudRepository;
+
+public interface PagoDao extends CrudRepository<Pago, Integer> {
+
+    
+    @Query(value = "SELECT * FROM pago WHERE pago.fecha BETWEEN ?1 AND ?2", nativeQuery = true)
+    ArrayList<Pago> buscarPorFechas(String fecha1, String fecha2);
+}
diff --git a/src/main/java/com/example/proyectocalid/dao/PersonaDao.java b/src/main/java/com/example/proyectocalid/dao/PersonaDao.java
new file mode 100644
index 0000000..5a5b7f0
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/dao/PersonaDao.java
@@ -0,0 +1,9 @@
+package com.example.proyectocalid.dao;
+
+import com.example.proyectocalid.modelo.Persona;
+import org.springframework.data.repository.CrudRepository;
+
+public interface PersonaDao extends CrudRepository<Persona, Integer> {
+
+    
+}
diff --git a/src/main/java/com/example/proyectocalid/dao/ProductoDao.java b/src/main/java/com/example/proyectocalid/dao/ProductoDao.java
new file mode 100644
index 0000000..e916c09
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/dao/ProductoDao.java
@@ -0,0 +1,13 @@
+package com.example.proyectocalid.dao;
+
+import com.example.proyectocalid.modelo.Producto;
+import java.util.ArrayList;
+import org.springframework.data.jpa.repository.Query;
+import org.springframework.data.repository.CrudRepository;
+
+public interface ProductoDao extends CrudRepository<Producto, Integer> {
+
+    
+    @Query(value = "SELECT * FROM producto WHERE estado = 1", nativeQuery = true)
+    ArrayList<Producto> productosActivos();
+}
diff --git a/src/main/java/com/example/proyectocalid/dao/TarjetaDao.java b/src/main/java/com/example/proyectocalid/dao/TarjetaDao.java
new file mode 100644
index 0000000..6b1d641
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/dao/TarjetaDao.java
@@ -0,0 +1,9 @@
+package com.example.proyectocalid.dao;
+
+import com.example.proyectocalid.modelo.Tarjeta;
+import org.springframework.data.repository.CrudRepository;
+
+public interface TarjetaDao extends CrudRepository<Tarjeta, Integer> {
+
+    
+}
diff --git a/src/main/java/com/example/proyectocalid/dao/TipoUsuarioDao.java b/src/main/java/com/example/proyectocalid/dao/TipoUsuarioDao.java
new file mode 100644
index 0000000..9db5717
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/dao/TipoUsuarioDao.java
@@ -0,0 +1,9 @@
+package com.example.proyectocalid.dao;
+
+import com.example.proyectocalid.modelo.TipoUsuario;
+import org.springframework.data.repository.CrudRepository;
+
+public interface TipoUsuarioDao extends CrudRepository<TipoUsuario, Integer> {
+
+    
+}
diff --git a/src/main/java/com/example/proyectocalid/dao/UsuarioDao.java b/src/main/java/com/example/proyectocalid/dao/UsuarioDao.java
new file mode 100644
index 0000000..5803a50
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/dao/UsuarioDao.java
@@ -0,0 +1,13 @@
+package com.example.proyectocalid.dao;
+
+import com.example.proyectocalid.modelo.Usuario;
+import java.util.ArrayList;
+import org.springframework.data.jpa.repository.Query;
+import org.springframework.data.repository.CrudRepository;
+
+public interface UsuarioDao extends CrudRepository<Usuario, Integer> {
+    
+    @Query(value = "SELECT * FROM usuario WHERE estado = 1", nativeQuery = true)
+    ArrayList<Usuario> usuariosActivos();
+
+}
diff --git a/src/main/java/com/example/proyectocalid/dao/VentaDao.java b/src/main/java/com/example/proyectocalid/dao/VentaDao.java
new file mode 100644
index 0000000..8e91461
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/dao/VentaDao.java
@@ -0,0 +1,16 @@
+package com.example.proyectocalid.dao;
+
+import com.example.proyectocalid.modelo.Venta;
+import java.util.ArrayList;
+import org.springframework.data.jpa.repository.Query;
+import org.springframework.data.repository.CrudRepository;
+
+public interface VentaDao extends CrudRepository<Venta, Integer> {
+
+    @Query(value = "SELECT * FROM venta WHERE venta.fecha BETWEEN ?1 AND ?2 AND venta.cancelado LIKE 1", nativeQuery = true)
+    ArrayList<Venta> buscarPorFechas(String fecha1, String fecha2);
+    
+    
+    @Query(value = "SELECT * from venta WHERE venta.cancelado LIKE 1", nativeQuery = true)
+    ArrayList<Venta> ventasCanceladas();
+}
diff --git a/src/main/java/com/example/proyectocalid/dao/VentaDetalleDao.java b/src/main/java/com/example/proyectocalid/dao/VentaDetalleDao.java
new file mode 100644
index 0000000..391ee99
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/dao/VentaDetalleDao.java
@@ -0,0 +1,19 @@
+package com.example.proyectocalid.dao;
+
+import com.example.proyectocalid.modelo.VentaDetalle;
+import java.util.ArrayList;
+import org.springframework.data.jpa.repository.Query;
+import org.springframework.data.repository.CrudRepository;
+
+public interface VentaDetalleDao extends CrudRepository<VentaDetalle, Integer> {
+
+    ///MODIFICAR
+    //@Query(value = "select * from venta_detalle INNER JOIN mesa on pedido_detalle.id_pedido = mesa.id_pedido WHERE pedido_detalle.id_pedido LIKE %?1%", nativeQuery = true)
+    @Query(value = "select * from venta_detalle INNER JOIN venta ON venta_detalle.id_venta = venta.id_venta WHERE venta_detalle.id_venta LIKE %?1%", nativeQuery = true)
+    ArrayList<VentaDetalle> buscarPoridVenta(int idVenta);
+
+    
+    @Query(value = "SELECT * FROM venta_detalle WHERE venta_detalle.id_venta LIKE %?1%", nativeQuery = true)
+    ArrayList<VentaDetalle> buscarListadoDetalleVenta(int idVenta);
+
+}
diff --git a/src/main/java/com/example/proyectocalid/imgConfig.java b/src/main/java/com/example/proyectocalid/imgConfig.java
new file mode 100644
index 0000000..8a4058a
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/imgConfig.java
@@ -0,0 +1,18 @@
+package com.example.proyectocalid;
+
+import org.springframework.context.annotation.Configuration;
+import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;
+import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;
+
+@Configuration
+public class imgConfig implements WebMvcConfigurer {
+    
+    
+    @Override
+    public void addResourceHandlers(ResourceHandlerRegistry registry) {
+        WebMvcConfigurer.super.addResourceHandlers(registry);
+        
+        registry.addResourceHandler("/recursos/**").addResourceLocations("file:/C:/Producto/recursos");
+    }
+    
+}
diff --git a/src/main/java/com/example/proyectocalid/modelo/AreaTrabajo.java b/src/main/java/com/example/proyectocalid/modelo/AreaTrabajo.java
new file mode 100644
index 0000000..4ba2ab8
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/modelo/AreaTrabajo.java
@@ -0,0 +1,29 @@
+package com.example.proyectocalid.modelo;
+
+import java.io.Serializable;
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.GeneratedValue;
+import javax.persistence.GenerationType;
+import javax.persistence.Id;
+import javax.persistence.Table;
+import lombok.Data;
+
+@Data
+@Entity
+@Table(name = "AREA_TRABAJO")
+public class AreaTrabajo implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    private int idAreaTrabajo;
+    @Column(name = "NOMBRE")
+    private String nombre;
+    @Column(name = "DESCRIPCION")
+    private String descripcion;
+    @Column(name = "ESTADO")
+    public int estado;
+}
diff --git a/src/main/java/com/example/proyectocalid/modelo/Carrito.java b/src/main/java/com/example/proyectocalid/modelo/Carrito.java
new file mode 100644
index 0000000..3db1a78
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/modelo/Carrito.java
@@ -0,0 +1,33 @@
+package com.example.proyectocalid.modelo;
+
+import java.io.Serializable;
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.GeneratedValue;
+import javax.persistence.GenerationType;
+import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.ManyToOne;
+import javax.persistence.Table;
+import lombok.Data;
+
+@Data
+@Entity
+@Table(name = "CARRITO")
+public class Carrito implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    private int idCarrito;
+    @ManyToOne()
+    @JoinColumn(name = "ID_CLIENTE")
+    private Cliente idCliente;
+    @ManyToOne()
+    @JoinColumn(name = "ID_VENTA")
+    public Venta idVenta;
+    @Column(name = "CANCELADO")
+    public int cancelado;
+}
diff --git a/src/main/java/com/example/proyectocalid/modelo/Cliente.java b/src/main/java/com/example/proyectocalid/modelo/Cliente.java
new file mode 100644
index 0000000..97a37ec
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/modelo/Cliente.java
@@ -0,0 +1,34 @@
+package com.example.proyectocalid.modelo;
+
+import java.io.Serializable;
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.GeneratedValue;
+import javax.persistence.GenerationType;
+import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.ManyToOne;
+import javax.persistence.Table;
+import lombok.Data;
+
+@Data
+@Entity
+@Table(name = "CLIENTE")
+public class Cliente implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    private int idCliente;
+    @ManyToOne()
+    @JoinColumn(name = "ID_PERSONA")
+    private Persona idPersona;
+    @Column(name = "ESTADO")
+    public int estado;
+    @Column(name = "NOMBRE_USUARIO")
+    private String nombreUsuario;
+    @Column(name = "CLAVE")
+    private String clave;
+}
diff --git a/src/main/java/com/example/proyectocalid/modelo/Colaborador.java b/src/main/java/com/example/proyectocalid/modelo/Colaborador.java
new file mode 100644
index 0000000..7e45963
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/modelo/Colaborador.java
@@ -0,0 +1,33 @@
+package com.example.proyectocalid.modelo;
+
+import java.io.Serializable;
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.GeneratedValue;
+import javax.persistence.GenerationType;
+import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.ManyToOne;
+import javax.persistence.Table;
+import lombok.Data;
+
+@Data
+@Entity
+@Table(name = "COLABORADOR")
+public class Colaborador implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    private int idColaborador;
+    @ManyToOne()
+    @JoinColumn(name = "ID_PERSONA")
+    private Persona idPersona;
+    @ManyToOne()
+    @JoinColumn(name = "ID_AREA_TRABAJO")
+    private AreaTrabajo idAreaTrabajo;
+    @Column(name = "ESTADO")
+    public int estado;
+}
diff --git a/src/main/java/com/example/proyectocalid/modelo/Delivery.java b/src/main/java/com/example/proyectocalid/modelo/Delivery.java
new file mode 100644
index 0000000..eca9eaa
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/modelo/Delivery.java
@@ -0,0 +1,30 @@
+package com.example.proyectocalid.modelo;
+
+import java.io.Serializable;
+import javax.persistence.Entity;
+import javax.persistence.GeneratedValue;
+import javax.persistence.GenerationType;
+import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.ManyToOne;
+import javax.persistence.Table;
+import lombok.Data;
+
+@Data
+@Entity
+@Table(name = "DELIVERY")
+public class Delivery implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    private int idDelivery;
+    @ManyToOne()
+    @JoinColumn(name = "ID_VENTA")
+    public Venta idVenta;
+    private String numeroCelular;
+    private String direccion;
+    private String estado;
+}
diff --git a/src/main/java/com/example/proyectocalid/modelo/Pago.java b/src/main/java/com/example/proyectocalid/modelo/Pago.java
new file mode 100644
index 0000000..3b0a4fa
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/modelo/Pago.java
@@ -0,0 +1,33 @@
+package com.example.proyectocalid.modelo;
+
+import java.io.Serializable;
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.GeneratedValue;
+import javax.persistence.GenerationType;
+import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.ManyToOne;
+import javax.persistence.Table;
+import lombok.Data;
+
+@Data
+@Entity
+@Table(name = "PAGO")
+public class Pago implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    public int idPago;
+    @Column(name = "FECHA")
+    public String fecha;
+    @ManyToOne()
+    @JoinColumn(name = "ID_VENTA")
+    public Venta idVenta;
+    @ManyToOne()
+    @JoinColumn(name = "ID_TARJETA")
+    public Tarjeta idTarjeta;
+}
diff --git a/src/main/java/com/example/proyectocalid/modelo/Persona.java b/src/main/java/com/example/proyectocalid/modelo/Persona.java
new file mode 100644
index 0000000..7957f43
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/modelo/Persona.java
@@ -0,0 +1,27 @@
+
+package com.example.proyectocalid.modelo;
+
+import java.io.Serializable;
+import javax.persistence.Entity;
+import javax.persistence.GeneratedValue;
+import javax.persistence.GenerationType;
+import javax.persistence.Id;
+import javax.persistence.Table;
+import lombok.Data;
+
+@Data
+@Entity
+@Table(name = "PERSONA")
+public class Persona implements Serializable {
+    
+    private static final long serialVersionUID = 1L;
+
+    
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    private int idPersona;
+    private String nombre;
+    private String apellido;
+    private String email;
+    private String telefono;
+}
diff --git a/src/main/java/com/example/proyectocalid/modelo/Producto.java b/src/main/java/com/example/proyectocalid/modelo/Producto.java
new file mode 100644
index 0000000..0296605
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/modelo/Producto.java
@@ -0,0 +1,40 @@
+package com.example.proyectocalid.modelo;
+
+import java.io.File;
+import java.io.Serializable;
+import java.sql.Blob;
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.GeneratedValue;
+import javax.persistence.GenerationType;
+import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.ManyToOne;
+import javax.persistence.Table;
+import lombok.Data;
+
+@Data
+@Entity
+@Table(name = "PRODUCTO")
+public class Producto implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    private int idProducto;
+    @ManyToOne()
+    @JoinColumn(name = "ID_TIPO_PRODUCTO")
+    private TipoProducto idTipoProducto;
+    @Column(name = "NOMBRE")
+    private String nombre;
+    @Column(name = "PRECIO")
+    public double precio;
+    @Column(name = "DESCRIPCION")
+    public String descripcion;
+    @Column(name = "IMAGEN")
+    private String imagen;
+    @Column(name = "ESTADO")
+    public int estado;
+}
diff --git a/src/main/java/com/example/proyectocalid/modelo/Tarjeta.java b/src/main/java/com/example/proyectocalid/modelo/Tarjeta.java
new file mode 100644
index 0000000..36b02c4
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/modelo/Tarjeta.java
@@ -0,0 +1,26 @@
+package com.example.proyectocalid.modelo;
+
+import java.io.Serializable;
+import javax.persistence.Entity;
+import javax.persistence.GeneratedValue;
+import javax.persistence.GenerationType;
+import javax.persistence.Id;
+import javax.persistence.Table;
+import lombok.Data;
+
+@Data
+@Entity
+@Table(name = "TARJETA")
+public class Tarjeta implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    public int idTarjeta;
+    private String nombre;
+    private String numeroTarjeta;
+    private String fechaVencimiento;
+    private String cvv;
+}
diff --git a/src/main/java/com/example/proyectocalid/modelo/TipoProducto.java b/src/main/java/com/example/proyectocalid/modelo/TipoProducto.java
new file mode 100644
index 0000000..ccff9dc
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/modelo/TipoProducto.java
@@ -0,0 +1,27 @@
+package com.example.proyectocalid.modelo;
+
+import java.io.Serializable;
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.GeneratedValue;
+import javax.persistence.GenerationType;
+import javax.persistence.Id;
+import javax.persistence.Table;
+import lombok.Data;
+
+@Data
+@Entity
+@Table(name = "TIPO_PRODUCTO")
+public class TipoProducto implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    private int idTipoProducto;
+    @Column(name = "NOMBRE")
+    private String nombre;
+    @Column(name = "ESTADO")
+    public int estado;
+}
diff --git a/src/main/java/com/example/proyectocalid/modelo/TipoUsuario.java b/src/main/java/com/example/proyectocalid/modelo/TipoUsuario.java
new file mode 100644
index 0000000..ea08b40
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/modelo/TipoUsuario.java
@@ -0,0 +1,27 @@
+package com.example.proyectocalid.modelo;
+
+import java.io.Serializable;
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.GeneratedValue;
+import javax.persistence.GenerationType;
+import javax.persistence.Id;
+import javax.persistence.Table;
+import lombok.Data;
+
+@Data
+@Entity
+@Table(name = "TIPO_USUARIO")
+public class TipoUsuario implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    private int idTipoUsuario;
+    @Column(name = "NOMBRE")
+    private String nombre;
+    @Column(name = "DESCRIPCION")
+    private String descripcion;
+}
diff --git a/src/main/java/com/example/proyectocalid/modelo/Usuario.java b/src/main/java/com/example/proyectocalid/modelo/Usuario.java
new file mode 100644
index 0000000..525ea94
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/modelo/Usuario.java
@@ -0,0 +1,38 @@
+package com.example.proyectocalid.modelo;
+
+import java.io.Serializable;
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.GeneratedValue;
+import javax.persistence.GenerationType;
+import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.ManyToOne;
+import javax.persistence.Table;
+import lombok.Data;
+
+@Data
+@Entity
+@Table(name = "USUARIO")
+public class Usuario implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    private int idUsuario;
+    @Column(name = "NOMBRE_USUARIO")
+    private String nombreUsuario;
+    @Column(name = "CLAVE")
+    private String clave;
+    @ManyToOne()
+    @JoinColumn(name = "ID_PERSONA")
+    private Persona idPersona;
+    @ManyToOne()
+    @JoinColumn(name = "ID_TIPO_USUARIO")
+    private TipoUsuario idTipoUsuario;
+    @Column(name="ESTADO")
+    public int estado;
+
+    
+}
diff --git a/src/main/java/com/example/proyectocalid/modelo/Venta.java b/src/main/java/com/example/proyectocalid/modelo/Venta.java
new file mode 100644
index 0000000..9961163
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/modelo/Venta.java
@@ -0,0 +1,34 @@
+package com.example.proyectocalid.modelo;
+
+import java.io.Serializable;
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.GeneratedValue;
+import javax.persistence.GenerationType;
+import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.ManyToOne;
+import javax.persistence.Table;
+import lombok.Data;
+
+@Data
+@Entity
+@Table(name = "VENTA")
+public class Venta implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    public int idVenta;
+    @Column(name = "CANCELADO")
+    public int cancelado;
+    @Column(name = "FECHA")
+    public String fecha;
+    @Column(name = "PAGO_TOTAL")
+    public Double pagoTotal;
+    @ManyToOne()
+    @JoinColumn(name = "ID_CLIENTE")
+    private Cliente idCliente;
+
+}
diff --git a/src/main/java/com/example/proyectocalid/modelo/VentaDetalle.java b/src/main/java/com/example/proyectocalid/modelo/VentaDetalle.java
new file mode 100644
index 0000000..5384f62
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/modelo/VentaDetalle.java
@@ -0,0 +1,35 @@
+package com.example.proyectocalid.modelo;
+
+import java.io.Serializable;
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.GeneratedValue;
+import javax.persistence.GenerationType;
+import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.ManyToOne;
+import javax.persistence.Table;
+import lombok.Data;
+
+@Data
+@Entity
+@Table(name = "VENTA_DETALLE")
+public class VentaDetalle implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    private int idVentaDetalle;
+    @ManyToOne()
+    @JoinColumn(name = "ID_VENTA")
+    private Venta idVenta;
+    @ManyToOne()
+    @JoinColumn(name = "ID_PRODUCTO")
+    private Producto idProducto;
+    @Column(name = "CANTIDAD")
+    public int cantidad;
+    @Column(name = "PRECIO")
+    public Double precio;
+    @Column(name = "TOTAL")
+    public Double total;
+}
diff --git a/src/main/java/com/example/proyectocalid/service/AreaTrabajoService.java b/src/main/java/com/example/proyectocalid/service/AreaTrabajoService.java
new file mode 100644
index 0000000..5485a73
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/service/AreaTrabajoService.java
@@ -0,0 +1,42 @@
+package com.example.proyectocalid.service;
+
+import com.example.proyectocalid.dao.AreaTrabajoDao;
+import com.example.proyectocalid.modelo.AreaTrabajo;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Optional;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+@Service
+public class AreaTrabajoService implements IAreaTrabajoService {
+
+    
+    @Autowired
+    private AreaTrabajoDao data;
+
+    @Override
+    public List<AreaTrabajo> Listar() {
+        return (List<AreaTrabajo>) data.findAll();
+    }
+
+    @Override
+    public Optional<AreaTrabajo> ListarId(int id) {
+        return data.findById(id);
+    }
+
+    @Override
+    public void Guardar(AreaTrabajo a) {
+        data.save(a);
+    }
+
+    @Override
+    public void Eliminar(int id) {
+        data.deleteById(id);
+    }
+
+    @Override
+    public ArrayList<AreaTrabajo> areasTrabajoActivos() {
+        return data.areasTrabajoActivos();
+    }
+}
diff --git a/src/main/java/com/example/proyectocalid/service/CarritoService.java b/src/main/java/com/example/proyectocalid/service/CarritoService.java
new file mode 100644
index 0000000..3d2a549
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/service/CarritoService.java
@@ -0,0 +1,41 @@
+package com.example.proyectocalid.service;
+
+import com.example.proyectocalid.dao.CarritoDao;
+import com.example.proyectocalid.modelo.Carrito;
+import java.util.List;
+import java.util.Optional;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+@Service
+public class CarritoService implements ICarritoService {
+
+    
+    @Autowired
+    private CarritoDao data;
+
+    @Override
+    public List<Carrito> Listar() {
+        return (List<Carrito>) data.findAll();
+    }
+
+    @Override
+    public Optional<Carrito> ListarId(int id) {
+        return data.findById(id);
+    }
+
+    @Override
+    public void Guardar(Carrito c) {
+        data.save(c);
+    }
+
+    @Override
+    public void Eliminar(int id) {
+        data.deleteById(id);
+    }
+
+    @Override
+    public Carrito buscarCarritoDeCliente(int idCliente) {
+        return data.buscarCarritoDeCliente(idCliente);
+    }
+}
diff --git a/src/main/java/com/example/proyectocalid/service/ClienteService.java b/src/main/java/com/example/proyectocalid/service/ClienteService.java
new file mode 100644
index 0000000..1dc62b4
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/service/ClienteService.java
@@ -0,0 +1,42 @@
+package com.example.proyectocalid.service;
+
+import com.example.proyectocalid.dao.ClienteDao;
+import com.example.proyectocalid.modelo.Cliente;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Optional;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+@Service
+public class ClienteService implements IClienteService {
+
+    
+    @Autowired
+    private ClienteDao data;
+
+    @Override
+    public List<Cliente> Listar() {
+        return (List<Cliente>) data.findAll();
+    }
+
+    @Override
+    public Optional<Cliente> ListarId(int id) {
+        return data.findById(id);
+    }
+
+    @Override
+    public void Guardar(Cliente c) {
+        data.save(c);
+    }
+
+    @Override
+    public void Eliminar(int id) {
+        data.deleteById(id);
+    }
+
+    @Override
+    public ArrayList<Cliente> clientesActivos() {
+        return data.clientesActivos();
+    }
+}
diff --git a/src/main/java/com/example/proyectocalid/service/ColaboradorService.java b/src/main/java/com/example/proyectocalid/service/ColaboradorService.java
new file mode 100644
index 0000000..8c8a39c
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/service/ColaboradorService.java
@@ -0,0 +1,42 @@
+package com.example.proyectocalid.service;
+
+import com.example.proyectocalid.dao.ColaboradorDao;
+import com.example.proyectocalid.modelo.Colaborador;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Optional;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+@Service
+public class ColaboradorService implements IColaboradorService {
+
+    
+    @Autowired
+    private ColaboradorDao data;
+
+    @Override
+    public List<Colaborador> Listar() {
+        return (List<Colaborador>) data.findAll();
+    }
+
+    @Override
+    public Optional<Colaborador> ListarId(int id) {
+        return data.findById(id);
+    }
+
+    @Override
+    public void Guardar(Colaborador c) {
+        data.save(c);
+    }
+
+    @Override
+    public void Eliminar(int id) {
+        data.deleteById(id);
+    }
+
+    @Override
+    public ArrayList<Colaborador> colaboradoresActivos() {
+        return data.colaboradoresActivos();
+    }
+}
diff --git a/src/main/java/com/example/proyectocalid/service/DeliveryService.java b/src/main/java/com/example/proyectocalid/service/DeliveryService.java
new file mode 100644
index 0000000..e09fa8d
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/service/DeliveryService.java
@@ -0,0 +1,43 @@
+
+package com.example.proyectocalid.service;
+
+import com.example.proyectocalid.dao.DeliveryDao;
+import com.example.proyectocalid.modelo.Delivery;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Optional;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+@Service
+public class DeliveryService implements IDeliveryService{
+    
+    
+    @Autowired
+    private DeliveryDao data;
+
+    @Override
+    public List<Delivery> Listar() {
+        return (List<Delivery>) data.findAll();
+    }
+
+    @Override
+    public Optional<Delivery> ListarId(int id) {
+        return data.findById(id);
+    }
+
+    @Override
+    public void Guardar(Delivery d) {
+        data.save(d);
+    }
+
+    @Override
+    public void Eliminar(int id) {
+        data.deleteById(id);
+    }
+
+    @Override
+    public ArrayList<Delivery> buscarDeliveriesDeCliente(int idCliente) {
+        return data.buscarDeliveriesDeCliente(idCliente);
+    }
+}
diff --git a/src/main/java/com/example/proyectocalid/service/IAreaTrabajoService.java b/src/main/java/com/example/proyectocalid/service/IAreaTrabajoService.java
new file mode 100644
index 0000000..0494c72
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/service/IAreaTrabajoService.java
@@ -0,0 +1,21 @@
+package com.example.proyectocalid.service;
+
+import com.example.proyectocalid.modelo.AreaTrabajo;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Optional;
+
+public interface IAreaTrabajoService {
+
+    
+    public List<AreaTrabajo> Listar(); //Mostrar todo
+
+    public Optional<AreaTrabajo> ListarId(int id); //Mostrar por parametro
+
+    public void Guardar(AreaTrabajo a); //Guardar
+
+    public void Eliminar(int id);
+
+    public ArrayList<AreaTrabajo> areasTrabajoActivos();
+
+}
diff --git a/src/main/java/com/example/proyectocalid/service/ICarritoService.java b/src/main/java/com/example/proyectocalid/service/ICarritoService.java
new file mode 100644
index 0000000..496761c
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/service/ICarritoService.java
@@ -0,0 +1,20 @@
+package com.example.proyectocalid.service;
+
+import com.example.proyectocalid.modelo.Carrito;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Optional;
+
+public interface ICarritoService {
+
+    
+    public List<Carrito> Listar(); //Mostrar todo
+
+    public Optional<Carrito> ListarId(int id); //Mostrar por parametro
+
+    public void Guardar(Carrito c); //Guardar
+
+    public void Eliminar(int id);
+
+    public Carrito buscarCarritoDeCliente(int idCliente);
+}
diff --git a/src/main/java/com/example/proyectocalid/service/IClienteService.java b/src/main/java/com/example/proyectocalid/service/IClienteService.java
new file mode 100644
index 0000000..d078a1c
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/service/IClienteService.java
@@ -0,0 +1,20 @@
+package com.example.proyectocalid.service;
+
+import com.example.proyectocalid.modelo.Cliente;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Optional;
+
+public interface IClienteService {
+
+    
+    public List<Cliente> Listar(); //Mostrar todo
+
+    public Optional<Cliente> ListarId(int id); //Mostrar por parametro
+
+    public void Guardar(Cliente c); //Guardar
+
+    public void Eliminar(int id);
+
+    public ArrayList<Cliente> clientesActivos();
+}
diff --git a/src/main/java/com/example/proyectocalid/service/IColaboradorService.java b/src/main/java/com/example/proyectocalid/service/IColaboradorService.java
new file mode 100644
index 0000000..aa95ea0
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/service/IColaboradorService.java
@@ -0,0 +1,21 @@
+package com.example.proyectocalid.service;
+
+import com.example.proyectocalid.modelo.Colaborador;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Optional;
+
+public interface IColaboradorService {
+
+    
+    public List<Colaborador> Listar(); //Mostrar todo
+
+    public Optional<Colaborador> ListarId(int id); //Mostrar por parametro
+
+    public void Guardar(Colaborador c); //Guardar
+
+    public void Eliminar(int id);
+
+    public ArrayList<Colaborador> colaboradoresActivos();
+
+}
diff --git a/src/main/java/com/example/proyectocalid/service/IDeliveryService.java b/src/main/java/com/example/proyectocalid/service/IDeliveryService.java
new file mode 100644
index 0000000..824b3ea
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/service/IDeliveryService.java
@@ -0,0 +1,20 @@
+package com.example.proyectocalid.service;
+
+import com.example.proyectocalid.modelo.Delivery;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Optional;
+
+public interface IDeliveryService {
+
+    
+    public List<Delivery> Listar(); //Mostrar todo
+
+    public Optional<Delivery> ListarId(int id); //Mostrar por parametro
+
+    public void Guardar(Delivery d); //Guardar
+
+    public void Eliminar(int id);
+    
+    public ArrayList<Delivery> buscarDeliveriesDeCliente(int idCliente);
+}
diff --git a/src/main/java/com/example/proyectocalid/service/IPagoService.java b/src/main/java/com/example/proyectocalid/service/IPagoService.java
new file mode 100644
index 0000000..13aa538
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/service/IPagoService.java
@@ -0,0 +1,22 @@
+package com.example.proyectocalid.service;
+
+import com.example.proyectocalid.modelo.Pago;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Optional;
+
+public interface IPagoService {
+
+    
+    public List<Pago> Listar(); //Mostrar todo
+
+    public Optional<Pago> ListarId(int id); //Mostrar por parametro
+
+    public void Guardar(Pago p); //Guardar
+
+    public void Eliminar(int id);
+
+    public ArrayList<Pago> buscarPorFechas(String fecha1, String fecha2);
+
+    public Double obtenerMontoTotal(ArrayList<Pago> pagos);
+}
diff --git a/src/main/java/com/example/proyectocalid/service/IPersonaService.java b/src/main/java/com/example/proyectocalid/service/IPersonaService.java
new file mode 100644
index 0000000..a029b92
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/service/IPersonaService.java
@@ -0,0 +1,20 @@
+package com.example.proyectocalid.service;
+
+import com.example.proyectocalid.modelo.Persona;
+import java.util.List;
+import java.util.Optional;
+
+public interface IPersonaService {
+
+    
+    public List<Persona> Listar(); //Mostrar todo
+
+    public Optional<Persona> ListarId(int id); //Mostrar por parametro
+
+    public void Guardar(Persona p); //Guardar
+
+    public void Eliminar(int id);
+
+    public Persona Registrar(Persona p);
+
+}
diff --git a/src/main/java/com/example/proyectocalid/service/IProductoService.java b/src/main/java/com/example/proyectocalid/service/IProductoService.java
new file mode 100644
index 0000000..faf9f09
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/service/IProductoService.java
@@ -0,0 +1,20 @@
+package com.example.proyectocalid.service;
+
+import com.example.proyectocalid.modelo.Producto;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Optional;
+
+public interface IProductoService {
+
+    
+    public List<Producto> Listar();
+
+    public Optional<Producto> ListarId(int id);
+
+    public void Guardar(Producto p);
+
+    public void Eliminar(int id);
+
+    public ArrayList<Producto> productosActivos();
+}
diff --git a/src/main/java/com/example/proyectocalid/service/ITarjetaService.java b/src/main/java/com/example/proyectocalid/service/ITarjetaService.java
new file mode 100644
index 0000000..8a7595a
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/service/ITarjetaService.java
@@ -0,0 +1,19 @@
+package com.example.proyectocalid.service;
+
+import com.example.proyectocalid.modelo.Tarjeta;
+import java.util.List;
+import java.util.Optional;
+
+public interface ITarjetaService {
+
+    
+    public List<Tarjeta> Listar(); //Mostrar todo
+
+    public Optional<Tarjeta> ListarId(int id); //Mostrar por parametro
+
+    public void Guardar(Tarjeta t); //Guardar
+
+    public void Eliminar(int id);
+
+    public Tarjeta Registrar(Tarjeta t);
+}
diff --git a/src/main/java/com/example/proyectocalid/service/IUsuarioService.java b/src/main/java/com/example/proyectocalid/service/IUsuarioService.java
new file mode 100644
index 0000000..3d4ad3f
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/service/IUsuarioService.java
@@ -0,0 +1,21 @@
+package com.example.proyectocalid.service;
+
+import com.example.proyectocalid.modelo.Usuario;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Optional;
+
+public interface IUsuarioService {
+
+    
+    public List<Usuario> Listar(); //Mostrar todo
+
+    public Optional<Usuario> ListarId(int id); //Mostrar por parametro
+
+    public void Guardar(Usuario u); //Guardar
+
+    public void Eliminar(int id);
+
+    public ArrayList<Usuario> usuariosActivos();
+
+}
diff --git a/src/main/java/com/example/proyectocalid/service/IVentaDetalleService.java b/src/main/java/com/example/proyectocalid/service/IVentaDetalleService.java
new file mode 100644
index 0000000..42fda8d
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/service/IVentaDetalleService.java
@@ -0,0 +1,31 @@
+package com.example.proyectocalid.service;
+
+import com.example.proyectocalid.modelo.VentaDetalle;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Optional;
+
+public interface IVentaDetalleService {
+
+    
+    public List<VentaDetalle> Listar();
+
+    public Optional<VentaDetalle> ListarId(int id);
+
+    public void Guardar(VentaDetalle vd);
+
+    public void Eliminar(int id);
+
+    public VentaDetalle Registrar(VentaDetalle pd);
+
+    public ArrayList<VentaDetalle> buscarPoridVenta(int idVenta);
+
+    public Double obtenerMontoTotal(int idVenta);
+
+    public void eliminarPorIdVenta(int idVenta);
+
+    public ArrayList<VentaDetalle> buscarListadoDetalleVenta(int idVenta);
+
+    public Double obtenerMontoTotalVenta(int idVenta);
+
+}
diff --git a/src/main/java/com/example/proyectocalid/service/IVentaService.java b/src/main/java/com/example/proyectocalid/service/IVentaService.java
new file mode 100644
index 0000000..d658852
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/service/IVentaService.java
@@ -0,0 +1,24 @@
+package com.example.proyectocalid.service;
+
+import com.example.proyectocalid.modelo.Venta;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Optional;
+
+public interface IVentaService {
+
+    
+    public List<Venta> Listar();
+
+    public Optional<Venta> ListarId(int id);
+
+    public void Guardar(Venta v);
+
+    public void Eliminar(int id);
+
+    public Venta Registrar(Venta p);
+
+    public ArrayList<Venta> buscarPorFechas(String fecha1, String fecha2);
+
+    public ArrayList<Venta> ventasCanceladas();
+}
diff --git a/src/main/java/com/example/proyectocalid/service/PagoService.java b/src/main/java/com/example/proyectocalid/service/PagoService.java
new file mode 100644
index 0000000..0b17741
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/service/PagoService.java
@@ -0,0 +1,52 @@
+package com.example.proyectocalid.service;
+
+import com.example.proyectocalid.dao.PagoDao;
+import com.example.proyectocalid.modelo.Pago;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Optional;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+@Service
+public class PagoService implements IPagoService {
+
+    
+    @Autowired
+    private PagoDao data;
+
+    @Override
+    public List<Pago> Listar() {
+        return (List<Pago>) data.findAll();
+    }
+
+    @Override
+    public Optional<Pago> ListarId(int id) {
+        return data.findById(id);
+    }
+
+    @Override
+    public void Guardar(Pago p) {
+        data.save(p);
+    }
+
+    @Override
+    public void Eliminar(int id) {
+        data.deleteById(id);
+    }
+
+    @Override
+    public ArrayList<Pago> buscarPorFechas(String fecha1, String fecha2) {
+        return data.buscarPorFechas(fecha1, fecha2);
+    }
+
+    @Override
+    public Double obtenerMontoTotal(ArrayList<Pago> pagos) {
+        Double montoTotal = 0.0;
+
+        for (Pago p : pagos) {
+            montoTotal += p.idVenta.getPagoTotal();
+        }
+        return montoTotal;
+    }
+}
diff --git a/src/main/java/com/example/proyectocalid/service/PersonaService.java b/src/main/java/com/example/proyectocalid/service/PersonaService.java
new file mode 100644
index 0000000..ab4a584
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/service/PersonaService.java
@@ -0,0 +1,49 @@
+package com.example.proyectocalid.service;
+
+import com.example.proyectocalid.dao.PersonaDao;
+import com.example.proyectocalid.modelo.Persona;
+import java.util.List;
+import java.util.Optional;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+@Service
+public class PersonaService implements IPersonaService {
+
+    
+    @Autowired
+    private PersonaDao data;
+
+    @Override
+    public List<Persona> Listar() {
+        return (List<Persona>) data.findAll();
+    }
+
+    @Override
+    public Optional<Persona> ListarId(int id) {
+        return data.findById(id);
+    }
+
+    @Override
+    public void Guardar(Persona p) {
+        data.save(p);
+    }
+
+    @Override
+    public void Eliminar(int id) {
+        data.deleteById(id);
+    }
+
+    @Override
+    public Persona Registrar(Persona p) {
+        data.save(p);
+        // Listado de Personas
+        List<Persona> personas = Listar();
+        // Recuperar última persona registrada
+        Persona persona = personas.get(personas.size() - 1);
+        int idPersona = persona.getIdPersona();
+        // Buscar por Id
+        Optional<Persona> datoRecuperado = ListarId(idPersona);
+        return datoRecuperado.get();
+    }
+}
diff --git a/src/main/java/com/example/proyectocalid/service/ProductoService.java b/src/main/java/com/example/proyectocalid/service/ProductoService.java
new file mode 100644
index 0000000..5b2425c
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/service/ProductoService.java
@@ -0,0 +1,42 @@
+package com.example.proyectocalid.service;
+
+import com.example.proyectocalid.dao.ProductoDao;
+import com.example.proyectocalid.modelo.Producto;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Optional;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+@Service
+public class ProductoService implements IProductoService {
+
+    
+    @Autowired
+    private ProductoDao data;
+
+    @Override
+    public List<Producto> Listar() {
+        return (List<Producto>) data.findAll();
+    }
+
+    @Override
+    public Optional<Producto> ListarId(int id) {
+        return data.findById(id);
+    }
+
+    @Override
+    public void Guardar(Producto p) {
+        data.save(p);
+    }
+
+    @Override
+    public void Eliminar(int id) {
+        data.deleteById(id);
+    }
+
+    @Override
+    public ArrayList<Producto> productosActivos() {
+        return data.productosActivos();
+    }
+}
diff --git a/src/main/java/com/example/proyectocalid/service/TarjetaService.java b/src/main/java/com/example/proyectocalid/service/TarjetaService.java
new file mode 100644
index 0000000..e71b537
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/service/TarjetaService.java
@@ -0,0 +1,49 @@
+package com.example.proyectocalid.service;
+
+import com.example.proyectocalid.dao.TarjetaDao;
+import com.example.proyectocalid.modelo.Tarjeta;
+import java.util.List;
+import java.util.Optional;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+@Service
+public class TarjetaService implements ITarjetaService {
+
+    
+    @Autowired
+    private TarjetaDao data;
+
+    @Override
+    public List<Tarjeta> Listar() {
+        return (List<Tarjeta>) data.findAll();
+    }
+
+    @Override
+    public Optional<Tarjeta> ListarId(int id) {
+        return data.findById(id);
+    }
+
+    @Override
+    public void Guardar(Tarjeta t) {
+        data.save(t);
+    }
+
+    @Override
+    public void Eliminar(int id) {
+        data.deleteById(id);
+    }
+
+    @Override
+    public Tarjeta Registrar(Tarjeta t) {
+        data.save(t);
+        // Listado de Tarjetas
+        List<Tarjeta> tarjetas = Listar();
+        // Recuperar última tarjeta registrada
+        Tarjeta tarjeta = tarjetas.get(tarjetas.size() - 1);
+        int idTarjeta = tarjeta.getIdTarjeta();
+        // Buscar por Id
+        Optional<Tarjeta> datoRecuperado = ListarId(idTarjeta);
+        return datoRecuperado.get();
+    }
+}
diff --git a/src/main/java/com/example/proyectocalid/service/UsuarioService.java b/src/main/java/com/example/proyectocalid/service/UsuarioService.java
new file mode 100644
index 0000000..0a2aced
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/service/UsuarioService.java
@@ -0,0 +1,43 @@
+package com.example.proyectocalid.service;
+
+import com.example.proyectocalid.dao.UsuarioDao;
+import com.example.proyectocalid.modelo.Usuario;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Optional;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+@Service
+public class UsuarioService implements IUsuarioService {
+
+    
+    @Autowired
+    private UsuarioDao data;
+
+    @Override
+    public List<Usuario> Listar() {
+        return (List<Usuario>) data.findAll();
+    }
+
+    @Override
+    public Optional<Usuario> ListarId(int id) {
+        return data.findById(id);
+    }
+
+    @Override
+    public void Guardar(Usuario u) {
+        data.save(u);
+    }
+
+    @Override
+    public void Eliminar(int id) {
+        data.deleteById(id);
+    }
+
+    @Override
+    public ArrayList<Usuario> usuariosActivos() {
+        return data.usuariosActivos();
+    }
+
+}
diff --git a/src/main/java/com/example/proyectocalid/service/VentaDetalleService.java b/src/main/java/com/example/proyectocalid/service/VentaDetalleService.java
new file mode 100644
index 0000000..5d69124
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/service/VentaDetalleService.java
@@ -0,0 +1,91 @@
+package com.example.proyectocalid.service;
+
+import com.example.proyectocalid.dao.VentaDetalleDao;
+import com.example.proyectocalid.modelo.VentaDetalle;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Optional;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+@Service
+public class VentaDetalleService implements IVentaDetalleService {
+
+    
+    @Autowired
+    private VentaDetalleDao data;
+
+    @Override
+    public List<VentaDetalle> Listar() {
+        return (List<VentaDetalle>) data.findAll();
+    }
+
+    @Override
+    public Optional<VentaDetalle> ListarId(int id) {
+        return data.findById(id);
+    }
+
+    @Override
+    public void Guardar(VentaDetalle vd) {
+        data.save(vd);
+    }
+
+    @Override
+    public void Eliminar(int id) {
+        data.deleteById(id);
+    }
+
+    @Override
+    public VentaDetalle Registrar(VentaDetalle pd) {
+        data.save(pd);
+        // Listado de VentaDetalle
+        List<VentaDetalle> ventaDetalles = Listar();
+        // Recuperar último VentaDetalle registrado
+        VentaDetalle ventaDetalle = ventaDetalles.get(ventaDetalles.size() - 1);
+        int idVentaDetalle = ventaDetalle.getIdVentaDetalle();
+        // Buscar por Id
+        Optional<VentaDetalle> datoRecuperado = ListarId(idVentaDetalle);
+        return datoRecuperado.get();
+    }
+
+    @Override
+    public ArrayList<VentaDetalle> buscarPoridVenta(int idVenta) {
+        return data.buscarPoridVenta(idVenta);
+    }
+
+    @Override
+    public Double obtenerMontoTotal(int idVenta) {
+        ArrayList<VentaDetalle> ventaDetalle = buscarPoridVenta(idVenta);
+        Double montoTotal = 0.0;
+        for (VentaDetalle vd : ventaDetalle) {
+            montoTotal += vd.getTotal();
+        }
+        return montoTotal;
+    }
+
+    @Override
+    public void eliminarPorIdVenta(int idVenta) {
+        ArrayList<VentaDetalle> ventaDetalles = (ArrayList<VentaDetalle>) Listar();
+
+        for (VentaDetalle vd : ventaDetalles) {
+            if (vd.getIdVenta().getIdVenta() == idVenta) {
+                Eliminar(vd.getIdVentaDetalle());
+            }
+        }
+    }
+
+    @Override
+    public ArrayList<VentaDetalle> buscarListadoDetalleVenta(int idVenta) {
+        return data.buscarListadoDetalleVenta(idVenta);
+    }
+
+    @Override
+    public Double obtenerMontoTotalVenta(int idVenta) {
+        ArrayList<VentaDetalle> ventaDetalle = buscarListadoDetalleVenta(idVenta);
+        Double montoTotal = 0.0;
+        for (VentaDetalle vd : ventaDetalle) {
+            montoTotal += vd.getTotal();
+        }
+        return montoTotal;
+    }
+}
diff --git a/src/main/java/com/example/proyectocalid/service/VentaService.java b/src/main/java/com/example/proyectocalid/service/VentaService.java
new file mode 100644
index 0000000..afd5802
--- /dev/null
+++ b/src/main/java/com/example/proyectocalid/service/VentaService.java
@@ -0,0 +1,60 @@
+package com.example.proyectocalid.service;
+
+import com.example.proyectocalid.dao.VentaDao;
+import com.example.proyectocalid.modelo.Venta;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Optional;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+@Service
+public class VentaService implements IVentaService {
+
+    
+    @Autowired
+    private VentaDao data;
+
+    @Override
+    public List<Venta> Listar() {
+        return (List<Venta>) data.findAll();
+    }
+
+    @Override
+    public Optional<Venta> ListarId(int id) {
+        return data.findById(id);
+    }
+
+    @Override
+    public void Guardar(Venta v) {
+        data.save(v);
+    }
+
+    @Override
+    public void Eliminar(int id) {
+        data.deleteById(id);
+    }
+
+    @Override
+    public Venta Registrar(Venta p) {
+        data.save(p);
+        // Listado de Ventas
+        List<Venta> ventas = Listar();
+        // Recuperar última Venta registrado
+        Venta venta = ventas.get(ventas.size() - 1);
+        int idVenta = venta.getIdVenta();
+        // Buscar por Id
+        Optional<Venta> datoRecuperado = ListarId(idVenta);
+        return datoRecuperado.get();
+    }
+
+    @Override
+    public ArrayList<Venta> buscarPorFechas(String fecha1, String fecha2) {
+        return data.buscarPorFechas(fecha1, fecha2);
+    }
+
+    @Override
+    public ArrayList<Venta> ventasCanceladas() {
+        return data.ventasCanceladas();
+    }
+}
diff --git a/src/main/resources/application.properties b/src/main/resources/application.properties
new file mode 100644
index 0000000..323a9ec
--- /dev/null
+++ b/src/main/resources/application.properties
@@ -0,0 +1,13 @@
+server.port=9010
+spring.thymeleaf.cache=false
+
+#MySQL
+spring.datasource.url=jdbc:mysql://localhost:3306/lapolleriadb?serverTimezone=UTC
+spring.datasource.username=root
+spring.datasource.password=
+spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
+#spring.jpa.hibernate.ddl-auto=update
+
+#Tama\u00c3\u00b1o m\u00c3\u00a1ximo de archivos a cargar
+spring.servlet.multipart.max-file-size=5MB
+spring.servlet.multipart.max-request-size=5MB
\ No newline at end of file
diff --git a/src/main/resources/static/1pollo.jpg b/src/main/resources/static/1pollo.jpg
new file mode 100644
index 0000000..78f7ddf
--- /dev/null
+++ b/src/main/resources/static/1pollo.jpg
Binary files differ
diff --git a/src/main/resources/static/eldorado.jpg b/src/main/resources/static/eldorado.jpg
new file mode 100644
index 0000000..5630d77
--- /dev/null
+++ b/src/main/resources/static/eldorado.jpg
Binary files differ
diff --git a/src/main/resources/static/images/arroz chaufa.jpg b/src/main/resources/static/images/arroz chaufa.jpg
new file mode 100644
index 0000000..b32e44f
--- /dev/null
+++ b/src/main/resources/static/images/arroz chaufa.jpg
Binary files differ
diff --git a/src/main/resources/static/images/medio pollo.jpg b/src/main/resources/static/images/medio pollo.jpg
new file mode 100644
index 0000000..51466aa
--- /dev/null
+++ b/src/main/resources/static/images/medio pollo.jpg
Binary files differ
diff --git a/src/main/resources/static/images/pollo con papas.jpg b/src/main/resources/static/images/pollo con papas.jpg
new file mode 100644
index 0000000..20b5397
--- /dev/null
+++ b/src/main/resources/static/images/pollo con papas.jpg
Binary files differ
diff --git a/src/main/resources/static/mostrito.jpg b/src/main/resources/static/mostrito.jpg
new file mode 100644
index 0000000..34d6083
--- /dev/null
+++ b/src/main/resources/static/mostrito.jpg
Binary files differ
diff --git a/src/main/resources/static/pollo121.png b/src/main/resources/static/pollo121.png
new file mode 100644
index 0000000..e640419
--- /dev/null
+++ b/src/main/resources/static/pollo121.png
Binary files differ
diff --git a/src/main/resources/static/pollo1211.jpg b/src/main/resources/static/pollo1211.jpg
new file mode 100644
index 0000000..5a4ccf0
--- /dev/null
+++ b/src/main/resources/static/pollo1211.jpg
Binary files differ
diff --git a/src/main/resources/static/pollo12111.jpg b/src/main/resources/static/pollo12111.jpg
new file mode 100644
index 0000000..c3a2aac
--- /dev/null
+++ b/src/main/resources/static/pollo12111.jpg
Binary files differ
diff --git a/src/main/resources/static/pollo14.png b/src/main/resources/static/pollo14.png
new file mode 100644
index 0000000..50ecb7c
--- /dev/null
+++ b/src/main/resources/static/pollo14.png
Binary files differ
diff --git a/src/main/resources/static/pollolog.jpg b/src/main/resources/static/pollolog.jpg
new file mode 100644
index 0000000..9c2aa53
--- /dev/null
+++ b/src/main/resources/static/pollolog.jpg
Binary files differ
diff --git a/src/main/resources/static/script-configCarrito.js b/src/main/resources/static/script-configCarrito.js
new file mode 100644
index 0000000..e6a98ef
--- /dev/null
+++ b/src/main/resources/static/script-configCarrito.js
@@ -0,0 +1,26 @@
+function confirmarEliminarCarta(opcion) {
+    event.preventDefault();
+    Swal.fire({
+        title: 'Confirmar solicitud',
+        text: "¿Está seguro que desea eliminar este plato?",
+        icon: 'warning',
+        showCancelButton: true,
+        confirmButtonColor: '#3085d6',
+        cancelButtonColor: '#d33',
+        confirmButtonText: '¡Sí, eliminar!',
+        cancelButtonText: 'Cancelar'
+    }).then((result) => {
+        if (result.isConfirmed) {
+            Swal.fire(
+                    '¡Plato eliminado!',
+                    'El plato fue eliminado con éxito.',
+                    'success'
+                    ).then((result) => {
+                if (result.isConfirmed)
+                {
+                    location.href = opcion.href;
+                }
+            });
+        }
+    });
+}
\ No newline at end of file
diff --git a/src/main/resources/static/styles.css b/src/main/resources/static/styles.css
new file mode 100644
index 0000000..bac3b52
--- /dev/null
+++ b/src/main/resources/static/styles.css
@@ -0,0 +1,277 @@
+@import url('https://fonts.googleapis.com/css?family=Varela+Round');
+html, body {
+    overflow-x: hidden;
+    height: 100%;
+}
+body {
+    background: #fff;
+    padding: 0;
+    margin: 0;
+    font-family: 'Varela Round', sans-serif;
+}
+
+.header {
+    display: block;
+    margin: 0 auto;
+    width: 100%;
+    max-width: 100%;
+    box-shadow: none;
+    background-color: #FC466B;
+    position: fixed;
+    height: 60px!important;
+    overflow: hidden;
+    z-index: 10;
+}
+.main {
+    margin: 0 auto;
+    padding: 10px;
+    display: block;
+    height: 100%;
+    margin-top: 20px;
+}
+.mainInner{
+    display: table;
+    height: 100%;
+    width: 100%;
+    text-align: center;
+}
+.mainInner div{
+    display:table-cell;
+    vertical-align: middle;
+    font-size: 3em;
+    font-weight: bold;
+    letter-spacing: 1.25px;
+}
+#sidebarMenu {
+    height: 100%;
+    position: fixed;
+    left: 0;
+    width: 250px;
+    margin-top: 60px;
+    transform: translateX(-250px);
+    transition: transform 250ms ease-in-out;
+    background: linear-gradient(180deg, #FC466B 0%, #3F5EFB 100%);
+}
+.sidebarMenuInner{
+    margin:0;
+    padding:0;
+    border-top: 1px solid rgba(255, 255, 255, 0.10);
+}
+.sidebarMenuInner li{
+    list-style: none;
+    color: #fff;
+    text-transform: uppercase;
+    font-size: 12px;
+    font-weight: bold;
+    padding: 15px;
+    cursor: pointer;
+    border-bottom: 1px solid rgba(255, 255, 255, 0.10);
+}
+.sidebarMenuInner li span{
+    display: block;
+    font-size: 14px;
+    color: rgba(255, 255, 255, 0.50);
+}
+.sidebarMenuInner li a{
+    color: #fff;
+    text-transform: uppercase;
+    font-weight: bold;
+    cursor: pointer;
+    text-decoration: none;
+}
+input[type="checkbox"]:checked ~ #sidebarMenu {
+    transform: translateX(0);
+}
+
+input[type=checkbox] {
+    transition: all 0.3s;
+    box-sizing: border-box;
+    display: none;
+}
+.sidebarIconToggle {
+    transition: all 0.3s;
+    box-sizing: border-box;
+    cursor: pointer;
+    position: absolute;
+    z-index: 99;
+    height: 100%;
+    width: 100%;
+    top: 22px;
+    left: 15px;
+    height: 22px;
+    width: 22px;
+}
+.spinner {
+    transition: all 0.3s;
+    box-sizing: border-box;
+    position: absolute;
+    height: 3px;
+    width: 100%;
+    background-color: #fff;
+}
+.horizontal {
+    transition: all 0.3s;
+    box-sizing: border-box;
+    position: relative;
+    float: left;
+    margin-top: 3px;
+}
+.diagonal.part-1 {
+    position: relative;
+    transition: all 0.3s;
+    box-sizing: border-box;
+    float: left;
+}
+.diagonal.part-2 {
+    transition: all 0.3s;
+    box-sizing: border-box;
+    position: relative;
+    float: left;
+    margin-top: 3px;
+}
+input[type=checkbox]:checked ~ .sidebarIconToggle > .horizontal {
+    transition: all 0.3s;
+    box-sizing: border-box;
+    opacity: 0;
+}
+input[type=checkbox]:checked ~ .sidebarIconToggle > .diagonal.part-1 {
+    transition: all 0.3s;
+    box-sizing: border-box;
+    transform: rotate(135deg);
+    margin-top: 8px;
+}
+input[type=checkbox]:checked ~ .sidebarIconToggle > .diagonal.part-2 {
+    transition: all 0.3s;
+    box-sizing: border-box;
+    transform: rotate(-135deg);
+    margin-top: -9px;
+}
+
+/* Modal styles */
+
+.modal-login {
+    color: #636363;
+    width: 350px;
+}
+.modal-login .modal-content {
+    padding: 20px;
+    border-radius: 5px;
+    border: none;
+}
+.modal-login .modal-header {
+    border-bottom: none;
+    position: relative;
+    justify-content: center;
+}
+.modal-login h4 {
+    text-align: center;
+    font-size: 26px;
+    margin: 30px 0 -15px;
+}
+.modal-login .form-control:focus {
+    border-color: #70c5c0;
+}
+.modal-login .form-control, .modal-login .btn {
+    min-height: 40px;
+    border-radius: 3px;
+}
+.modal-login .close {
+    position: absolute;
+    top: -5px;
+    right: -5px;
+}
+.modal-login .modal-footer {
+    background: #ecf0f1;
+    border-color: #dee4e7;
+    text-align: center;
+    justify-content: center;
+    margin: 0 -20px -20px;
+    border-radius: 5px;
+    font-size: 13px;
+}
+.modal-login .modal-footer a {
+    color: #999;
+}
+.modal-login .avatar {
+    position: absolute;
+    margin: 0 auto;
+    left: 0;
+    right: 0;
+    top: -70px;
+    width: 95px;
+    height: 95px;
+    border-radius: 50%;
+    z-index: 9;
+    background: #FE4321;
+    padding: 15px;
+    box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.1);
+}
+.modal-login .avatar img {
+    width: 100%;
+}
+.modal-login.modal-dialog {
+    margin-top: 80px;
+}
+.modal-login .btn {
+    color: #fff;
+    border-radius: 4px;
+    background: #FE4321;
+    text-decoration: none;
+    transition: all 0.4s;
+    line-height: normal;
+    border: none;
+}
+.modal-login .btn:hover, .modal-login .btn:focus {
+    background: #FE4321;
+    outline: none;
+}
+.trigger-btn {
+    display: inline-block;
+    margin: 100px auto;
+    color:#FE4321;
+    font-size:30px;
+}
+
+
+
+
+
+
+
+/* The Modal (background) */
+.modal {
+    display: none; /* Hidden by default */
+    position: fixed; /* Stay in place */
+    z-index: 1; /* Sit on top */
+    left: 0;
+    top: 0;
+    width: 100%; /* Full width */
+    height: 100%; /* Full height */
+    overflow: auto; /* Enable scroll if needed */
+    background-color: rgb(0,0,0); /* Fallback color */
+    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
+}
+
+/* Modal Content/Box */
+.modal-content {
+    background-color: #fefefe;
+    margin: 15% auto; /* 15% from the top and centered */
+    padding: 20px;
+    border: 1px solid #888;
+    width: 100%; /* Could be more or less, depending on screen size */
+}
+
+/* The Close Button */
+.close {
+    color: #aaa;
+    float: right;
+    font-size: 28px;
+    font-weight: bold;
+}
+
+.close:hover,
+.close:focus {
+    color: black;
+    text-decoration: none;
+    cursor: pointer;
+} 
\ No newline at end of file
diff --git a/src/main/resources/templates/AreaTrabajo/areaTrabajoFormulario.html b/src/main/resources/templates/AreaTrabajo/areaTrabajoFormulario.html
new file mode 100644
index 0000000..54941ec
--- /dev/null
+++ b/src/main/resources/templates/AreaTrabajo/areaTrabajoFormulario.html
@@ -0,0 +1,85 @@
+<!DOCTYPE html>
+<html xmlns:th="http://www.thymeleaf.org">
+    <head>
+        <title>Formulario de Area de trabajo </title>
+        <meta charset="UTF-8">
+        <meta name="viewport" content="width=device-width, initial-scale=1.0">
+        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css">
+        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
+        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">   
+        <link href="styles.css" rel="stylesheet" type="text/css"/>
+        <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
+    </head>
+    <body>
+
+        <nav class="navbar navbar-expand-sm navbar-dark bg-success" id="navbar">
+            <div class="container-fluid col-md-10">
+                <a class="navbar-brand" href="#">
+                    <div th:if="${opcionEditar == 0}">
+                        <p class="fs-4 text-black fw-bold align-bottom my-3" >Crear Área de trabajo</p>
+                    </div>
+                    <div th:if="${opcionEditar == 1}">
+                        <p class="fs-4 text-black fw-bold align-bottom my-3" >Editar Área de trabajo</p>
+                    </div>
+                </a>
+                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
+                    <span class="navbar-toggler-icon">
+                    </span>
+                </button>
+            </div>
+        
+        </nav>
+
+        <div th:if="${opcionEditar == 1}" id='center' class="main center">
+            <form action="actualizarAreaTrabajo" method="POST">
+                <div class="mb-3" style="display: none">
+                    <label>idAreaTrabajo</label>
+                    <input type="text" class="form-control" placeholder="id" name="idAreaTrabajo" th:value="${area.idAreaTrabajo}">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-person-fill"></i>
+                    <label>Nombre</label>
+                    <input type="text" class="form-control" placeholder="Nombre" name="nombre" th:value="${area.nombre}" required="true">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-person-fill"></i>
+                    <label>Descripción</label>
+                    <input type="text" class="form-control" placeholder="Descripción" name="descripcion" th:value="${area.descripcion}" required="true">
+                </div>
+                <div class="mb-3">
+                    <label>Estado</label>
+                    <select class="form-select" name="estado" required="required">
+                        <div th:if="${area.estado == 1}">
+                            <option value="1" selected>Activo</option>
+                            <option value="0">Inactivo</option>
+                        </div>
+                        <div th:if="${area.estado == 0}">
+                            <option value="0" selected>Inactivo</option>
+                            <option value="1">Activo</option>
+                        </div>
+                    </select>
+                </div>
+                <input class="btn btn-secondary btn btn-dark" type="submit" value="Actualizar">
+                <a class="btn btn-danger" href="/listadoAreaTrabajo">Cancelar</a>
+            </form>
+        </div>
+
+        <!--CREAR ÁREA DE TRABAJO-->
+        <div th:if="${opcionEditar == 0}" id='center' class="main center">
+            <form action="registrarAreaTrabajo" method="POST">
+                <div class="mb-3">
+                    <i class="bi bi-person-fill"></i>
+                    <label>Nombre</label>
+                    <input type="text" class="form-control" placeholder="Nombre" name="nombre" required="required">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-person-fill"></i>
+                    <label>Descripción</label>
+                    <input type="text" class="form-control" placeholder="Descripción" name="descripcion" required="required">
+                </div>
+                <input class="btn btn-secondary btn btn-dark" type="submit" value="Crear">
+                <a class="btn btn-danger" href="/listadoAreaTrabajo">Cancelar</a>
+            </form>
+        </div>
+    </body>
+</html>
diff --git a/src/main/resources/templates/AreaTrabajo/listadoAreaTrabajo.html b/src/main/resources/templates/AreaTrabajo/listadoAreaTrabajo.html
new file mode 100644
index 0000000..2b6545e
--- /dev/null
+++ b/src/main/resources/templates/AreaTrabajo/listadoAreaTrabajo.html
@@ -0,0 +1,74 @@
+<!DOCTYPE html>
+<html xmlns:th="http://www.thymeleaf.org">
+    <head>
+        <title>Lista de area de trabajo</title>
+        <meta charset="UTF-8">
+        <meta name="viewport" content="width=device-width, initial-scale=1.0">
+        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css">
+        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
+        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">   
+        <link href="styles.css" rel="stylesheet" type="text/css"/>      
+        <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
+    </head>
+
+    <body class=" bg-white, text-black">
+        <div th:replace="menu :: encabezado-menu"></div>
+        <div th:replace="menu :: contenedor-menu"></div>
+
+        <nav class="navbar navbar-expand-sm navbar-dark bg-success" id="navbar">
+            <div class="container-fluid col-md-10">
+                <a class="navbar-brand" href="#">
+                    <p class="fs-4 text-black fw-bold align-bottom  my-3  " > Áreas de trabajo </p>
+                </a>
+                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
+                    <span class="navbar-toggler-icon">
+                    </span>
+                </button>
+            </div>
+        
+        </nav>
+
+        <div class="m-5 p-5 bg-secondary bg-opacity-75 position-relative">
+            <h2 class="mb-5 fs-1 text-center text-uppercase text-white">
+                Listado de Áreas de trabajo
+            </h2>
+            <div class="table-responsive mx-3">
+                <table class="table border border-2 border-dark">
+                    <tr class="table-dark">
+                        <th>#</th>
+                        <th>Nombre</th>
+                        <th>Descripción</th>
+                        <th>Estado</th>
+                        <th>Acciones</th>
+                    </tr> 
+                    <tr class="table-secondary" th:each="area, status : ${areas}">
+                        <td th:text="${status.count}"></td>
+                        <td th:text="${area.nombre}">Nombre</td>
+                        <td th:text="${area.descripcion}">Apellido</td>
+                    <div th:if="${area.estado == 1}">
+                        <td>Activo</td>
+                    </div>
+                    <div th:if="${area.estado == 0}">
+                        <td>Inactivo</td>
+                    </div>
+                    <td>
+                        <a class="btn btn-success opc p-0 ps-1 " th:href="@{/buscarAreaTrabajo(idAreaTrabajo=${area.idAreaTrabajo})}">
+                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor">
+                            <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z"/>
+                            <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z"/>
+                            </svg>
+                        </a>
+                    </td>
+                    </tr>  
+                </table>
+
+                <div class="d-flex justify-content-center">
+                    <a class="btn btn-secondary btn btn-dark" href="/nuevoAreaTrabajo">
+                        Agregar Área de Trabajo
+                        <i class="bi bi-plus-circle-fill"></i>
+                    </a>
+                </div>
+            </div>   
+        </div>
+    </body>
+</html>
diff --git a/src/main/resources/templates/CarritoV.html b/src/main/resources/templates/CarritoV.html
new file mode 100644
index 0000000..e3fd581
--- /dev/null
+++ b/src/main/resources/templates/CarritoV.html
@@ -0,0 +1,69 @@
+
+<html>
+    <head>
+        <title>principal | Carrito Compra</title>
+        <meta charset="UTF-8">
+        <meta name="viewport" content="width=device-width, initial-scale=1.0">
+        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css">
+        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
+        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">  
+    </head>
+    <body>
+
+        <div class="shadow-sm p-3 mb-5 bg-body rounded nav nav-link">
+            <li class="nav-item">
+                <a class="nav-link active" aria-current="page" href="listadoProductos"><i class="bi bi-arrow-90deg-left"></i> Seguir Comprando</a>
+            </li>
+        </div>
+
+        <table  class="table table-striped table-hover container shadow-lg p-3 mb-5 bg-body rounded ">
+            <thead>
+                <tr>
+                    <th>#</th>
+                    <th>PRODUCTO</th>
+                    <th>IMAGEN</th>
+                    <th>PRECIO</th>
+                    <th>DETALLE</th>
+                    <th>COSTO TOTAL</th>
+                </tr>
+            </thead>
+            <tbody>
+            <td></td>
+            <td>1/4 pollo</td>
+            <td><img src="pollo14.png" class="card-img-top" style="max-width: 50px;"></td>
+            <td>s/ 14.00</td>
+            <td> </td>
+            <td>s/ 14.00</td>
+            <td></td>
+            <!--<tr th:each="producto,status : ${productosdato}">
+                <td th:text="${status.count}"></td>
+                <td th:text="${producto.id_producto}"></td>
+                <td th:text="${producto.nombre_producto}"></td>
+                <td th:text="${producto.precio}"></td>
+                <td th:text="${producto.fecha_vencimiento}"></td>
+                <td th:text="${producto.stock}"></td>
+                <td th:text="${producto.descripcion}"></td>
+                <td><img class="float-left ml-1" th:src="@{'/IProducto/' + ${producto.Imagen}}" th:alt="${producto.Imagen}" style="width:50%;" /></td>
+                <td th:text="${producto.proveedor.nombre_proveedor}"></td>
+                <td th:text="${producto.categoria.nombre_categoria}"></td>
+                <td><a th:href="@{/EditarP(id=${producto.id_producto})}"><i class="bi bi-pen"></i></a></td>
+                <td><a th:href="@{/eliminarPro(id=${producto.id_producto})}" onclick="return confirm('¿Estas seguro de eliminar?')" style="color:red;" ><i class="bi bi-trash3"></i></a></td>
+            </tr>-->
+        </tbody>
+    </table>
+
+    <div class="container">
+        <footer class="py-3 my-4">
+            <ul class="nav justify-content-center border-bottom pb-3 mb-3">
+                <li class="nav-item"><a href="#" class="nav-link px-2 text-muted">Home</a></li>
+                <li class="nav-item"><a href="#" class="nav-link px-2 text-muted">Facturas</a></li>
+                <li class="nav-item"><a href="#" class="nav-link px-2 text-muted">Pricing</a></li>
+                <li class="nav-item"><a href="#" class="nav-link px-2 text-muted">FAQs</a></li>
+                <li class="nav-item"><a href="#" class="nav-link px-2 text-muted">About</a></li>
+            </ul>
+            <p class="text-center text-muted">© 2023 El Dorado, Inc</p>
+        </footer>
+    </div>
+
+</body>
+</html>
diff --git a/src/main/resources/templates/Cliente/clienteFormulario.html b/src/main/resources/templates/Cliente/clienteFormulario.html
new file mode 100644
index 0000000..492cffb
--- /dev/null
+++ b/src/main/resources/templates/Cliente/clienteFormulario.html
@@ -0,0 +1,131 @@
+<!DOCTYPE html>
+<html xmlns:th="http://www.thymeleaf.org">
+    <head>
+        <title>TODO supply a title</title>
+        <meta charset="UTF-8">
+        <meta name="viewport" content="width=device-width, initial-scale=1.0">
+        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css">
+        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
+        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">   
+        <link href="styles.css" rel="stylesheet" type="text/css"/>
+        <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
+    </head>
+    <body>
+
+        <nav class="navbar navbar-expand-sm navbar-dark bg-success" id="navbar">
+            <div class="container-fluid col-md-10">
+                <a class="navbar-brand" href="#">
+                    <div th:if="${opcionEditar == 0}">
+                        <p class="fs-4 text-black fw-bold align-bottom my-3" >Crear Cliente</p>
+                    </div>
+                    <div th:if="${opcionEditar == 1}">
+                        <p class="fs-4 text-black fw-bold align-bottom my-3" >Editar Cliente</p>
+                    </div>
+                </a>
+                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
+                    <span class="navbar-toggler-icon">
+                    </span>
+                </button>
+            </div>
+        
+        </nav>
+
+        <div th:if="${opcionEditar == 1}" id='center' class="main center">
+            <form action="actualizarCliente" method="POST">
+                <div class="mb-3" style="display: none">
+                    <label>idCliente</label>
+                    <input type="text" class="form-control" placeholder="id" name="idCliente" th:value="${cliente.idCliente}">
+                </div>
+                <div class="mb-3" style="display: none">
+                    <label>idPersona</label>
+                    <input type="text" class="form-control" placeholder="id" name="idPersona" th:value="${cliente.idPersona.idPersona}">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-person-fill"></i>
+                    <label>Nombre</label>
+                    <input type="text" class="form-control" placeholder="Nombre" name="nombre" th:value="${cliente.idPersona.nombre}" required="true">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-person-fill"></i>
+                    <label>Apellido</label>
+                    <input type="text" class="form-control" placeholder="Apellido" name="apellido" th:value="${cliente.idPersona.apellido}" required="true">
+                </div>
+
+                <div class="mb-3">
+                    <i class="bi bi-envelope-fill"></i>
+                    <label>Email</label>
+                    <input type="text" class="form-control" placeholder="Email" name="email" th:value="${cliente.idPersona.email}" required="true">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-telephone-fill"></i>
+                    <label>Telefono</label>
+                    <input type="text" class="form-control" placeholder="Telefono" name="telefono" th:value="${cliente.idPersona.telefono}" required="true">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-person-fill"></i>
+                    <label>Nombre usuario</label>
+                    <input type="text" class="form-control" placeholder="Nombre usuario" name="nombreUsuario" th:value="${cliente.nombreUsuario}" required="true">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-lock-fill"></i>
+                    <label>Clave</label>
+                    <input type="password" class="form-control" placeholder="Clave" name="clave" th:value="${cliente.clave}" required="true">
+                </div>
+                <div class="mb-3">
+                    <label>Estado</label>
+                    <select class="form-select" name="estado" required="required">
+                        <div th:if="${cliente.estado == 1}">
+                            <option value="1" selected>Activo</option>
+                            <option value="0">Inactivo</option>
+                        </div>
+                        <div th:if="${cliente.estado == 0}">
+                            <option value="0" selected>Inactivo</option>
+                            <option value="1">Activo</option>
+                        </div>
+                    </select>
+                </div>
+                <input class="btn btn-secondary btn btn-dark" type="submit" value="Actualizar">
+                <a class="btn btn-danger" href="/listadoCliente">Cancelar</a>
+            </form>
+        </div>
+
+        <!--CREAR CLIENTE-->
+        <div th:if="${opcionEditar == 0}" id='center' class="main center">
+            <form action="registrarCliente" method="POST">
+                <div class="mb-3">
+                    <i class="bi bi-person-fill"></i>
+                    <label>Nombre</label>
+                    <input type="text" class="form-control" placeholder="Nombre" name="nombre" required="required">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-person-fill"></i>
+                    <label>Apellido</label>
+                    <input type="text" class="form-control" placeholder="Apellido" name="apellido" required="required">
+                </div>
+
+                <div class="mb-3">
+                    <i class="bi bi-envelope-fill"></i>
+                    <label>Email</label>
+                    <input type="text" class="form-control" placeholder="Email" name="email" required="required">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-telephone-fill"></i>
+                    <label>Telefono</label>
+                    <input type="text" class="form-control" placeholder="Telefono" name="telefono" required="required">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-person-fill"></i>
+                    <label>Nombre de usuario</label>
+                    <input type="text" class="form-control" placeholder="Nombre de usuario" name="nombreUsuario" required="required">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-lock-fill"></i>
+                    <label>Clave</label>
+                    <input type="password" class="form-control" placeholder="Clave" name="clave" required="required">
+                </div>
+                <input class="btn btn-secondary btn btn-dark" type="submit" value="Crear">
+                <a class="btn btn-danger" href="/listadoCliente">Cancelar</a>
+            </form>
+        </div>
+    </body>
+</html>
diff --git a/src/main/resources/templates/Cliente/gestionCliente.html b/src/main/resources/templates/Cliente/gestionCliente.html
new file mode 100644
index 0000000..3518342
--- /dev/null
+++ b/src/main/resources/templates/Cliente/gestionCliente.html
@@ -0,0 +1,81 @@
+<!DOCTYPE html>
+<html xmlns:th="http://www.thymeleaf.org">
+    <head>
+        <title>TODO supply a title</title>
+        <meta charset="UTF-8">
+        <meta name="viewport" content="width=device-width, initial-scale=1.0">
+        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css">
+        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
+        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">   
+        <link href="styles.css" rel="stylesheet" type="text/css"/>      
+        <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
+    </head>
+    <body class=" bg-white, text-black">
+        <div th:replace="menu :: encabezado-menu"></div>
+        <div th:replace="menu :: contenedor-menu"></div>
+
+        <nav class="navbar navbar-expand-sm navbar-dark bg-success" id="navbar">
+            <div class="container-fluid col-md-10">
+                <a class="navbar-brand" href="#">
+                    <p class="fs-4 text-black fw-bold align-bottom  my-3  " > Gestión de Clientes </p>
+                </a>
+                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
+                    <span class="navbar-toggler-icon">
+                    </span>
+                </button>
+            </div>
+        </nav>
+
+        <div class="m-5 p-5 bg-secondary bg-opacity-75 position-relative">
+            <h2 class="mb-5 fs-1 text-center text-uppercase text-white">
+                Listado de Clientes
+            </h2>
+            <div class="table-responsive mx-3">
+                <table class="table border border-2 border-dark">
+                    <tr class="table-dark">
+                        <th>#</th>
+                        <th>Nombre</th>
+                        <th>Apellido</th>
+                        <th>Email</th>
+                        <th>Teléfono</th>
+                        <th>Nombre Usuario</th>
+                        <th>Clave</th>
+                        <th>Estado</th>
+                        <th>Acciones</th>
+                    </tr> 
+                    <tr class="table-secondary" th:each="cliente, status : ${clientes}">
+                        <td th:text="${status.count}"></td>
+                        <td th:text="${cliente.idPersona.nombre}">Nombre</td>
+                        <td th:text="${cliente.idPersona.apellido}">Apellido</td>
+                        <td th:text="${cliente.idPersona.email}">Email</td>
+                        <td th:text="${cliente.idPersona.telefono}">Teléfono</td>
+                        <td th:text="${cliente.nombreUsuario}">NombreUsuario</td>
+                        <td>******</td>
+                    <div th:if="${cliente.estado == 1}">
+                        <td>Activo</td>
+                    </div>
+                    <div th:if="${cliente.estado == 0}">
+                        <td>Inactivo</td>
+                    </div>
+
+                    <td>
+                        <a class="btn btn-success opc p-0 ps-1 " th:href="@{/buscarCliente(idCliente=${cliente.idCliente})}">
+                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor">
+                            <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z"/>
+                            <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z"/>
+                            </svg>
+                        </a>
+                    </td>
+                    </tr>  
+                </table>
+                <div class="d-flex justify-content-center">
+                    <a class="btn btn-secondary btn btn-dark" href="/nuevoCliente">
+                        Agregar Cliente
+                        
+                        <i class="bi bi-plus-circle-fill"></i>
+                    </a>
+                </div>
+            </div>   
+        </div>
+    </body>
+</html>
diff --git a/src/main/resources/templates/Colaborador/colaboradorFormulario.html b/src/main/resources/templates/Colaborador/colaboradorFormulario.html
new file mode 100644
index 0000000..b6c147d
--- /dev/null
+++ b/src/main/resources/templates/Colaborador/colaboradorFormulario.html
@@ -0,0 +1,126 @@
+<!DOCTYPE html>
+<html xmlns:th="http://www.thymeleaf.org">
+    <head>
+        <title>Formulario de colaborador </title>
+        <meta charset="UTF-8">
+        <meta name="viewport" content="width=device-width, initial-scale=1.0">
+        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css">
+        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
+        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">   
+        <link href="styles.css" rel="stylesheet" type="text/css"/>
+        <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
+    </head>
+    <body>
+
+        <nav class="navbar navbar-expand-sm navbar-dark bg-success" id="navbar">
+            <div class="container-fluid col-md-10">
+                <a class="navbar-brand" href="#">
+                    <div th:if="${opcionEditar == 0}">
+                        <p class="fs-4 text-black fw-bold align-bottom my-3" >Crear Colaborador</p>
+                    </div>
+                    <div th:if="${opcionEditar == 1}">
+                        <p class="fs-4 text-black fw-bold align-bottom my-3" >Editar Colaborador</p>
+                    </div>
+                </a>
+                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
+                    <span class="navbar-toggler-icon">
+                    </span>
+                </button>
+            </div>
+        </nav>
+
+        <div th:if="${opcionEditar == 1}" id='center' class="main center">
+            <form action="actualizarColaborador" method="POST">
+                <div class="mb-3" style="display: none">
+                    <label>idColaborador</label>
+                    <input type="text" class="form-control" placeholder="id" name="idColaborador" th:value="${colaborador.idColaborador}">
+                </div>
+                <div class="mb-3" style="display: none">
+                    <label>idPersona</label>
+                    <input type="text" class="form-control" placeholder="id" name="idPersona" th:value="${colaborador.idPersona.idPersona}">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-person-fill"></i>
+                    <label>Nombre</label>
+                    <input type="text" class="form-control" placeholder="Nombre" name="nombre" th:value="${colaborador.idPersona.nombre}" required="true">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-person-fill"></i>
+                    <label>Apellido</label>
+                    <input type="text" class="form-control" placeholder="Apellido" name="apellido" th:value="${colaborador.idPersona.apellido}" required="true">
+                </div>
+                
+                <div class="mb-3">
+                    <label>Área de trabajo</label>
+                    <select class="form-select" name="areaTrabajo" required="required">
+                        <option th:value="${colaborador.idAreaTrabajo.idAreaTrabajo}" th:text="${colaborador.idAreaTrabajo.nombre}"selected></option>
+                        <option value="">Seleccione</option>
+                        <option th:each="area : ${areas}" th:value="${area.idAreaTrabajo}" th:text="${area.nombre}"></option>
+                    </select>
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-envelope-fill"></i>
+                    <label>Email</label>
+                    <input type="text" class="form-control" placeholder="Email" name="email" th:value="${colaborador.idPersona.email}" required="true">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-telephone-fill"></i>
+                    <label>Telefono</label>
+                    <input type="text" class="form-control" placeholder="Telefono" name="telefono" th:value="${colaborador.idPersona.telefono}" required="true">
+                </div>
+                <div class="mb-3">
+                    <label>Estado</label>
+                    <select class="form-select" name="estado" required="required">
+                        <div th:if="${colaborador.estado == 1}">
+                            <option value="1" selected>Activo</option>
+                            <option value="0">Inactivo</option>
+                        </div>
+                        <div th:if="${colaborador.estado == 0}">
+                            <option value="0" selected>Inactivo</option>
+                            <option value="1">Activo</option>
+                        </div>
+                    </select>
+                </div>
+                <input class="btn btn-secondary btn btn-dark" type="submit" value="Actualizar">
+                <a class="btn btn-danger" href="/listadoColaborador">Cancelar</a>
+            </form>
+        </div>
+
+        <!--CREAR COLABORADOR-->
+        <div th:if="${opcionEditar == 0}" id='center' class="main center">
+            <form action="registrarColaborador" method="POST">
+                <div class="mb-3">
+                    <i class="bi bi-person-fill"></i>
+                    <label>Nombre</label>
+                    <input type="text" class="form-control" placeholder="Nombre" name="nombre" required="required">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-person-fill"></i>
+                    <label>Apellido</label>
+                    <input type="text" class="form-control" placeholder="Apellido" name="apellido" required="required">
+                </div>
+
+                <div class="form-group">
+                    <label>Área de trabajo</label>
+                    <select class="form-select" name="areaTrabajo" required="required">
+                        <option value="">Seleccione</option>
+                        <option th:each="area : ${areas}" th:value="${area.idAreaTrabajo}" th:text="${area.nombre}"></option>
+                    </select>
+                </div>
+
+                <div class="mb-3">
+                    <i class="bi bi-envelope-fill"></i>
+                    <label>Email</label>
+                    <input type="text" class="form-control" placeholder="Email" name="email" required="required">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-telephone-fill"></i>
+                    <label>Telefono</label>
+                    <input type="text" class="form-control" placeholder="Telefono" name="telefono" required="required">
+                </div>
+                <input class="btn btn-secondary btn btn-dark" type="submit" value="Crear">
+                <a class="btn btn-danger" href="/listadoColaborador">Cancelar</a>
+            </form>
+        </div>
+    </body>
+</html>
diff --git a/src/main/resources/templates/Colaborador/gestionColaborador.html b/src/main/resources/templates/Colaborador/gestionColaborador.html
new file mode 100644
index 0000000..752c8ec
--- /dev/null
+++ b/src/main/resources/templates/Colaborador/gestionColaborador.html
@@ -0,0 +1,79 @@
+<!DOCTYPE html>
+<html xmlns:th="http://www.thymeleaf.org">
+    <head>
+        <title>Gestión de colaborador</title>
+        <meta charset="UTF-8">
+        <meta name="viewport" content="width=device-width, initial-scale=1.0">
+        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css">
+        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
+        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">   
+        <link href="styles.css" rel="stylesheet" type="text/css"/>      
+        <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
+    </head>
+    <body class=" bg-white, text-black">
+        <div th:replace="menu :: encabezado-menu"></div>
+        <div th:replace="menu :: contenedor-menu"></div>
+
+        <nav class="navbar navbar-expand-sm navbar-dark bg-success" id="navbar">
+            <div class="container-fluid col-md-10">
+                <a class="navbar-brand" href="#">
+                    <p class="fs-4 text-black fw-bold align-bottom  my-3  " > Gestión de Colaboradores </p>
+                </a>
+                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
+                    <span class="navbar-toggler-icon">
+                    </span>
+                </button>
+            </div>
+        </nav>
+
+        <div class="m-5 p-5 bg-secondary bg-opacity-75 position-relative">
+            <h2 class="mb-5 fs-1 text-center text-uppercase text-white">
+                Listado de Colaboradores
+            </h2>
+            <div class="table-responsive mx-3">
+                <table class="table border border-2 border-dark">
+                    <tr class="table-dark">
+                        <th>#</th>
+                        <th>Nombre</th>
+                        <th>Apellido</th>
+                        <th>Área de trabajo</th>
+                        <th>Email</th>
+                        <th>Teléfono</th>
+                        <th>Estado</th>
+                        <th>Acciones</th>
+                    </tr> 
+                    <tr class="table-secondary" th:each="colaborador, status : ${colaboradores}">
+                        <td th:text="${status.count}"></td>
+                        <td th:text="${colaborador.idPersona.nombre}">Nombre</td>
+                        <td th:text="${colaborador.idPersona.apellido}">Apellido</td>
+                        <td th:text="${colaborador.idAreaTrabajo.nombre}">Área de trabajo</td>
+                        <td th:text="${colaborador.idPersona.email}">Email</td>
+                        <td th:text="${colaborador.idPersona.telefono}">Teléfono</td>
+                    <div th:if="${colaborador.estado == 1}">
+                        <td>Activo</td>
+                    </div>
+                    <div th:if="${colaborador.estado == 0}">
+                        <td>Inactivo</td>
+                    </div>
+
+                    <td>
+                        <a class="btn btn-success opc p-0 ps-1 " th:href="@{/buscarColaborador(idColaborador=${colaborador.idColaborador})}">
+                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor">
+                            <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z"/>
+                            <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z"/>
+                            </svg>
+                        </a>
+                    </td>
+                    </tr>  
+                </table>
+                <div class="d-flex justify-content-center">
+                    <a class="btn btn-secondary btn btn-dark" href="/nuevoColaborador">
+                        Agregar Colaborador
+                        
+                        <i class="bi bi-plus-circle-fill"></i>
+                    </a>
+                </div>
+            </div>   
+        </div>
+    </body>
+</html>
diff --git a/src/main/resources/templates/Delivery/editarDelivery.html b/src/main/resources/templates/Delivery/editarDelivery.html
new file mode 100644
index 0000000..0e167d4
--- /dev/null
+++ b/src/main/resources/templates/Delivery/editarDelivery.html
@@ -0,0 +1,53 @@
+<!DOCTYPE html>
+<html xmlns:th="http://www.thymeleaf.org">
+    <head>
+        <title>Editar Delivery</title>
+        <meta charset="UTF-8">
+        <meta name="viewport" content="width=device-width, initial-scale=1.0">
+        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css">
+        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
+        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">   
+        <link href="styles.css" rel="stylesheet" type="text/css"/>
+        <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
+    </head>
+    <body>
+
+        <nav class="navbar navbar-expand-sm navbar-dark bg-success" id="navbar">
+            <div class="container-fluid col-md-10">
+                <a class="navbar-brand" href="#">
+                    <p class="fs-4 text-black fw-bold align-bottom my-3" >Editar Cliente </p>
+                </a>
+                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
+                    <span class="navbar-toggler-icon">
+                    </span>
+                </button>
+            </div>
+        </nav>
+
+        <div id='center' class="main center">
+            <form action="actualizarDelivery" method="POST">
+                <div class="mb-3" style="display: none">
+                    <label>idDelivery</label>
+                    <input type="text" class="form-control" placeholder="id" name="idDelivery" th:value="${delivery.idDelivery}">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-person-fill"></i>
+                    <label>Dirección</label>
+                    <input type="text" class="form-control" placeholder="Nombre" th:value="${delivery.direccion}" disabled="true">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-person-fill"></i>
+                    <label>Número de celular</label>
+                    <input type="text" class="form-control" placeholder="Nombre" th:value="${delivery.numeroCelular}" disabled="true">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-person-fill"></i>
+                    <label>Estado</label>
+                    <input type="text" class="form-control" placeholder="estado" name="estado" th:value="${delivery.estado}" required="true">
+                </div>
+                <input class="btn btn-secondary btn btn-dark" type="submit" value="Actualizar">
+                <a class="btn btn-danger" href="/listadoDeliverys">Cancelar</a>
+            </form>
+        </div>
+    </body>
+</html>
diff --git a/src/main/resources/templates/Delivery/listadoDelivery.html b/src/main/resources/templates/Delivery/listadoDelivery.html
new file mode 100644
index 0000000..c3d81ee
--- /dev/null
+++ b/src/main/resources/templates/Delivery/listadoDelivery.html
@@ -0,0 +1,69 @@
+<!DOCTYPE html>
+<html xmlns:th="http://www.thymeleaf.org">
+    <head>
+        <title>Lista de delivery</title>
+        <meta charset="UTF-8">
+        <meta name="viewport" content="width=device-width, initial-scale=1.0">
+        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css">
+        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
+        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">   
+        <link href="styles.css" rel="stylesheet" type="text/css"/>      
+        <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
+    </head>
+
+    <body class=" bg-white, text-black">
+        <div th:replace="menu :: encabezado-menu"></div>
+        <div th:replace="menu :: contenedor-menu"></div>
+
+        <nav class="navbar navbar-expand-sm navbar-dark bg-success" id="navbar">
+            <div class="container-fluid col-md-10">
+                <a class="navbar-brand" href="#">
+                    <p class="fs-4 text-black fw-bold align-bottom  my-3  " > Listado de Deliverys </p>
+                </a>
+                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
+                    <span class="navbar-toggler-icon">
+                    </span>
+                </button>
+            </div>
+        </nav>
+
+        <div class="m-5 p-5 bg-secondary bg-opacity-75 position-relative">
+            <h2 class="mb-5 fs-1 text-center text-uppercase text-white">
+                
+                Listado de Deliverys
+                
+            </h2>
+            <div class="table-responsive mx-3">
+                <table class="table border border-2 border-dark">
+                    <tr class="table-dark">
+                        <th>#</th>
+                        <th>Dirección de envió</th>
+                        <th>Número de referencia</th>
+                        <th>Nombre de Cliente</th>
+                        <th>Monto pagado</th>
+                        <th>Fecha de pago</th>
+                        <th>Estado</th>
+                        <th>Acción</th>
+                    </tr> 
+                    <tr class="table-secondary" th:each="delivery, status : ${deliverys}">
+                        <td th:text="${status.count}"></td>
+                        <td th:text="${delivery.direccion}">Dirección</td>
+                        <td th:text="${delivery.numeroCelular}">Número de celular</td>
+                        <td th:text="${delivery.idVenta.idCliente.idPersona.nombre}">Número de celular</td>
+                        <td th:text="${delivery.idVenta.pagoTotal}">Pago total</td>
+                        <td th:text="${delivery.idVenta.fecha}">Fecha</td>
+                        <td th:text="${delivery.estado}">Estado</td>
+                        <td>
+                            <a class="btn btn-success opc p-0 ps-1 " th:href="@{/buscarDelivery(idDelivery=${delivery.idDelivery})}">
+                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor">
+                                <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z"/>
+                                <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z"/>
+                                </svg>
+                            </a>
+                        </td>
+                    </tr>  
+                </table>
+            </div>   
+        </div>
+    </body>
+</html>
diff --git a/src/main/resources/templates/ModuloCliente/carritoCompras.html b/src/main/resources/templates/ModuloCliente/carritoCompras.html
new file mode 100644
index 0000000..df16a91
--- /dev/null
+++ b/src/main/resources/templates/ModuloCliente/carritoCompras.html
@@ -0,0 +1,84 @@
+<!DOCTYPE html>
+<html xmlns:th="http://www.thymeleaf.org">
+    <head>
+        <title>Carrito de Compras</title>
+        <meta charset="UTF-8">
+        <meta name="viewport" content="width=device-width, initial-scale=1.0">
+        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css">
+        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
+        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">   
+        <link href="styles.css" rel="stylesheet" type="text/css"/>      
+        <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
+        <!-- Sweet Alert -->
+        <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
+        <script src="script-configCarrito.js"></script>
+    </head>
+    <body class=" bg-white, text-black">
+        <nav class="navbar navbar-expand-sm navbar-dark bg-success " id="navbar">
+            <div class="container-fluid col-md-10 ">
+                <a class="navbar-brand" href="#">
+                    <img  width="150" height="90" src="eldorado.jpg" >
+                </a>
+
+                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
+                    <span class="navbar-toggler-icon">
+
+                    </span>
+                </button>
+
+                <div class="collapse navbar-collapse  col-md-4 ms-auto " id="navbarSupportedContent">
+                    <ul class="navbar-nav ms-auto ">
+                        <li class="nav-item"><a class="nav-link h5 text-black" aria-current="page" href="MenuCliente">Inicio</a></li>
+                        <li class="nav-item"><a class="nav-link h5  text-black" href="#">Nosotros</a></li>
+                        <li class="nav-item"><a class="nav-link h5 text-black " href="listadoProductos">Ordena aquí</a></li>
+                        <li class="nav-item"><a class="nav-link h5 text-black " href="listadoPedidos">Pedidos</a></li>
+                        <li class="nav-item"><a class="nav-link  h5 text-black" href="detalleCarrito"><i class="bi bi-cart4"></i></a></li>
+                        <li class="nav-item"><a class="nav-link h5  text-black" href="chickensvidal"><i class="bi bi-box-arrow-right"></i></a></li>
+                    </ul>
+                </div>
+            </div>
+        </nav>
+
+        <div class="m-5 p-5 bg-secondary bg-opacity-75 position-relative">
+            <h2 class="mb-5 fs-1 text-center text-uppercase text-white">
+                Carrito de compras
+            </h2>
+            <div class="table-responsive mx-3">
+                <table class="table border border-2 border-dark">
+                    <tr class="table-dark">
+                        <th>#</th>
+                        <th>Nombre de plato</th>
+                        <th>Cantidad</th>
+                        <th>Precio</th>
+                        <th>Total</th>
+                        <th>Acciones</th>
+                    </tr> 
+                    <tr class="table-secondary" th:each="venta, status : ${filtroVentas}">
+                        <td th:text="${status.count}"></td>                        
+                        <td th:text="${venta.idProducto.nombre}">Nombre</td>
+                        <td th:text="${venta.cantidad}">Nombre</td>
+                        <td th:text="${venta.precio}">Nombre</td>
+                        <td th:text="${venta.total}">Nombre</td>
+                        <td>
+                            <a th:href="@{/buscarVentaDetalle(idVentaDetalle=${venta.idVentaDetalle})}"><i class="bi bi-pencil-square" title="Editar"></i></a>
+                            <a th:href="@{/eliminarVentaDetalle(idVentaDetalle=${venta.idVentaDetalle})}" onclick="confirmarEliminarPlato(this)"><i class="bi bi-trash3-fill" title="Eliminar"></i></a>
+                        </td>
+                    </tr>  
+                </table>
+            </div>
+            <div th:if="${filtroVentas == null or filtroVentas.empty}">
+                Su carrito se encuentra vacío
+            </div>
+            <br>
+            <label>Monto Total: <span th:text="${montoTotal}"></span></label>
+            <br><br>
+            <div th:if="${montoTotal != 0}">
+                <div class="d-flex justify-content-center">
+                    <a class="btn btn-secondary btn btn-dark" href="/resumenPago">
+                        Realizar pago
+                    </a>
+                </div>
+            </div>
+        </div>
+    </body>
+</html>
diff --git a/src/main/resources/templates/ModuloCliente/indexCliente.html b/src/main/resources/templates/ModuloCliente/indexCliente.html
new file mode 100644
index 0000000..9806254
--- /dev/null
+++ b/src/main/resources/templates/ModuloCliente/indexCliente.html
@@ -0,0 +1,81 @@
+<!DOCTYPE html>
+<html xmlns:th="http://www.thymeleaf.org">
+    <head>
+        <title>Página Principal | Proyecto </title>
+        <meta charset="UTF-8">
+        <meta name="viewport" content="width=device-width, initial-scale=1.0">
+        <link href="estilos.css" rel="stylesheet">
+        <script src="javascripts.js"></script>
+        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css">
+        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
+        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">   
+        <link rel=" stylesheet " href="/scss/custom.css"> 
+        <link rel="stylesheet" href="css/bootstrap.min.css" crossorigin="anonymous">
+        <link rel="stylesheet" href="css/main.css">
+        <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
+    </head>
+
+    <body class=" bg-white, text-black">
+        <nav class="navbar navbar-expand-sm navbar-dark bg-success " id="navbar">
+            <div class="container-fluid col-md-10 ">
+                <a class="navbar-brand" href="#">
+                    <img  width="150" height="90" src="eldorado.jpg" >
+                </a>
+
+                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
+                    <span class="navbar-toggler-icon">
+
+                    </span>
+                </button>
+
+                <div class="collapse navbar-collapse  col-md-4 ms-auto " id="navbarSupportedContent">
+                    <ul class="navbar-nav ms-auto ">
+                        <li class="nav-item"><a class="nav-link h5 text-black" aria-current="page" href="MenuCliente">Inicio</a></li>
+                        <li class="nav-item"><a class="nav-link h5  text-black" href="#">Nosotros</a></li>
+                        <li class="nav-item"><a class="nav-link h5 text-black " href="listadoProductos">Ordena aquí</a></li>
+                        <li class="nav-item"><a class="nav-link h5 text-black " href="listadoPedidos">Pedidos</a></li>
+                        <li class="nav-item"><a class="nav-link  h5 text-black" href="detalleCarrito"><i class="bi bi-cart4"></i></a></li>
+                        <li class="nav-item"><a class="nav-link h5  text-black" href="chickensvidal"><i class="bi bi-box-arrow-right"></i></a></li>
+                    </ul>
+                </div>
+            </div>
+        </nav>
+
+        <div id="menu ">
+            <div class="container-ms p-2 bg-warning ">
+
+                <div class="row pt-5  ">
+                    <h3 class="text-center pb-2 pt-5 h1">EL DORADO</h3>
+                </div>
+
+                <div class="row my-5 mx-4 ">
+                    <div class=" col-sm">
+                        <div class="card w-70 card-border mb-5">
+                            <img src="pollo14.png" class="card-img-top" alt="..." style="height: 600px">
+                            <div class="card-body">
+                                <p class="card-text h1"> 1/4 POLLO</p>
+                            </div>
+                        </div>
+                    </div>
+                    <div class="col-sm">
+                        <div class="card w-60 card-border mb-5">
+                            <img src="pollo12111.jpg" class="card-img-top" alt="..." style="height: 600px">
+                            <div class="card-body">
+                                <p class="card-text h1"> 1/2 POLLO</p>
+                            </div>
+                        </div>
+                    </div>
+                    <div class="col-sm">
+                        <div class="card w-60 card-border mb-5">
+                            <img src="mostrito.jpg" class="card-img-top" alt="..." style="height: 600px">
+                            <div class="card-body">
+                                <p class="card-text-success h1"> MOSTRITO</p>
+                            </div>
+                        </div>
+                    </div>
+                </div>
+            </div>
+        </div>
+        <script src="js/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
+        <script src="js/bootstrap.min.js" integrity="sha384-oesi62hOLfzrys4LxRF63OJCXdXDipiYWBnvTl9Y9/TRlw5xlKIEHpNyvvDShgf/" crossorigin="anonymous"></script>
+</html>
diff --git a/src/main/resources/templates/ModuloCliente/listadoPedidos.html b/src/main/resources/templates/ModuloCliente/listadoPedidos.html
new file mode 100644
index 0000000..e60157f
--- /dev/null
+++ b/src/main/resources/templates/ModuloCliente/listadoPedidos.html
@@ -0,0 +1,65 @@
+<!DOCTYPE html>
+<html xmlns:th="http://www.thymeleaf.org">
+    <head>
+        <title>Lista de pedidos</title>
+        <meta charset="UTF-8">
+        <meta name="viewport" content="width=device-width, initial-scale=1.0">
+        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css">
+        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
+        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">   
+        <link href="styles.css" rel="stylesheet" type="text/css"/>      
+        <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
+    </head>
+    <body class=" bg-white, text-black">
+        <nav class="navbar navbar-expand-sm navbar-dark bg-success " id="navbar">
+            <div class="container-fluid col-md-10 ">
+                <a class="navbar-brand" href="#">
+                    <img  width="150" height="90" src="eldorado.jpg" >
+                </a>
+
+                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
+                    <span class="navbar-toggler-icon">
+
+                    </span>
+                </button>
+
+                <div class="collapse navbar-collapse  col-md-4 ms-auto " id="navbarSupportedContent">
+                    <ul class="navbar-nav ms-auto ">
+                        <li class="nav-item"><a class="nav-link h5 text-black" aria-current="page" href="MenuCliente">Inicio</a></li>
+                        <li class="nav-item"><a class="nav-link h5  text-black" href="#">Nosotros</a></li>
+                        <li class="nav-item"><a class="nav-link h5 text-black " href="listadoProductos">Ordena aquí</a></li>
+                        <li class="nav-item"><a class="nav-link h5 text-black " href="listadoPedidos">Pedidos</a></li>
+                        <li class="nav-item"><a class="nav-link  h5 text-black" href="detalleCarrito"><i class="bi bi-cart4"></i></a></li>
+                        <li class="nav-item"><a class="nav-link h5  text-black" href="chickensvidal"><i class="bi bi-box-arrow-right"></i></a></li>
+                    </ul>
+                </div>
+            </div>
+        </nav>
+
+        <div class="m-5 p-5 bg-secondary bg-opacity-75 position-relative">
+            <h2 class="mb-5 fs-1 text-center text-uppercase text-white">
+                Listado de Pedidos
+            </h2>
+            <div class="table-responsive mx-3">
+                <table class="table border border-2 border-dark">
+                    <tr class="table-dark">
+                        <th>#</th>
+                        <th>Dirección de envió</th>
+                        <th>Número de referencia</th>
+                        <th>Monto pagado</th>
+                        <th>Fecha de pago</th>
+                        <th>Estado</th>
+                    </tr> 
+                    <tr class="table-secondary" th:each="delivery, status : ${deliverys}">
+                        <td th:text="${status.count}"></td>
+                        <td th:text="${delivery.direccion}">Dirección</td>
+                        <td th:text="${delivery.numeroCelular}">Número de celular</td>
+                        <td th:text="${delivery.idVenta.pagoTotal}">Pago total</td>
+                        <td th:text="${delivery.idVenta.fecha}">Fecha</td>
+                        <td th:text="${delivery.estado}">Estado</td>
+                    </tr>  
+                </table>
+            </div>   
+        </div>
+    </body>
+</html>
diff --git a/src/main/resources/templates/ModuloCliente/listadoProductos.html b/src/main/resources/templates/ModuloCliente/listadoProductos.html
new file mode 100644
index 0000000..59b19e4
--- /dev/null
+++ b/src/main/resources/templates/ModuloCliente/listadoProductos.html
@@ -0,0 +1,66 @@
+<!DOCTYPE html>
+<html xmlns:th="http://www.thymeleaf.org">
+    <head>
+        <title>Lista de Productos</title>
+        <meta charset="UTF-8">
+        <meta name="viewport" content="width=device-width, initial-scale=1.0">
+        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css">
+        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
+        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">   
+        <link href="styles.css" rel="stylesheet" type="text/css"/>      
+        <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
+    </head>
+    <body class=" bg-white, text-black">
+        <nav class="navbar navbar-expand-sm navbar-dark bg-success " id="navbar">
+            <div class="container-fluid col-md-10 ">
+                <a class="navbar-brand" href="#">
+                    <img  width="150" height="90" src="eldorado.jpg" >
+                </a>
+
+                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
+                    <span class="navbar-toggler-icon">
+
+                    </span>
+                </button>
+
+                <div class="collapse navbar-collapse  col-md-4 ms-auto " id="navbarSupportedContent">
+                    <ul class="navbar-nav ms-auto ">
+                        <li class="nav-item"><a class="nav-link h5 text-black" aria-current="page" href="MenuCliente">Inicio</a></li>
+                        <li class="nav-item"><a class="nav-link h5  text-black" href="#">Nosotros</a></li>
+                        <li class="nav-item"><a class="nav-link h5 text-black " href="listadoProductos">Ordena aquí</a></li>
+                        <li class="nav-item"><a class="nav-link h5 text-black " href="listadoPedidos">Pedidos</a></li>
+                        <li class="nav-item"><a class="nav-link  h5 text-black" href="detalleCarrito"><i class="bi bi-cart4"></i></a></li>
+                        <li class="nav-item"><a class="nav-link h5  text-black" href="chickensvidal"><i class="bi bi-box-arrow-right"></i></a></li>
+                    </ul>
+                </div>
+            </div>
+        </nav>
+
+        <div class="m-5 p-5 bg-secondary bg-opacity-75 position-relative">
+            <h2 class="mb-5 fs-1 text-center text-uppercase text-white">
+                Listado de Productos
+            </h2>
+            <div class="table-responsive mx-3">
+                <table class="table border border-2 border-dark">
+                    <tr class="table-dark">
+                        <th>#</th>
+                        <th>Nombre</th>
+                        <th>Descripción</th>
+                        <th>Precio</th>
+                        <th>Agregar a carrito</th>
+                    </tr> 
+                    <tr class="table-secondary" th:each="producto, status : ${productos}">
+                        <td th:text="${status.count}"></td>
+                        <td th:text="${producto.nombre}">Nombre</td>
+                        <td th:text="${producto.descripcion}">Descripción</td>
+                        <td th:text="${producto.precio}">Precio</td>
+                        <td>
+                            <a th:href="@{/agregarCarrito(idProducto=${producto.idProducto})}">Agregar</a>
+                        </td>
+                    </tr>  
+                </table>
+
+            </div>   
+        </div>
+    </body>
+</html>
diff --git a/src/main/resources/templates/ModuloCliente/loginCliente.html b/src/main/resources/templates/ModuloCliente/loginCliente.html
new file mode 100644
index 0000000..556dfa9
--- /dev/null
+++ b/src/main/resources/templates/ModuloCliente/loginCliente.html
@@ -0,0 +1,73 @@
+<html xmlns:th="thymeleaf.org">
+    <head>
+        <title>Log In | Proyecto</title>
+        <meta charset="UTF-8">
+        <meta name="viewport" content="width=device-width, initial-scale=1.0">
+        <link href="estilos.css" rel="stylesheet">
+        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
+        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
+    </head>
+        <body class="bg-dark text-white">
+        
+        <svg xmlns="http://www.w3.org/2000/svg" style="display: none;"> 
+            <symbol id="person" fill="currentColor" viewBox="0 0 16 16">
+                <path d="M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z"/>
+            </symbol>
+            <symbol id="candado" fill="currentColor" viewBox="0 0 16 16">
+                <path d="M8 1a2 2 0 0 1 2 2v4H6V3a2 2 0 0 1 2-2zm3 6V3a3 3 0 0 0-6 0v4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2z"/>
+            </symbol>  
+            <symbol id="exclamation-triangle-fill" fill="currentColor" viewBox="0 0 16 16">
+                <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z"/>
+            </symbol>            
+        </svg>
+        
+        <div class="container-fluid py-1">
+            <div class="row">
+                <div class="col">
+                    <div class="h-200">
+                        <img class="w-100" src="pollolog.jpg">
+                    </div>
+                </div>
+                <div class="col px-3 d-flex">
+                    <div class="pb-5 bg-success my-auto w-100 rounded">
+                        <div class="mb-5">
+                            <div class="w-100 logologin d-flex justify-content-center">
+                                <img class="logologin" src="eldorado.jpg">  
+                            </div>
+                        </div>
+                        <div class="position-relative  bg-opacity-50 p-5 w-75 mx-auto rounded">
+                            <div class="position-absolute top-0 start-50 translate-middle text-dark">
+                                <h1 class=""> Bienvenido</h1> 
+                            </div>
+                            <form action="IngresarCliente" method="post" class="w-75 mx-auto">
+                                <div class="input-group">
+                                    <span class="input-group-text bg-black border border-dark text-white" id="nom">
+                                        <svg class="bi flex-shrink-0 me-2 d-inline" width="24" height="24" role="img"><use xlink:href="#person"/></svg>
+                                    </span>
+                                    <input autocomplete="off" type="text" name="user" class="form-control shadow-none border-none" placeholder="Usuario" aria-describedby="nom" required>
+                                </div>                    
+                                <div class="input-group mt-3">
+                                    <span class="input-group-text bg-black border border-dark text-white" id="ape">
+                                        <svg class="bi flex-shrink-0 me-2 d-inline" width="24" height="24" role="img"><use xlink:href="#candado"/></svg>
+                                    </span>
+                                    <input type="password" name="pass" class="form-control shadow-none" placeholder="Contraseña" aria-describedby="ape" required>
+                                </div>
+                                <div class="alert alert-danger alert-dismissible py-3" style="font-size: 12px" role="alert" th:if="${incorrecto==1}">                                    
+                                    Usuario y/o contraseña no reconocido
+                                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
+                                </div>  
+
+                                <div class="mt-3">
+                                    <center>
+                                        <button type="submit" class="btn-yellow btn-sm w-50 btn-outline-dark fs-4 mx-2">Ingresar</button>  
+                                    </center>
+                                </div>
+                            </form>
+                        </div>
+                    </div>
+                </div>
+            </div>
+        </div>
+        
+    </body>
+</html>
diff --git a/src/main/resources/templates/ModuloCliente/realizarPago.html b/src/main/resources/templates/ModuloCliente/realizarPago.html
new file mode 100644
index 0000000..425f796
--- /dev/null
+++ b/src/main/resources/templates/ModuloCliente/realizarPago.html
@@ -0,0 +1,70 @@
+<!DOCTYPE html>
+<html xmlns:th="http://www.thymeleaf.org">
+    <head>
+        <title>Realización de Pago</title>
+        <meta charset="UTF-8">
+        <meta name="viewport" content="width=device-width, initial-scale=1.0">
+        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css">
+        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
+        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">   
+        <link href="styles.css" rel="stylesheet" type="text/css"/>      
+        <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
+        <!-- Sweet Alert -->
+        <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
+        <script src="script-configCarrito.js"></script>
+    </head>
+    <body class=" bg-white, text-black">
+        <nav class="navbar navbar-expand-sm navbar-dark bg-success " id="navbar">
+            <div class="container-fluid col-md-10 ">
+                <a class="navbar-brand" href="#">
+                    <img  width="150" height="90" src="eldorado.jpg" >
+                </a>
+
+            </div>
+        </nav>
+
+        <div class="m-5 p-5 bg-secondary bg-opacity-75 position-relative">
+            <h2 class="mb-5 fs-1 text-center text-uppercase text-white">
+                Resumen de pago
+            </h2>
+            <div class="table-responsive mx-3">
+                <form action="confirmarPago" method="POST">
+                    <div class="mb-3">
+                        <i class="bi bi-geo"></i>
+                        <label>Dirección</label>
+                        <input type="text" class="form-control" placeholder="Dirección" name="direccion" required="required">
+                    </div>
+                    <div class="mb-3">
+                        <i class="bi bi-telephone"></i>
+                        <label>Número de celular</label>
+                        <input type="text" class="form-control" placeholder="Número de celular" name="numeroCelular" required="required">
+                    </div>
+                    <h3>Datos de Tarjeta</h3>
+                    <div class="mb-3">
+                        <i class="bi bi-credit-card"></i>
+                        <label>Nombre de Tarjeta</label>
+                        <input type="text" class="form-control" placeholder="Nombre de Tarjeta" name="nombre" required="required">
+                    </div>
+                    <div class="mb-3">
+                        <i class="bi bi-credit-card-fill"></i>
+                        <label>Número de Tarjeta</label>
+                        <input type="text" class="form-control" placeholder="Número de Tarjeta" name="numero" required="required">
+                    </div>
+                    <div class="mb-3">
+                        <i class="bi bi-calendar"></i>
+                        <label>Fecha de vencimiento</label>
+                        <input type="text" class="form-control" placeholder="Fecha de vencimiento" name="fecha" required="required">
+                    </div>
+                    <div class="mb-3">
+                        <i class="bi bi-lock-fill"></i>
+                        <label>CVV</label>
+                        <input type="text" class="form-control" placeholder="CVV" name="cvv" required="required">
+                    </div>
+
+                    <input class="btn btn-primary" type="submit" value="Confirmar Pago">
+                    <a href="/detalleCarrito" class="btn btn-secondary">Cancelar</a>
+                </form>
+            </div>
+        </div>
+    </body>
+</html>
diff --git a/src/main/resources/templates/ModuloCliente/ventaDetalleEditar.html b/src/main/resources/templates/ModuloCliente/ventaDetalleEditar.html
new file mode 100644
index 0000000..5723842
--- /dev/null
+++ b/src/main/resources/templates/ModuloCliente/ventaDetalleEditar.html
@@ -0,0 +1,51 @@
+<!DOCTYPE html>
+<html xmlns:th="http://www.thymeleaf.org">
+    <head>
+        <title>Edición de Venta</title>
+        <meta charset="UTF-8">
+        <meta name="viewport" content="width=device-width, initial-scale=1.0">
+        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css">
+        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
+        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">   
+        <link href="styles.css" rel="stylesheet" type="text/css"/>      
+        <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
+        <!-- Sweet Alert -->
+        <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
+        <script src="script-configCarrito.js"></script>
+    </head>
+    <body class=" bg-white, text-black">
+        <nav class="navbar navbar-expand-sm navbar-dark bg-success " id="navbar">
+            <div class="container-fluid col-md-10 ">
+                <a class="navbar-brand" href="#">
+                    <img  width="150" height="90" src="eldorado.jpg" >
+                </a>
+
+                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
+                    <span class="navbar-toggler-icon">
+                    </span>
+                </button>
+            </div>
+        </nav>
+
+        <div id='center' class="main center">
+            <h1>Editar Venta</h1>
+            <form action="actualizarVentaDetalle" method="POST">
+                <div class="mb-3" style="display: none">
+                    <i class="bi bi-person-fill"></i>
+                    <label>idVentaDetalle</label>
+                    <input type="text" class="form-control" placeholder="idVentaDetalle" name="idVentaDetalle" th:value="${ventaDetalle.idVentaDetalle}">
+                </div>
+                <div class="mb-3">
+                    <label>Plato</label>
+                    <input type="text" class="form-control" placeholder="Nombre" name="nombre" th:value="${ventaDetalle.idProducto.nombre}" required="true" disabled="true">
+                </div>
+                <div class="mb-3">
+                    <label>Cantidad</label>
+                    <input type="text" class="form-control" placeholder="Cantidad" name="cantidad" th:value="${ventaDetalle.cantidad}" required="true">
+                </div>
+                <input class="btn btn-primary" type="submit" value="Actualizar">
+                <a href="/detalleCarrito" class="btn btn-secondary">Cancelar</a>
+            </form>
+        </div>
+    </body>
+</html>
diff --git a/src/main/resources/templates/Venta/detalleVenta.html b/src/main/resources/templates/Venta/detalleVenta.html
new file mode 100644
index 0000000..2a34f13
--- /dev/null
+++ b/src/main/resources/templates/Venta/detalleVenta.html
@@ -0,0 +1,65 @@
+<!DOCTYPE html>
+<html xmlns:th="http://www.thymeleaf.org">
+    <head>
+        <title>Detalle de Venta</title>
+        <meta charset="UTF-8">
+        <meta name="viewport" content="width=device-width, initial-scale=1.0">
+        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css">
+        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
+        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">   
+        <link href="styles.css" rel="stylesheet" type="text/css"/>      
+        <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
+    </head>
+    <body>
+
+        <nav class="navbar navbar-expand-sm navbar-dark bg-success" id="navbar">
+            <div class="container-fluid col-md-10">
+                <a class="navbar-brand" href="#">
+                    <p class="fs-4 text-black fw-bold align-bottom my-3" >Detalle de Venta</p>
+                </a>
+                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
+                    <span class="navbar-toggler-icon">
+                    </span>
+                </button>
+            </div>
+        </nav>
+
+        <div class="m-5 p-5 bg-secondary bg-opacity-75 position-relative">
+            <h2 class="mb-5 fs-1 text-center text-uppercase text-white">
+                Detalle de Venta
+            </h2>
+            <div class="table-responsive mx-3">
+                <table class="table border border-2 border-dark">
+                    <tr class="table-dark">
+                        <th>#</th>
+                        <th>Nombre de Plato</th>
+                        <th>Cantidad</th>
+                        <th>Precio</th>
+                        <th>Total</th>
+                    </tr> 
+                    <tr class="table-secondary" th:each="filtroVenta, status : ${filtroVentas}">
+                        <td th:text="${status.count}"></td>
+                        <td th:text="${filtroVenta.idProducto.descripcion}" id="descripcionData">Descripcion</td>
+                        <td th:text="${filtroVenta.cantidad}">Cantidad</td>
+                        <td th:text="${filtroVenta.precio}">Precio</td>
+                        <td th:text="${filtroVenta.total}">Total</td>
+                    </tr>
+                </table>
+            </div>   
+            <div th:if="${filtroVentas == null or filtroVentas.empty}">
+                La lista de ventas está vacía
+            </div>
+            <br>
+            <label>Monto Total <span th:text="${montoTotal}"></span></label>
+            <br><br>
+            <div th:if="${botonVenta == 1}">
+                <a class="btn btn-secondary" href="/listadoVentas">Regresar ventas</a>
+                <a class="btn btn-secondary" href="/listadoPagos" style="display: none;">Regresar pagos </a>
+            </div>
+            <div th:if="${botonVenta == 0}">
+                <a class="btn btn-secondary" href="/listadoVentas"  style="display: none;">Regresar ventas </a>
+                <a class="btn btn-secondary" href="/listadoPagos">Regresar pagos </a>
+            </div>
+        </div>
+    </body>
+</html>
diff --git a/src/main/resources/templates/Venta/listadoPagos.html b/src/main/resources/templates/Venta/listadoPagos.html
new file mode 100644
index 0000000..a731edc
--- /dev/null
+++ b/src/main/resources/templates/Venta/listadoPagos.html
@@ -0,0 +1,74 @@
+<!DOCTYPE html>
+<html xmlns:th="http://www.thymeleaf.org">
+    <head>
+        <title>TODO supply a title</title>
+        <meta charset="UTF-8">
+        <meta name="viewport" content="width=device-width, initial-scale=1.0">
+        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css">
+        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
+        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">   
+        <link href="styles.css" rel="stylesheet" type="text/css"/>      
+        <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
+    </head>
+    <body class=" bg-white, text-black">
+        <div th:replace="menu :: encabezado-menu"></div>
+        <div th:replace="menu :: contenedor-menu"></div>
+
+        <nav class="navbar navbar-expand-sm navbar-dark bg-success" id="navbar">
+            <div class="container-fluid col-md-10">
+                <a class="navbar-brand" href="#">
+                    <p class="fs-4 text-black fw-bold align-bottom  my-3  " > Listado de Pagos</p>
+                </a>
+                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
+                    <span class="navbar-toggler-icon">
+                    </span>
+                </button>
+            </div>
+        </nav>
+
+        <br><br>
+        <div class="mb-3" style="display: inline-block; flex-flow: row; margin-left: 24px">
+            <form action="filtrarPagoFecha" method="post">
+                <label>Ingresar primera fecha:</label>
+                <input type="date" name="fecha1" class="form-control" style="width: 250px; display: inline; margin-right: 20px" required="required">
+                <label>Ingresar segunda fecha:</label>
+                <input type="date" name="fecha2" class="form-control" style="width: 250px; display: inline; margin-right: 20px" required="required">
+                <button class="btn btn-success" type="submit" id="button-addon2"><i class="bi bi-search"></i> Buscar</button>
+                <a class="btn btn-secondary" href="/listadoPagos" role="button">Limpiar filtro</a>
+            </form>
+        </div>
+
+        <div class="m-5 p-5 bg-secondary bg-opacity-75 position-relative">
+            <h2 class="mb-5 fs-1 text-center text-uppercase text-white">
+                Listado de Pagos
+            </h2>
+            <div class="table-responsive mx-3">
+                <table class="table border border-2 border-dark">
+                    <tr class="table-dark">
+                        <th>#</th>
+                        <th>Fecha</th>
+                        <th>Pago total</th>
+                        <th>Nombre de tarjeta</th>
+                        <th>Venta</th>
+                    </tr>                      
+                    <tr class="table-secondary" th:each="pago, status : ${pagos}">
+                        <td th:text="${status.count}"></td>
+                        <td th:text="${pago.fecha}">fecha</td>
+                        <td th:text="${pago.idVenta.pagoTotal}">total</td>
+                        <td th:text="${pago.idTarjeta.nombre}">fecha</td>
+                        <td>
+                            <a th:href="@{/buscarDetalleVenta(idVenta=${pago.idVenta.idVenta}, inicio=${0})}">Ver detalle</a>
+                        </td>
+                    </tr>
+                </table>
+            </div>   
+            <div th:if="${pagos == null or pagos.empty}">
+                La lista de pagos está vacía
+            </div>
+            <br>
+            <label>Monto Total : <span th:text="${montoTotal}"></span></label>
+            <br><br>
+        </div>
+
+    </body>
+</html>
diff --git a/src/main/resources/templates/Venta/listadoVentas.html b/src/main/resources/templates/Venta/listadoVentas.html
new file mode 100644
index 0000000..91fe187
--- /dev/null
+++ b/src/main/resources/templates/Venta/listadoVentas.html
@@ -0,0 +1,73 @@
+<!DOCTYPE html>
+<html xmlns:th="http://www.thymeleaf.org">
+    <head>
+        <title>TODO supply a title</title>
+        <meta charset="UTF-8">
+        <meta name="viewport" content="width=device-width, initial-scale=1.0">
+        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css">
+        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
+        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">   
+        <link href="styles.css" rel="stylesheet" type="text/css"/>      
+        <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
+    </head>
+    <body class=" bg-white, text-black">
+        <div th:replace="menu :: encabezado-menu"></div>
+        <div th:replace="menu :: contenedor-menu"></div>
+
+        <nav class="navbar navbar-expand-sm navbar-dark bg-success" id="navbar">
+            <div class="container-fluid col-md-10">
+                <a class="navbar-brand" href="#">
+                    <p class="fs-4 text-black fw-bold align-bottom  my-3  " > Listado de Ventas</p>
+                </a>
+                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
+                    <span class="navbar-toggler-icon">
+                    </span>
+                </button>
+            </div>
+        </nav>
+
+        <br><br>
+        <div class="mb-3" style="display: inline-block; flex-flow: row; margin-left: 24px">
+            <form action="filtrarVentaFecha" method="post">
+                <label>Ingresar primera fecha:</label>
+                <input type="date" name="fecha1" class="form-control" style="width: 250px; display: inline; margin-right: 20px" required="required">
+                <label>Ingresar segunda fecha:</label>
+                <input type="date" name="fecha2" class="form-control" style="width: 250px; display: inline; margin-right: 20px" required="required">
+                <button class="btn btn-success" type="submit" id="button-addon2"><i class="bi bi-search"></i> Buscar</button>
+                <a class="btn btn-secondary" href="/listadoVentas" role="button">Limpiar filtro</a>
+            </form>
+        </div>
+
+        <div class="m-5 p-5 bg-secondary bg-opacity-75 position-relative">
+            <h2 class="mb-5 fs-1 text-center text-uppercase text-white">
+                Listado de Ventas
+            </h2>
+            <div class="table-responsive mx-3">
+                <table class="table border border-2 border-dark">
+                    <tr class="table-dark">
+                        <th>#</th>
+                        <th>Fecha</th>
+                        <th>Cancelado</th>
+                        <th>Ver detalle</th>
+                    </tr> 
+                    <tr class="table-secondary" th:each="venta, status : ${ventas}">
+                        <td th:text="${status.count}"></td>
+                        <td th:text="${venta.fecha}">fecha</td>
+                    <div th:if="${venta.cancelado == 1}">
+                        <td>Sí</td>
+                    </div>
+                    <div th:if="${venta.cancelado == 0}">
+                        <td>No</td>
+                    </div>
+                    <td>
+                        <a th:href="@{/buscarDetalleVenta(idVenta=${venta.idVenta}, inicio=${1})}"><i class="bi bi-file-earmark-text"></i></a>
+                    </td>
+                    </tr>
+                </table>
+            </div>   
+            <div th:if="${ventas == null or ventas.empty}">
+                La lista de ventas está vacía
+            </div>
+        </div>
+    </body>
+</html>
diff --git a/src/main/resources/templates/dashboard.html b/src/main/resources/templates/dashboard.html
new file mode 100644
index 0000000..6a9706f
--- /dev/null
+++ b/src/main/resources/templates/dashboard.html
@@ -0,0 +1,55 @@
+<html>
+    <head>
+        <title>Dashboard</title>
+        <link rel="stylesheet" href="estilos.css">
+    </head>
+    <body>
+        <div class="dashboard">
+            <div class="sidebar">
+                <!-- Menú de navegación lateral -->
+                <ul>
+                    <li><a href="#">Inicio</a></li>
+                    <li><a href="#">Ventas</a></li>
+                    <li><a href="#">Clientes</a></li>
+                    <li><a href="#">Productos</a></li>
+                    <!-- Agrega más elementos de menú según tus necesidades -->
+                </ul>
+            </div>
+            <div class="main-content">
+                <!-- Contenido principal del dashboard -->
+                <h1>Bienvenido al Dashboard</h1>
+                <h2>Reporte de Ventas Vendidas</h2>
+                <table>
+                    <thead>
+                        <tr>
+                            <th>Fecha</th>
+                            <th>Cliente</th>
+                            <th>Producto</th>
+                            <th>Cantidad</th>
+                            <th>Precio Unitario</th>
+                            <th>Subtotal</th>
+                        </tr>
+                    </thead>
+                    <tbody>
+                        <tr>
+                            <td>2023-09-10</td>
+                            <td>Cliente A</td>
+                            <td>Producto X</td>
+                            <td>2</td>
+                            <td>$10.00</td>
+                            <td>$20.00</td>
+                        </tr>
+                        <tr>
+                            <td>2023-07-02</td>
+                            <td>Cliente B</td>
+                            <td>Producto Y</td>
+                            <td>3</td>
+                            <td>$15.00</td>
+                            <td>$45.00</td>
+                        </tr>
+                        <!-- Aquí puedes agregar más filas con los datos de las ventas vendidas -->
+                    </tbody>
+                </table>
+            </div>
+        </div>
+    </body>
diff --git a/src/main/resources/templates/gestionProducto.html b/src/main/resources/templates/gestionProducto.html
new file mode 100644
index 0000000..42beb54
--- /dev/null
+++ b/src/main/resources/templates/gestionProducto.html
@@ -0,0 +1,77 @@
+<!DOCTYPE html>
+<html xmlns:th="http://www.thymeleaf.org">
+    <head>
+        <title>Productos</title>
+        <meta charset="UTF-8">
+        <meta name="viewport" content="width=device-width, initial-scale=1.0">
+        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css">
+        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
+        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">   
+        <link href="styles.css" rel="stylesheet" type="text/css"/>      
+        <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
+    </head>
+    <body class=" bg-white, text-black">
+        <div th:replace="menu :: encabezado-menu"></div>
+        <div th:replace="menu :: contenedor-menu"></div>
+
+        <nav class="navbar navbar-expand-sm navbar-dark bg-success" id="navbar">
+            <div class="container-fluid col-md-10">
+                <a class="navbar-brand" href="#">
+                    <p class="fs-4 text-black fw-bold align-bottom  my-3  " > Gestión de Productos </p>
+                </a>
+                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
+                    <span class="navbar-toggler-icon">
+                    </span>
+                </button>
+            </div>
+        </nav>
+
+        <div class="m-5 p-5 bg-secondary bg-opacity-75 position-relative">
+            <h2 class="mb-5 fs-1 text-center text-uppercase text-white">
+                Listado de Productos
+            </h2>
+            <div class="table-responsive mx-3">
+                <table class="table border border-2 border-dark">
+                    <tr class="table-dark">
+                        <th>#</th>
+                        <th>Nombre</th>
+                        <th>Descripción</th>
+                        <th>Precio</th>
+                        <th>Estado</th>
+                        <!--<th>Imagen</th>-->
+                        <th>Acciones</th>
+                    </tr> 
+                    <tr class="table-secondary" th:each="producto, status : ${productos}">
+                        <td th:text="${status.count}"></td>
+                        <td th:text="${producto.nombre}">Nombre</td>
+                        <td th:text="${producto.descripcion}">Descripción</td>
+                        <td th:text="${producto.precio}">Precio</td>
+                    <div th:if="${producto.estado == 1}">
+                        <td>Activo</td>
+                    </div>
+                    <div th:if="${producto.estado == 0}">
+                        <td>Inactivo</td>
+                    </div>
+                    <!--<td>
+                        <img class="img-thumbnail rounded float-left" th:src="@{'/images/'+${producto.imagen}}" th:alt="${producto.imagen}" style="height: 50px">
+                    </td>-->
+                    <td>
+                              <a class="btn btn-success opc p-0 ps-1 " th:href="@{/buscarProducto(idProducto=${producto.idProducto})}">
+                                  <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor">
+                                  <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z"/>
+                                  <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z"/>
+                                  </svg>
+                              </a>
+                    </td>
+                    </tr>  
+                </table>
+                <div class="d-flex justify-content-center">
+                    <a class="btn btn-secondary btn btn-dark" href="/nuevoProducto">
+                        Agregar Producto
+                        <i class="bi bi-plus-circle-fill"></i>
+                    </a>
+                </div>
+            </div>   
+        </div>
+    </body>
+</html>
diff --git a/src/main/resources/templates/gestionProductoFormulario.html b/src/main/resources/templates/gestionProductoFormulario.html
new file mode 100644
index 0000000..7c1cf1e
--- /dev/null
+++ b/src/main/resources/templates/gestionProductoFormulario.html
@@ -0,0 +1,105 @@
+<!DOCTYPE html>
+<html xmlns:th="http://www.thymeleaf.org">
+    <head>
+        <title>Nuevo producto</title>
+        <meta charset="UTF-8">
+        <meta name="viewport" content="width=device-width, initial-scale=1.0">
+        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css">
+        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
+        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">   
+        <link href="styles.css" rel="stylesheet" type="text/css"/>
+        <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
+    </head>
+    <body>
+        <nav class="navbar navbar-expand-sm navbar-dark bg-success" id="navbar">
+            <div class="container-fluid col-md-10">
+                <a class="navbar-brand" href="#">
+                    <div th:if="${opcionEditar == 0}">
+                        <p class="fs-4 text-black fw-bold align-bottom my-3" >Crear Producto</p>
+                    </div>
+                    <div th:if="${opcionEditar == 1}">
+                        <p class="fs-4 text-black fw-bold align-bottom my-3" >Editar Producto</p>
+                    </div>
+                </a>
+                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
+                    <span class="navbar-toggler-icon">
+                    </span>
+                </button>
+            </div>
+        </nav>
+        
+        <div th:if="${opcionEditar == 1}" id='center' class="main center">
+            <form action="actualizarProducto" method="POST" enctype="multipart/form-data">
+                <div class="mb-3" style="display: none">
+                    <label>idProducto</label>
+                    <input type="text" class="form-control" placeholder="id" name="idProducto" th:value="${producto.idProducto}">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-paperclip"></i>
+                    <label>Nombre</label>
+                    <input type="text" class="form-control" placeholder="Nombre" name="nombre" required="required" th:value="${producto.nombre}">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-paperclip"></i>
+                    <label>Descripción</label>
+                    <input type="text" class="form-control" placeholder="Descripción" name="descripcion" required="required" th:value="${producto.descripcion}">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-currency-exchange"></i>
+                    <label>Precio</label>
+                    <input type="number" step="any" class="form-control" placeholder="Precio" name="precio" required="required" th:value="${producto.precio}">
+                </div>
+                
+                <div class="mb-3">
+                    <label>Estado</label>
+                    <select class="form-select" name="estado" required="required">
+                        <div th:if="${producto.estado == 1}">
+                            <option value="1" selected>Activo</option>
+                            <option value="0">Inactivo</option>
+                        </div>
+                        <div th:if="${producto.estado == 0}">
+                            <option value="0" selected>Inactivo</option>
+                            <option value="1">Activo</option>
+                        </div>
+                    </select>
+                </div>
+                
+                <!--<div class="mb-3">
+                    <i class="bi bi-image"></i>
+                    <label>Imagen</label>
+                    <input type="file" class="form-control" placeholder="Ingresar imagen" name="imagen" required="required" th:value="${producto.imagen}">
+                </div>-->
+                <input class="btn btn-secondary btn btn-dark" type="submit" value="Crear">
+                <a class="btn btn-danger" href="/gestionProductos">Cancelar</a>
+            </form>
+        </div>
+
+        <!--CREAR PRODUCTO-->
+        <div th:if="${opcionEditar == 0}" id='center' class="main center">
+            <form action="registrarProducto" method="POST" enctype="multipart/form-data">
+                <div class="mb-3">
+                    <i class="bi bi-paperclip"></i>
+                    <label>Nombre</label>
+                    <input type="text" class="form-control" placeholder="Nombre" name="nombre" required="required">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-paperclip"></i>
+                    <label>Descripción</label>
+                    <input type="text" class="form-control" placeholder="Descripción" name="descripcion" required="required">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-currency-exchange"></i>
+                    <label>Precio</label>
+                    <input type="number" step="any" class="form-control" placeholder="Precio" name="precio" required="required">
+                </div>
+                <!--<div class="mb-3">
+                    <i class="bi bi-image"></i>
+                    <label>Imagen</label>
+                    <input type="file" class="form-control" placeholder="Ingresar imagen" name="imagen">
+                </div>-->
+                <input class="btn btn-secondary btn btn-dark" type="submit" value="Crear">
+                <a class="btn btn-danger" href="/gestionProductos">Cancelar</a>
+            </form>
+        </div>
+    </body>
+</html>
diff --git a/src/main/resources/templates/index.html b/src/main/resources/templates/index.html
new file mode 100644
index 0000000..e6ea5f9
--- /dev/null
+++ b/src/main/resources/templates/index.html
@@ -0,0 +1,229 @@
+<!DOCTYPE html>
+<html>
+    <head>
+        <title>Página Principal | Proyecto</title>
+        <meta charset="UTF-8">
+        <meta name="viewport" content="width=device-width, initial-scale=1.0">
+        <link href="estilos.css" rel="stylesheet">
+        <script src="javascripts.js"></script>
+        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css">
+        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
+                integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p"
+        crossorigin="anonymous"></script>
+        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"
+              rel="stylesheet"
+              integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3"
+              crossorigin="anonymous">
+        <link rel="stylesheet" href="/scss/custom.css">
+        <link rel="stylesheet" href="css/bootstrap.min.css" crossorigin="anonymous">
+        <link rel="stylesheet" href="css/main.css">
+        <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
+        <!-- Importar la biblioteca Chart.js -->
+        <script src="https://cdn.jsdelivr.net/npm/chart.js@3.5.1"></script>
+        <style>
+            #dashboard {
+                display: flex;
+                justify-content: space-between;
+                align-items: center;
+                flex-wrap: wrap;
+            }
+
+            .chart-container {
+                width: 400px;
+                height: 300px;
+                margin-bottom: 20px;
+            }
+
+            .sales-container, .products-container, .customers-container {
+                background-color: lightgreen; /* Cambia el color aquí */
+                padding: 10px;
+                border-radius: 5px;
+            }
+        </style>
+    </head>
+    <body class="bg-white text-black">
+        <div th:replace="menu :: contenedor-menu"></div>
+        <nav class="navbar navbar-dark bg-black">
+            <div class="container-fluid">
+                <button class="navbar-toggler shadow-none" type="button" data-bs-toggle="offcanvas"
+                        data-bs-target="#offcanvasExample" aria-controls="offcanvasExample">
+                    <span class="navbar-toggler-icon"></span>
+                </button>
+            </div>
+        </nav>
+        <nav class="navbar navbar-expand-sm navbar-dark bg-success" id="navbar">
+            <div class="container-fluid col-md-10">
+                <a class="navbar-brand" href="#">
+                    <img width="140" height="110" src="eldorado.jpg">
+                </a>
+                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent"
+                        aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
+                    <span class="navbar-toggler-icon"></span>
+                </button>
+                <div class="collapse navbar-collapse  col-md-4 ms-auto " id="navbarSupportedContent">
+                    <ul class="navbar-nav ms-auto">
+                        <li class="nav-item"><a class="nav-link h5 text-black" aria-current="page" href="#">Inicio</a></li>
+                        <li class="nav-item"><a class="nav-link h5 text-black" href="#">Nosotros</a></li>
+                        <li class="nav-item"><a class="nav-link h5 text-black " href="#">Servicio</a></li>
+                        <li class="nav-item"><a class="nav-link h5 text-black" href="#">Contacto</a></li>
+                        <li class="nav-item"><a class="nav-link h5 text-black" href="carritoCompras"><i
+                                    class="bi bi-cart4"></i></a></li>
+                    </ul>
+                </div>
+            </div>
+        </nav>
+        <div id="menu">
+            <div class="container-ms p-2 bg-warning">
+                <div class="row pt-5">
+                    <h3 class="text-center pb-2 pt-5 h1">EL DORADO</h3>
+                </div>
+
+                <div class="row my-5 mx-4">
+                    <div class="col-sm">
+                        <div class="card w-70 card-border mb-5">
+                            <img src="pollo14.png" class="card-img-top w-100" alt="...">
+                            <div class="card-body">
+                                <p class="card-text h1"> 1/4 POLLO</p>
+                            </div>
+                        </div>
+                    </div>
+                    <div class="col-sm">
+                        <div class="card w-70 card-border mb-5">
+                            <img src="pollo12111.jpg" class="card-img-top w-110" alt="...">
+                            <div class="card-body">
+                                <p class="card-text h1"> 1/2 POLLO</p>
+                            </div>
+                        </div>
+                    </div>
+                    <div class="col-sm">
+                        <div class="card w-70 card-border mb-5">
+                            <img src="1pollo.jpg" class="card-img-top w-100" alt="...">
+                            <div class="card-body">
+                                <p class="card-text-success h1"> 1 POLLO</p>
+                            </div>
+                        </div>
+                    </div>
+
+                    <div id="menu">       
+                        <div class="container-ms p-2 bg-warning">
+                            <div class="row pt-5">
+                                <div class="col-12">
+                                    <div class="bg-green p-3">
+                                        <h2 class="text-center pb-2 pt-5 h1">Gráficos de Ventas</h2>
+                                    </div>
+                                </div>
+                            </div>
+
+                            <div id="dashboard">
+                                <div class="chart-container sales-container">
+                                    <canvas id="salesChart"></canvas>
+                                </div>
+                                <div class="chart-container products-container">
+                                    <canvas id="productsChart"></canvas>
+                                </div>
+                                <div class="chart-container customers-container">
+                                    <canvas id="customersChart"></canvas>
+                                </div>
+                            </div>
+                            <div class="offcanvas offcanvas-start bg-warning text-black" tabindex="-1" id="offcanvasExample"
+                                 aria-labelledby="offcanvasExampleLabel">
+                                <div class="offcanvas-header">
+                                    <h5 class="offcanvas-title" id="offcanvasExampleLabel">Menú</h5>
+                                    <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas"
+                                            aria-label="Close"></button>
+                                </div>
+                                <div class="offcanvas-body bg-black text-black">
+                                    <a class="nav-link active" aria-current="page" th:href="@{/Ingresar}">Inicio</a>
+                                    <div>
+                                        <nav class="nav flex-column">
+                                    </div>
+                                    <a class="nav-link" th:href="@{/Gestionar-Productos}"> Productos</a>
+                                    <a class="nav-link" th:href="@{/Lista-Clientes}"> Clientes</a>
+                                    <a class="nav-link" th:href="@{/Logout}">Log out</a>
+                                    </nav>
+                                </div>
+                            </div>
+                        </div>
+                        <script>
+                            // Obtener los datos de ventas, productos y clientes desde tu backend
+                            var salesData = [100, 200, 300, 150, 250];
+                            var productsData = [50, 100, 75, 120, 80];
+                            var customersData = [80, 120, 90, 110, 100];
+
+                            // Configuración del gráfico de ventas
+                            var salesConfig = {
+                            type: 'line',
+                            data: {
+                            labels: ['Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre'],
+                            datasets: [{
+                            label: 'Ventas',
+                            data: salesData,
+                            backgroundColor: 'rgba(75, 192, 192, 1)', // Cambia el color aquí
+                            borderColor: 'rgba(75, 192, 192, 1)',
+                            borderWidth: 1
+                            }]
+                            },
+                            options: {
+                            scales: {
+                            y: {
+                            beginAtZero: true
+                            }
+                            }
+                            }
+                            };
+
+                            // Configuración del gráfico de productos
+                            var productsConfig = {
+                            type: 'bar',
+                            data: {
+                                labels: ['Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre'],
+                            datasets: [{
+                            label: 'Productos',
+                            data: productsData,
+                            backgroundColor: 'rgba(54, 162, 235, 1)', // Color
+                            borderColor: 'rgba(54, 162, 235, 1)',
+                            borderWidth: 1
+                            }]
+                            },
+                            options: {
+                            scales: {
+                            y: {
+                            beginAtZero: true
+                            }
+                            }
+                            }
+                            };
+
+                            // Configuración del gráfico de clientes
+                            var customersConfig = {
+                            type: 'bar',
+                            data: {
+                            labels: ['Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre'],
+                            datasets: [{
+                            label: 'Clientes',
+                            data: customersData,
+                            backgroundColor: 'rgba(255, 99, 132, 1)', // Color
+                            borderColor: 'rgba(255, 99, 132, 1)',
+                            borderWidth: 1
+                            }]
+                            },
+                            options: {
+                            scales: {
+                            y: {
+                            beginAtZero: true
+                            }
+                            }
+                            }
+                            };
+
+                            // Crear instancias de los gráficos
+                            var salesChart = new Chart(document.getElementById('salesChart'), salesConfig);
+                            var productsChart = new Chart(document.getElementById('productsChart'), productsConfig);
+                            var customersChart = new Chart(document.getElementById('customersChart'), customersConfig);
+                        </script>
+                    </div>
+                </div>
+            </div>
+        </div>
+    </body>
+</html>
diff --git a/src/main/resources/templates/listadoUsuario.html b/src/main/resources/templates/listadoUsuario.html
new file mode 100644
index 0000000..2ca3510
--- /dev/null
+++ b/src/main/resources/templates/listadoUsuario.html
@@ -0,0 +1,111 @@
+<!DOCTYPE html>
+<html xmlns:th="http://www.thymeleaf.org">
+    <head>
+        <title>Actualizar usuarios</title>
+        <meta charset="UTF-8">
+        <meta name="viewport" content="width=device-width, initial-scale=1.0">
+        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css">
+        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
+        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">   
+        <link href="styles.css" rel="stylesheet" type="text/css"/>      
+        <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
+    </head>
+
+    <body class=" bg-white, text-black">
+        <div th:replace="menu :: encabezado-menu"></div>
+        <div th:replace="menu :: contenedor-menu"></div>
+
+        <nav class="navbar navbar-expand-sm navbar-dark bg-success" id="navbar">
+            <div class="container-fluid col-md-10">
+                <a class="navbar-brand" href="#">
+                    <p class="fs-4 text-black fw-bold align-bottom  my-3  " > Usuarios </p>
+                </a>
+                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
+                    <span class="navbar-toggler-icon">
+                    </span>
+                </button>
+            </div>
+        </nav>
+
+        <div class="m-5 p-5 bg-secondary bg-opacity-75 position-relative">
+            <h2 class="mb-5 fs-1 text-center text-uppercase text-white">
+                Listado de Usuarios
+            </h2>
+            <div class="table-responsive mx-3">
+                <table class="table border border-2 border-dark">
+                    <tr class="table-dark">
+                        <th>#</th>
+                        <th>Nombre</th>
+                        <th>Apellido</th>
+                        <th>Teléfono</th>
+                        <th>Email</th>
+                        <th>Nombre Usuario</th>
+                        <th>Estado</th>
+                        <th>Clave</th>
+                        <th>Acciones</th>
+                    </tr> 
+                    <tr class="table-secondary" th:each="usuario, status : ${usuarios}">
+                        <td th:text="${status.count}"></td>
+                        <td th:text="${usuario.idPersona.nombre}">Nombre</td>
+                        <td th:text="${usuario.idPersona.apellido}">Apellido</td>
+                        <td th:text="${usuario.idPersona.telefono}">Teléfono</td>
+                        <td th:text="${usuario.idPersona.email}">Email</td>
+                        <td th:text="${usuario.nombreUsuario}">NombreUsuario</td>
+                    <div th:if="${usuario.estado == 1}">
+                        <td>Activo</td>
+                    </div>
+                    <div th:if="${usuario.estado == 0}">
+                        <td>Inactivo</td>
+                    </div>
+                    <td>******</td>
+                    <td>
+                        <a class="btn btn-success opc p-0 ps-1 " th:href="@{/buscarUsuario(idUsuario=${usuario.idUsuario})}">
+                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor">
+                            <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z"/>
+                            <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z"/>
+                            </svg>
+                        </a>
+                        <!--
+                        <a class="btn btn-danger opc p-0 ps-1" onclick="confirmar(this)" th:href="@{/eliminarUsuario(idUsuario=${usuario.idUsuario})}">
+                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" >
+                            <path d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z"/>
+                            </svg>
+                        </a>
+                        -->
+                    </td>
+                    </tr>  
+                </table>
+
+                <div class="d-flex justify-content-center">
+                    <a class="btn btn-secondary btn btn-dark" href="/nuevoUsuario">
+                        Agregar Usuario
+                        <i class="bi bi-plus-circle-fill"></i>
+                    </a>
+                </div>
+            </div>   
+
+            <script>
+                function confirmar(opcion)
+                {
+                    event.preventDefault();
+
+                    Swal.fire({
+                        title: 'Advertencia!',
+                        text: '¿Esta seguro de eliminar al usuario?',
+                        icon: 'warning',
+                        confirmButtonText: 'Eliminar',
+                        cancelButtonText: 'Cancelar',
+                        showCancelButton: true,
+                        showCloseButton: true
+                    }).then((result) => {
+                        if (result.isConfirmed)
+                        {
+                            location.href = opcion.href;
+                        }
+                    }
+                    );
+                }
+            </script>
+        </div>
+    </body>
+</html>
diff --git a/src/main/resources/templates/listadoclientes.html b/src/main/resources/templates/listadoclientes.html
new file mode 100644
index 0000000..4bb2210
--- /dev/null
+++ b/src/main/resources/templates/listadoclientes.html
@@ -0,0 +1,104 @@
+<html xmlns:th="thymeleaf.org">
+    <head>
+        <title>Lista de clientes</title>
+        <meta charset="UTF-8">
+        <meta name="viewport" content="width=device-width, initial-scale=1.0">
+        <link href="estilos.css" rel="stylesheet">
+        <script src="javascripts.js"></script>
+        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css">
+        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
+        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">   
+        <link rel=" stylesheet " href="/scss/custom.css">        
+        <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
+    </head>
+
+    <body class=" bg-white, text-black">
+        <div th:replace="menu :: encabezado-menu"></div>
+        <div th:replace="menu :: contenedor-menu"></div>
+        <nav class="navbar navbar-expand-sm navbar-dark bg-success" id="navbar">
+            <div class="container-fluid col-md-10">
+                <a class="navbar-brand" href="#">
+                    <p class="fs-4 text-black fw-bold align-bottom  my-3  " > Clientes </p>
+                </a>
+                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
+                    <span class="navbar-toggler-icon">
+                    </span>
+                </button>
+            </div>
+        </nav>
+
+        <div class="m-5 p-5 bg-secondary bg-opacity-75 position-relative">
+            <h2 class="mb-5 fs-1 text-center text-uppercase text-white">
+                Listado de Clientes
+            </h2>
+            <div class="table-responsive mx-3">
+                <table class="table border border-2 border-dark">
+                    <tr class="table-dark">
+                        <td>Código</td>
+                        <td>Nombre</td>
+                        <td>Apellidos</td>
+                        <td>Correo</td>
+                        <td>Telefono</td>
+                        <td >Acciones</td>
+                    </tr> 
+                    <tr class="table-secondary" th:each="cliente:${clientes}">
+                        <td th:text="${cliente.codigo}"></td>
+                        <td th:text="${cliente.nombre}"></td>                        
+                        <td th:text="${cliente.apellidos}"></td>
+                        <td th:text="${cliente.correo}"></td>
+                        <td th:text="${cliente.telefono}"></td>
+                        <td>
+                            <a class="btn btn-success opc p-0 ps-1 " th:href="@{/editar-cliente}">
+                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor">
+                                <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z"/>
+                                <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z"/>
+                                </svg>
+                            </a>
+
+                            <a class="btn btn-danger opc p-0 ps-1" onclick="confirmar(this)"
+                               th:href="@{/EliminarCliente}">
+                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" >
+                                <path d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z"/>
+                                </svg>
+                            </a>
+                        </td>
+
+                    </tr>  
+                </table>  
+
+                <div class="d-flex justify-content-center">
+                    <a class="btn btn-dark" th:href="@{/Agregar-Cliente}">
+                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-circle-fill" viewBox="0 0 16 16">
+                        <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3v-3z"/>
+                        </svg>
+                        Agregar Cliente
+                    </a>
+                </div>
+
+            </div>   
+
+            <script>
+                function confirmar(opcion)
+                {
+                event.preventDefault();
+
+                Swal.fire({
+                title: 'Advertencia!',
+                text: '¿Esta seguro de eliminar el cliente?',
+                icon: 'warning',
+                confirmButtonText: 'Eliminar',
+                cancelButtonText: 'Cancelar',
+                showCancelButton: true,
+                showCloseButton: true
+                }).then((result) => {
+                if (result.isConfirmed)
+                {
+                location.href = opcion.href;
+                }
+                }
+                );
+                }
+            </script>
+        </div>                  
+    </body>
+</html>
diff --git a/src/main/resources/templates/login.html b/src/main/resources/templates/login.html
new file mode 100644
index 0000000..8e41044
--- /dev/null
+++ b/src/main/resources/templates/login.html
@@ -0,0 +1,75 @@
+<html xmlns:th="thymeleaf.org">
+    <head>
+        <title>Log In | Proyecto</title>
+        <meta charset="UTF-8">
+        <meta name="viewport" content="width=device-width, initial-scale=1.0">
+        <link href="estilos.css" rel="stylesheet">
+        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
+        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
+    </head>
+        <body class="bg-dark text-white">
+        
+        <svg xmlns="http://www.w3.org/2000/svg" style="display: none;"> 
+            <symbol id="person" fill="currentColor" viewBox="0 0 16 16">
+                <path d="M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z"/>
+            </symbol>
+            <symbol id="candado" fill="currentColor" viewBox="0 0 16 16">
+                <path d="M8 1a2 2 0 0 1 2 2v4H6V3a2 2 0 0 1 2-2zm3 6V3a3 3 0 0 0-6 0v4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2z"/>
+            </symbol>  
+            <symbol id="exclamation-triangle-fill" fill="currentColor" viewBox="0 0 16 16">
+                <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z"/>
+            </symbol>            
+        </svg>
+        
+        <div class="container-fluid py-1">
+            <div class="row">
+                <div class="col">
+                    <div class="h-200">
+                        <img class="w-100" src="pollolog.jpg">
+                    </div>
+                </div>
+                <div class="col px-3 d-flex">
+                    <div class="pb-5 bg-success my-auto w-100 rounded">
+                        <div class="mb-5">
+                            <div class="w-100 logologin d-flex justify-content-center">
+                                <img class="logologin" src="eldorado.jpg">  
+                            </div>
+                        </div>
+                        <div class="position-relative  bg-opacity-50 p-5 w-75 mx-auto rounded">
+                            <div class="position-absolute top-0 start-50 translate-middle text-dark">
+                                <h1 class=""> Bienvenido</h1> 
+                            </div>
+                            <form action="Ingresar" method="post" class="w-75 mx-auto">
+                                <div class="input-group">
+                                    <span class="input-group-text bg-black border border-dark text-white" id="nom">
+                                        <svg class="bi flex-shrink-0 me-2 d-inline" width="24" height="24" role="img"><use xlink:href="#person"/></svg>
+                                    </span>
+                                    <input autocomplete="off" type="text" name="user" class="form-control shadow-none border-none" placeholder="Usuario" aria-describedby="nom" required>
+                                </div>                    
+                                <div class="input-group mt-3">
+                                    <span class="input-group-text bg-black border border-dark text-white" id="ape">
+                                        <svg class="bi flex-shrink-0 me-2 d-inline" width="24" height="24" role="img"><use xlink:href="#candado"/></svg>
+                                    </span>
+                                    <input type="password" name="pass" class="form-control shadow-none" placeholder="Contraseña" aria-describedby="ape" required>
+                                </div>
+                                <div class="alert alert-danger alert-dismissible py-3" style="font-size: 12px" role="alert" th:if="${incorrecto==1}">                                    
+                                    Usuario y/o contraseña no reconocido
+                                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
+                                </div>  
+
+                                <div class="mt-3">
+                                    <center>
+                                        <button type="submit" class="btn-yellow btn-sm w-50 btn-outline-dark fs-4 mx-2">Ingresar</button>  
+                                    </center>
+                                </div>
+                            </form>
+                        </div>
+                    </div>
+                </div>
+            </div>
+        </div>
+        
+    </body>
+            
+     
+</html>
diff --git a/src/main/resources/templates/menu.html b/src/main/resources/templates/menu.html
new file mode 100644
index 0000000..2365c0d
--- /dev/null
+++ b/src/main/resources/templates/menu.html
@@ -0,0 +1,60 @@
+<!DOCTYPE html>
+<html xmlns:th="http://www.thymeleaf.org">
+    <head>
+        <title>TODO supply a title</title>
+        <meta charset="UTF-8">
+        <meta name="viewport" content="width=device-width, initial-scale=1.0">
+        <link href="estilos.css" rel="stylesheet">
+        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css">
+        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
+        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">   
+        <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
+
+        <!-- JavaScript Bundle with Popper -->
+        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/js/bootstrap.bundle.min.js" integrity="sha384-pprn3073KE6tl6bjs2QrFaJGz5/SUsLqktiwsUTF55Jfv3qYSDhgCecCxMW52nD2" crossorigin="anonymous"></script>
+
+        <!---->
+        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
+        <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
+        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
+
+        <!-- Sweet Alert -->
+        <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
+        <script src="script-usuario.js"></script>
+
+    </head>
+
+    <body class=" bg-white, text-black">
+        <div th:fragment="encabezado-menu">
+            <nav class="navbar navbar-dark bg-black">
+                <div class="container-fluid">
+                    <button class="navbar-toggler shadow-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasExample" aria-controls="offcanvasExample">
+                        <span class="navbar-toggler-icon"></span>
+                    </button>
+            </nav>
+        </div>
+
+        <div th:fragment="contenedor-menu" class="offcanvas offcanvas-start bg-warning  text-black" tabindex="-1" id="offcanvasExample" aria-labelledby="offcanvasExampleLabel">
+            <div class="offcanvas-header">
+                <h5 class="offcanvas-title" id="offcanvasExampleLabel">Menú</h5>
+                <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
+                
+            </div>
+            
+            <div class="offcanvas-body bg-black text-black-">
+                <a  class="nav-link active " aria-current="page" th:href="@{/Ingresar}">Inicio</a>
+                <a class="nav-link active" th:href="@{/gestionProductos}"> Productos</a>
+                <a class="nav-link active" th:href="@{/listadoCliente}">Clientes</a>
+                <a class="nav-link active" th:href="@{/listadoUsuario}"> Usuarios</a>
+                <a class="nav-link active" th:href="@{/listadoColaborador}"> Colaboradores</a>
+                <a class="nav-link active" th:href="@{/listadoAreaTrabajo}"> Área Trabajo</a>
+                <a class="nav-link active" th:href="@{/listadoVentas}"> Ventas</a>
+                <a class="nav-link active" th:href="@{/listadoPagos}"> Pagos</a>
+                <a class="nav-link active" th:href="@{/listadoDeliverys}"> Deliverys</a>
+                <!--<a class="nav-link" th:href="@{/listadoReporte}"> Reporte</a> !-->
+                <a class="nav-link active" th:href="@{/Logout}">Log out</a>
+                </nav>
+            </div>
+        </div>
+    </body>
+</html>
diff --git a/src/main/resources/templates/usuarioFormular.html b/src/main/resources/templates/usuarioFormular.html
new file mode 100644
index 0000000..5f72cbb
--- /dev/null
+++ b/src/main/resources/templates/usuarioFormular.html
@@ -0,0 +1,128 @@
+<!DOCTYPE html>
+<html xmlns:th="http://www.thymeleaf.org">
+    <head>
+        <title>Editar Usuario</title>
+        <meta charset="UTF-8">
+        <meta name="viewport" content="width=device-width, initial-scale=1.0">
+        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css">
+        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
+        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">   
+        <link href="styles.css" rel="stylesheet" type="text/css"/>
+        <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
+    </head>
+    <body>
+
+        <nav class="navbar navbar-expand-sm navbar-dark bg-success" id="navbar">
+            <div class="container-fluid col-md-10">
+                <a class="navbar-brand" href="#">
+                    <div th:if="${opcionEditar == 0}">
+                        <p class="fs-4 text-black fw-bold align-bottom my-3" >Crear Usuario</p>
+                    </div>
+                    <div th:if="${opcionEditar == 1}">
+                        <p class="fs-4 text-black fw-bold align-bottom my-3" >Editar Usuario</p>
+                    </div>
+                </a>
+                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
+                    <span class="navbar-toggler-icon">
+                    </span>
+                </button>
+            </div>
+        </nav>
+
+        <div th:if="${opcionEditar == 1}" id='center' class="main center">
+            <form action="actualizarUsuario" method="POST">
+                <div class="mb-3" style="display: none">
+                    <label>idUsuario</label>
+                    <input type="text" class="form-control" placeholder="id" name="idUsuario" th:value="${usuario.idUsuario}">
+                </div>
+                <div class="mb-3" style="display: none">
+                    <label>idUsuario</label>
+                    <input type="text" class="form-control" placeholder="id" name="idPersona" th:value="${usuario.idPersona.idPersona}">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-person-fill"></i>
+                    <label>Nombre</label>
+                    <input type="text" class="form-control" placeholder="Nombre" name="nombre" th:value="${usuario.idPersona.nombre}" required="true">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-person-fill"></i>
+                    <label>Apellido</label>
+                    <input type="text" class="form-control" placeholder="Apellido" name="apellido" th:value="${usuario.idPersona.apellido}" required="true">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-envelope-fill"></i>
+                    <label>Email</label>
+                    <input type="text" class="form-control" placeholder="Email" name="email" th:value="${usuario.idPersona.email}" required="true">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-telephone-fill"></i>
+                    <label>Telefono</label>
+                    <input type="text" class="form-control" placeholder="Telefono" name="telefono" th:value="${usuario.idPersona.telefono}" required="true">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-person-fill"></i>
+                    <label>Nombre usuario</label>
+                    <input type="text" class="form-control" placeholder="Nombre usuario" name="nombreUsuario" th:value="${usuario.nombreUsuario}" required="true">
+                </div>
+                <div class="mb-3">
+                    <label>Estado</label>
+                    <select class="form-select" name="estado" required="required">
+                        <div th:if="${usuario.estado == 1}">
+                            <option value="1" selected>Activo</option>
+                            <option value="0">Inactivo</option>
+                        </div>
+                        <div th:if="${usuario.estado == 0}">
+                            <option value="0" selected>Inactivo</option>
+                            <option value="1">Activo</option>
+                        </div>
+                    </select>
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-lock-fill"></i>
+                    <label>Clave</label>
+                    <input type="password" class="form-control" placeholder="Clave" name="clave" th:value="${usuario.clave}" required="true">
+                </div>
+                <input class="btn btn-secondary btn btn-dark" type="submit" value="Actualizar">
+                <a class="btn btn-danger" href="/listadoUsuario">Cancelar</a>
+            </form>
+        </div>
+
+        <!--CREAR USUARIO-->
+        <div th:if="${opcionEditar == 0}" id='center' class="main center">
+            <form action="registrarUsuario" method="POST">
+                <div class="mb-3">
+                    <i class="bi bi-person-fill"></i>
+                    <label>Nombre</label>
+                    <input type="text" class="form-control" placeholder="Nombre" name="nombre" required="required">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-person-fill"></i>
+                    <label>Apellido</label>
+                    <input type="text" class="form-control" placeholder="Apellido" name="apellido" required="required">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-envelope-fill"></i>
+                    <label>Email</label>
+                    <input type="text" class="form-control" placeholder="Email" name="email" required="required">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-telephone-fill"></i>
+                    <label>Telefono</label>
+                    <input type="text" class="form-control" placeholder="Telefono" name="telefono" required="required">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-person-fill"></i>
+                    <label>Nombre usuario</label>
+                    <input type="text" class="form-control" placeholder="Nombre usuario" name="nombreUsuario" required="required">
+                </div>
+                <div class="mb-3">
+                    <i class="bi bi-lock-fill"></i>
+                    <label>Clave</label>
+                    <input type="password" class="form-control" placeholder="Clave" name="clave">
+                </div>
+                <input class="btn btn-secondary btn btn-dark" type="submit" value="Crear">
+                <a class="btn btn-danger" href="/listadoUsuario">Cancelar</a>
+            </form>
+        </div>
+    </body>
+</html>
diff --git a/src/test/java/com/example/proyectocalid/ProyectocalidApplicationTests.java b/src/test/java/com/example/proyectocalid/ProyectocalidApplicationTests.java
new file mode 100644
index 0000000..3546a25
--- /dev/null
+++ b/src/test/java/com/example/proyectocalid/ProyectocalidApplicationTests.java
@@ -0,0 +1,13 @@
+package com.example.proyectocalid;
+
+import org.junit.jupiter.api.Test;
+import org.springframework.boot.test.context.SpringBootTest;
+
+@SpringBootTest
+class ProyectocalidApplicationTests {
+
+	@Test
+	void contextLoads() {
+	}
+
+}
